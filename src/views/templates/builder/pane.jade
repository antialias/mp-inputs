mixin pane(paneViews, paneIndex)
  - let header = constants.header || helpers.getHeader(paneIndex)
  if header
    .header
      span= header
      if paneIndex
        button.back(ev-click=() => helpers.updateClause(state.clauseIndex, {paneIndex: paneIndex - 1}))
  if paneViews.preSearch
    .pre-search= paneViews.preSearch(state)
  if constants.search
    .search
      input(type='text' ev-input=event => helpers.updateClause(state.clauseIndex, {search: event.target.value}))
  if paneViews.content
    .content= paneViews.content(util.extend(state, {paneIndex}))
  if paneViews.footer
    .footer= paneViews.footer(state)

div(class=elementClass)
  if views.panes
    - let activeIndex = helpers.getPaneIndex(state.clauseIndex);
    for paneViews, paneIndex in views.panes
      .pane(style={transform: `translateX(${(paneIndex - activeIndex) * 400}px)`})
        +pane(paneViews, paneIndex)
  else
    .pane.active
        +pane(views)
