- const isStacked = chartOptions.plotStyle == 'stacked';

.bar-chart
  table
    thead
      tr
        th(colSpan=0)
          irb-bar-chart-header(
            headers=JSON.stringify(headers)
            chartMax=JSON.stringify(chartMax)
            attributes={
              mathTypes: JSON.stringify(mathTypes),
            }
          )
    tbody
      for row, i in rows
        tr
          for cell, j in row
            if cell
              if j < row.length - 1
                - const headerText = headers[j] === '$event' ? 'Events' : util.renameProperty(headers[j]);
                - const getLabel = value => headers[j] === '$event' ? util.renameEvent(value) : util.renamePropertyValue(value);

                if !(Array.isArray(cell) && isStacked)
                  td.chart-header(
                    rowSpan=cell.rowSpan || 1
                    style={'min-width': `${$helpers.getHeaderWidth(headerText)}px`}
                  )
                    if Array.isArray(cell)
                      ul
                        for value in cell
                          li(title=getLabel(value))= getLabel(value)
                    else
                      span(title=getLabel(cell.value))= getLabel(cell.value)
              else
                td.chart-data
                  .chart-grid
                    - const numOfGridlines = 4
                    - let gridNumber = 0
                    while gridNumber < (numOfGridlines + 1)
                      .grid-line(class=gridNumber++)
                  ul(class={stacked: isStacked})
                    for value, k in cell
                      li.chart-bar(
                        class={narrow: value / chartMax < .06}
                        style={width: `${value / chartMax * 100}%`}
                      )
                        .background(style={opacity: 1 - (0.6 * k / cell.length)})
                        .label= util.commaizeNumber(value)
