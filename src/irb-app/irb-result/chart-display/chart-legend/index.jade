include ../../../mixins.jade

- const legendDataToDisplay = $helpers.legendDataToDisplay()
- const isSearchActive = $helpers.isSearchActive()
- const isMultiColor = !(report.displayOptions.chartType === 'bar' && report.displayOptions.plotStyle === 'standard' && legendDataToDisplay.length === 1)
- const isFlattenedData = $helpers.isFlattenedData()

.chart-legend
  .header Legend
  .content-wrapper
    .search(class={active: isSearchActive})
      svg-icon(attributes={icon: 'search'})
      focus-input(
        attributes={placeholder: 'search'}
        focusDelay=200
        oninput=$helpers.searchHandler
      )
    sticky-scroll(
      attributes={'refresh-data': JSON.stringify({showing: report.legend.seriesShowing, legendDataToDisplay})}
      class={'has-results': legendDataToDisplay.length}
    )
      .body
        if !legendDataToDisplay.length
          .no-result Your search didn't return any results
        each series, seriesIdx in legendDataToDisplay
          - const isSeriesShowing = report.legend.isSeriesShowing(seriesIdx)
          - const seriesDisplay = report.legend.getSeriesDisplayAtIndex(seriesIdx)
          - const seriesDisplayLabel = $helpers.seriesDisplayOption(seriesIdx)
          if !isFlattenedData
            .sticky-title.info(onclick=() => report.legend.toggleShowSeries(seriesIdx))
              - const titleName = util.renameProperty(series.seriesName)
              .name(
                class={showing: isSeriesShowing}
                title=titleName
              )
                svg-icon(attributes={icon: 'triangle-right'})
                = titleName
              .count #{$helpers.selectedSeriesCount(seriesIdx)}/#{$helpers.totalSeriesCount(seriesIdx)}
          ul.series-values
            if isSeriesShowing
              if !isSearchActive
                li
                  - const allSelected = $helpers.allSeriesSelected(seriesIdx)
                  button.select-all(
                    class={showing: allSelected}
                    onclick=() => $helpers.toggleAllSeriesValue(seriesIdx)
                  )
                    .select-icon.select-all-icon
                      svg-icon(attributes={icon: allSelected ? 'check-checkbox' : 'dash'})
                    .label Select all
              if !series.seriesValues.length
                .no-result= 'No results'
              each value in series.seriesValues
                - const showing = $helpers.isSeriesValueShowing(seriesIdx, value.originalValue)
                li
                  button.series(
                    class={
                      'is-event': series.seriesName === '$event',
                      showing,
                    }
                    onclick=() => $helpers.toggleShowSeriesValue(seriesIdx, value.originalValue)
                  )
                    .select-icon.series-icon(class={
                      color: seriesIdx === 0 && isMultiColor,
                      [`segment-color-${report.legend.getColorForSeries(value.originalValue, isFlattenedData)}`]: showing && seriesIdx === 0,
                    })
                      svg-icon(attributes={icon: 'check-checkbox', empty: !showing})
                    if isFlattenedData
                      - const dataTitle = value.formattedText.join(' / ');
                      if isSearchActive
                        .label.search-result(title=dataTitle)
                          for match in value.matches
                            .flattened-segment
                              +highlight-matches(match)
                      else
                        .label(title=dataTitle)
                          for text in value.formattedText
                            .flattened-segment= text
                    else
                      if isSearchActive
                        .label.search-result(title=value.formattedText)
                          +highlight-matches(value.matches)
                      else
                        .label(title=value.formattedText)= value.formattedText
                      .delete-wrapper
                        .delete-icon
                          svg-icon(
                            attributes={icon: 'x'}
                            onclick=ev => $helpers.deleteToFilter(ev, seriesIdx, value.originalValue)
                          )
          if isSeriesShowing && seriesDisplayLabel
            .display-option(onclick=() => report.legend.toggleSeriesDisplaySetting(seriesIdx))= seriesDisplayLabel
