.irb-result
  .controls= $component.child('chart-controls')
  .chart(class={loading: resultLoading})
    - const processedResult = $helpers.processResult(result);
    case report.displayOptions.chartType
      when 'bar'
        bar-chart(
          attributes={
            'data': JSON.stringify(processedResult),
            'chart-boundaries': JSON.stringify($helpers.getBoundaries()),
            'chart-label': JSON.stringify($helpers.getChartLabel()),
            'chart-options': JSON.stringify($helpers.getChartOptions()),
            'function-label': JSON.stringify($helpers.getFunctionLabel()),
            'sorting': JSON.stringify(report.sorting.bar),
          }
          onchange=$helpers.barChartChange
        )
      when 'line'
        line-chart(attributes={data: JSON.stringify(processedResult), chartOptions: JSON.stringify($helpers.getChartOptions())})
      when 'table'
        - const resourceDescription = $helpers.getFunctionLabel() ? $helpers.getChartLabel() + ` ${$helpers.getFunctionLabel()}` : $helpers.getChartLabel();
        table-chart(
          attributes={
            data: JSON.stringify(util.extend(processedResult, {resourceDescription: resourceDescription})),
            sorting: JSON.stringify(report.sorting.table),
          }
          onchange=$helpers.tableChange
        )
  if resultLoading && report.displayOptions.chartType !== 'line'
    .loader
  mp-toast(
    attributes={
      'message': 'You have new data.',
      'select-text': 'Refresh',
      'showToast': newCachedData
    }
    onclose=$helpers.toastClosed
    onselect=$helpers.toastSelected
  )
