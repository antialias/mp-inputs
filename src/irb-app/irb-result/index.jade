.irb-result
  .controls= $component.child('chart-controls')
  .chart(class={loading: result.loading})
    case report.displayOptions.chartType
      when 'bar'
        bar-chart(
          attributes={
            'data': JSON.stringify($helpers.filterResults(result)),
            'chart-boundaries': JSON.stringify($helpers.getBoundaries()),
            'chart-options': JSON.stringify($helpers.getChartOptions()),
            'math-types': JSON.stringify($helpers.getUniqueShowMathTypes()),
            'show-value-names': JSON.stringify($helpers.getShowValueNames()),
            'sorting': JSON.stringify(report.sorting.bar),
          }
          onchange=$helpers.barChartChange
        )
      when 'line'
        line-chart(attributes={data: JSON.stringify($helpers.filterResults(result)), chartOptions: JSON.stringify($helpers.getChartOptions())})
      when 'table'
        - const clauses = report.sections.show.clauses;
        - let resourceDescription;
        if clauses.length === 1
          - resourceDescription = `${util.capitalize(clauses[0].math)} number of ${util.renameEvent(clauses[0].value.name)}`
        else
          - resourceDescription = 'Number of events'
        table-chart(
          attributes={
            data: JSON.stringify($helpers.tableData(result, resourceDescription)),
            sorting: JSON.stringify(report.sorting.table),
          }
          onchange=$helpers.tableChange
        )
  if result.loading && report.displayOptions.chartType !== 'line'
    .loader
  mp-toast(
    attributes={
      'message': 'You have new data.',
      'select-text': 'Refresh',
      'showToast': newCachedData
    }
    onclose=$helpers.toastClosed
    onselect=$helpers.toastSelected
  )
