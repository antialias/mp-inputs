.irb-result
  .controls= $component.child('chart-controls')
  .chart(class={loading: result.loading})
    case report.chartType
      when 'bar'
        bar-chart(attributes={
          data: JSON.stringify($helpers.filterResults(result)),
          chartBoundaries: JSON.stringify($helpers.getBoundaries()),
          chartOptions: JSON.stringify($helpers.getChartOptions()),
          mathTypes: JSON.stringify($helpers.getUniqueShowMathTypes()),
          showValueNames: JSON.stringify($helpers.getShowValueNames()),
          sorting: JSON.stringify(report.sorting.bar),
        })
      when 'line'
        line-chart(attributes={data: JSON.stringify($helpers.filterResults(result)), chartOptions: JSON.stringify($helpers.getChartOptions())})
      when 'table'
        - const clauses = report.sections.show.clauses;
        - let resourceDescription;
        if clauses.length === 1
          - resourceDescription = `${util.capitalize(clauses[0].math)} number of ${util.renameEvent(clauses[0].value)}`
        else
          - resourceDescription = 'Number of events'
        table-chart(attributes={data: JSON.stringify(util.extend($helpers.filterResults(result), {resourceDescription}))})
  if result.loading && report.chartType !== 'line'
    .loader
  mp-toast(
    attributes={
      'message': 'You have new data.',
      'select-text': 'Refresh',
      'showToast': newCachedData
    }
    onclose=$helpers.toastClosed
    onselect=$helpers.toastSelected
  )
