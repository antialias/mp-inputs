ul.chart-toggle(class={
  'editing-charttype': chartToggle.editingType,
  'enabled': projectHasEvents,
})
  each chartType in $helpers.chartTypes()
    - const isEditingCurrentStyle = chartToggle.editingType === chartType
    - const selectedPlotStyle = $helpers.selectedPlotStyle(chartType)
    - const styleChoicesForChartType = $helpers.styleChoicesForChartType(chartType)
    li.chart-type(
      class=chartType
      class={
        editing: isEditingCurrentStyle,
        disabled: $helpers.isChartTypeDisabled(chartType),
      }
    )
      .toggle-button
        button.label(
          class=[chartType, selectedPlotStyle]
          class={selected: chartType == report.displayOptions.chartType}
          onclick=() => $helpers.onStyleClick(chartType, selectedPlotStyle)
        )
          svg-icon(attributes={icon: chartType})
          = $helpers.formattedChartName(chartType, selectedPlotStyle)
        if styleChoicesForChartType.length > 1
          button.dropdown(onclick=() => $helpers.onDropdownClick(chartType))
            svg-icon(attributes={icon: 'caret-down'})
      if isEditingCurrentStyle
        .chart-style.options
          each plotStyle in styleChoicesForChartType
            button.button-option(
              class=[chartType, plotStyle]
              class={selected: selectedPlotStyle == plotStyle}
              onclick=() => $helpers.onStyleClick(chartType, plotStyle)
            )
              - const iconPlotStyle = plotStyle === `standard` ? `` : `-${plotStyle}`;
              svg-icon(attributes={icon: chartType + iconPlotStyle})
              = $helpers.formattedChartName(chartType, plotStyle)
