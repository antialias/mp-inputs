.chart-legend
  .header Legend
  .search
    focus-input(
      attributes={placeholder: 'search'}
      focusDelay=200
      oninput=$helpers.searchHandler
    )
  .body
    - const legendDataToDisplay = $helpers.legendDataToDisplay()
    if !legendDataToDisplay.length
      .no-result= 'No results match this search'
    each series, seriesIdx in legendDataToDisplay
      - const formattedSeriesName = util.renameProperty(series.seriesName)
      - const isSeriesShowing = report.legend.isSeriesShowing(seriesIdx)
      .legend-series(class={closed: !isSeriesShowing})
        .info(onclick=() => report.legend.toggleShowSeries(seriesIdx))
          .name= formattedSeriesName
          .count #{$helpers.selectedSeriesCount(seriesIdx)}/#{$helpers.totalSeriesCount(seriesIdx)}
        ul.series-values
          if isSeriesShowing
            if !$helpers.isSearchActive()
              li
                button.select-all(
                  class={showing: $helpers.allSeriesSelected(seriesIdx)}
                  onclick=() => $helpers.toggleAllSeriesValue(seriesIdx)
                )
                  .icon(class={color: seriesIdx === 0})
                  .label= `Select all ${formattedSeriesName} segments`
            if !series.seriesValues.length
              .no-result= 'No results'
            each value in series.seriesValues
              li
                button.series(
                  class={showing: $helpers.isSeriesValueShowing(seriesIdx, value)}
                  onclick=() => $helpers.toggleShowSeriesValue(seriesIdx, value)
                )
                  .icon(class={color: seriesIdx === 0})
                  - const label = $helpers.renameSeriesValue(seriesIdx, value)
                  if $helpers.isSearchActive()
                    .label.search-result
                      span.slice.matches-search=label.slice(0, report.legend.search.length)
                      span.slice=label.slice(report.legend.search.length)
                  else
                    .label= label
                  if series.seriesName !== '$event'
                    .delete-wrapper
                      .delete(onclick=ev => $helpers.deleteToFilter(ev, seriesIdx, value))= 'X'
