include ../insights-learn/tooltip.jade

- const open = $helpers.isPaneOpen()
- const showUpsellIcon = $helpers.shouldShowUpsellIcon()
- const learnStep = util.getLearnStep(report)

.builder-container.contextual-menu(
  class=util.learnClasses({
    disabledSteps: [`choose-event`],
    transitioning: learnTransitioningIn && [`compare-event`, `group-by`].includes(learnStep.name),
  })
)
  .insights-new-control.new-query-builder(class={'pane-open': open})
    .control-buttons.add-control
      if $helpers.shouldShowUpsellModal()
        .upsell-wrapper
          mp-upsell-popup(
            attrs={
              name: `builderClause`,
              feature: `filter-levels`,
              open: $helpers.shouldShowUpsellModal(),
            }
            on={change: $helpers.closeUpsellModal}
          )
      .search-icon-wrapper
        svg-icon(attrs={icon: 'search'})
      input.control-label(
        hook={
          postpatch: $helpers.updateFocus,
        }
        props={
          autoFocus: true,
          placeholder: `Search`,
          type: `text`,
          value: contextFilter,
        }
        on={
          click: $helpers.clickedInput,
          input: $helpers.changedSearch,
          keydown: $helpers.handleKeydown,
          blur: $helpers.blurredSearch,
        }
      )
        span.label-preposition= $helpers.getPreposition()
      .add-button-container.insights-learn-tooltip-container
        +insights-learn-tooltip(`compare-event`, `group-by`)
        button.add-button.insights-learn-emphasize(
          class={'disable-add-button': showUpsellIcon}
          on={click: $helpers.clickedAdd}
        )
          svg-icon(attrs={icon: 'x'})
        if showUpsellIcon
          .upsell-icon
            svg-icon(attrs={icon: 'lighting-bolt'})
    .drop-menu
      mp-drop-menu(attrs={open} on={change: $helpers.menuChange})
        .new-pane-content(attrs={'slot-body': true})
          = $component.child(`builder-pane`, {attrs: {open}})
