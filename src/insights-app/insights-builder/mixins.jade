include ../mixins.jade

mixin generic-options-list-item(label, options)
  li.list-option.generic-list(
    class={
      [options.class]: true,
      'list-option-active': !!options.isActive,
      'list-option-alert': !!options.shouldShowSourceAlert,
      'list-option-upsell': !!options.shouldShowSourceUpsell,
      'has-description': !!options.description,
    }
    on={
      click: options.onclick,
      mouseenter: () => $helpers.updateActiveIndex(options.index),
    }
  )
    +screen-option(label, {noIcon: true, description: options.description})
    if options.shouldShowSourceUpsell
      .upsell-icon
        svg-icon(attrs={icon: 'lighting-bolt'})
    if options.shouldShowSourceAlert
      .upsell-icon
        svg-icon(attrs={icon: 'alert'})
    +small-caret-icon()

mixin secondary-action-pill(label, options)
  .option-secondary-action.insights-learn-disabled.pill(on={click: options.onclick})
    span.secondary-label= label
    +small-caret-icon()

mixin property-screen-body(options)
  if options.sources
    .sources-control
      mp-toggle.sources-toggle(
        attrs={
          theme: 'lite',
          selected: options.selectedSource,
        }
        on={select: ev => options.clickedSource(ev.detail.selected)}
      )
        each source in options.sources
          mp-toggle-option(
            attrs={
              value: source.profileType || source.resourceType,
            }
          )= util.capitalize(source.profileType || source.resourceType)
      each source, index in options.sources
        - const upsellType = $helpers.shouldShowSourceUpsell(source.resourceType) ? `upsell` : `alert`;
        .svg-icon-wrapper.properties(
          class={
            [source.resourceType]: true,
            [upsellType]: true,
          }
        )
          if $helpers.shouldShowSourceUpsell(source.resourceType)
            svg-icon(attrs={ icon: 'lighting-bolt' })
          if $helpers.shouldShowSourceAlert(source.resourceType)
            svg-icon(attrs={ icon: 'alert' })

  if !$helpers.shouldShowPropertySections()
    +upsell-pane(options.selectedSource)
  else
    mp-items-menu(
      attrs={
        progressive: true,
        'search-filter': options.searchFilter,
        'sections': JSON.stringify(options.propertySections),
      }
      on={
        clickItem: options.clickedProperty,
        draw: $helpers.updateRenderedSize,
      }
    )

mixin screen-footer-button(label, options)
  - options = options || {}
  button.screen-footer(on={click: options.onclick})= label

mixin screen-option(label, options)
  - options = options || {}
  if !options.noIcon
    - const icon = options.icon
    .option-icon
      svg-icon(attrs={icon, empty: !icon})
  .option-label
    if options.matches
      +highlight-matches(options.matches)
    else
      .label= label
    if options.description
      .description= options.description

mixin screen-title(title, options)
  - options = options || {}
  .screen-title(class={'theme-lite': options.theme === 'lite'})
    if options.upsell
      .upsell-header
        svg-icon(attrs={icon: 'lighting-bolt'})
        .upsell-text= title
        a.upsell-text.upgrade-link(attrs={href: '/pricing', target: '_blank'})= options.upsellLinkText
    else
      if title
        .title-label(attrs={title})= title
    block
    if options.backButton && builderPane.screens.length > 1
      .title-button.back-button(on={click: $helpers.clickedBackButton})
        svg-icon(attrs={icon: 'caret-left'})
    if options.closeButton
      .title-button.close-button(on={click: $helpers.closePane})
        svg-icon(attrs={icon: 'x'})

mixin small-caret-icon(options)
  - options = options || {}
  .caret-icon.small-caret
    svg-icon(attrs={icon: `caret-${options.direction || 'right'}`})

mixin pane-loader()
  .loading-properties
    mp-spinner

mixin upsell-pane(resource_type)
  - const options = $helpers.getUpsellOptions(resource_type)
  - const upsell_type = options.upsellType;

  .upsell-pane-content
    .upsell-image(class={
      [resource_type]: true,
      [upsell_type]: true,
    })
      svg-icon(attrs={ icon: upsell_type === `upsell` ? `lighting-bolt` : `alert` })

    .upsell-message
      .title=options.upsellTitle
      a.upsell-text.upsell-link(
        attrs={ href: options.upsellLink, target: '_blank' }
        class={ [upsell_type]: true }
      )=options.upsellText.linkText
      span.upsell-text=options.upsellText.closingText

