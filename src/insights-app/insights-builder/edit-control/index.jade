- const open = $helpers.isPaneOpen()

.control-container
  .insights-new-control.new-query-builder(class={'pane-open': open})
    .control-buttons.edit-control.control-button-text.insights-learn-emphasize
      if open
        .search-icon-wrapper
          svg-icon(attrs={icon: 'search'})
        if $helpers.getDatasetName()
          span.dataset-label-wrapper
            span.dataset-label= `${$helpers.getDatasetName()}:`
        resize-input.control-label(
          attrs={
            autofocus: true,
            placeholder: $helpers.getLabelText()
          }
          props={
            type: `text`,
            value: contextFilter,
          }
          on={
            click: $helpers.clickedInput,
            input: $helpers.changedSearch,
            keydown: $helpers.handleKeydown,
          }
        )
      else
        - const prefix = $helpers.labelPrefixComponent()
        .control-label
          if prefix && prefix.componentName
            .control-label-prefix= $component.child(prefix.componentName, {attrs: prefix.attrs})
          .control-label-text(on={click: $helpers.clickedLabel})
            if $helpers.getDatasetName()
              span.control-label-dataset= `${$helpers.getDatasetName()}: `
            - const label = $helpers.getLabel()
            if typeof label === 'string'
              = label
            else
              each labelPart in label
                span.edit-label-part= labelPart
      if $helpers.isRemovable() && $helpers.getSection() === `filter`
        button.remove(on={click: $helpers.removeClause})
          svg-icon(attrs={icon: 'x'})
    .drop-menu
      mp-drop-menu(attrs={open} on={change: $helpers.menuChange})
        .new-pane-content(attrs={'slot-body': true})
          = $component.child(`builder-pane`, {attrs: $helpers.getSelectionAttrs(open)})
