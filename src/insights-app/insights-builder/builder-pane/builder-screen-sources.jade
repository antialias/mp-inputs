include ../mixins.jade

.builder-screen.sources
  if contextFilter
    mp-items-menu(
      attrs={
        progressive: true,
        'search-filter': contextFilter,
        'sections': JSON.stringify($helpers.getSections()),
      }
      on={
        draw: $helpers.updateRenderedSizeOnNextFrame,
        clickItem: $helpers.clickedItem,
        clickPropertiesPill: $helpers.clickedEventProperties,
        focusItem: $helpers.handleItemFocus,
      }
    )
    mp-event-definition-tooltip(
      attrs={
        'event-definition': JSON.stringify(eventDefinition),
        'lexicon-url': $helpers.getLexiconUrl(),
        open: !!eventDefinition,
      }
    )
  else
    - const sources = $helpers.getSources();
    - const selectedSource = $helpers.getSelectedSource();

    +screen-title(`Select Source`, {
      backButton: !!$helpers.screenIdx(),
      theme: `lite`,
    })
    .sources-control
      mp-toggle.sources-toggle(
        attrs={
          selected: selectedSource,
          theme: `lite`,
        }
        on={
          select: $helpers.clickedSource,
        }
      )
        each source in sources
          mp-toggle-option(attrs={
            value: source.profileType || source.resourceType,
            disabled: learnActive && source.resourceType !== `events`,
          })= source.name
      each source in sources
        - const resourceType = source.resourceType;
        - const upsellType = $helpers.shouldShowSourceUpsell(resourceType) ? `upsell` : `alert`;
        .svg-icon-wrapper.sources(
          class={
            [resourceType]: true,
            [upsellType]: true,
          }
        )
          if $helpers.shouldShowSourceUpsell(resourceType)
            svg-icon(attrs={ icon: 'lighting-bolt' })
          if $helpers.shouldShowSourceAlert(resourceType)
            svg-icon(attrs={ icon: 'alert' })

    - const isAllSelected = selectedSource === $helpers.RESOURCE_TYPE_ALL;
    .sources-lists(class={'sources-all': isAllSelected})
      each sourceObject in sources
        - const resourceType  = sourceObject.resourceType;
        - const source = sourceObject.profileType || sourceObject.resourceType;

        if isAllSelected ? source !== `all` : source === selectedSource
          - const subScreenName = resourceType === `events` ? `builder-screen-events` : `builder-screen-people`;
          - const label = isAllSelected ? source : ``;
          = $component.child(subScreenName, {attrs: {source, label, 'is-embedded': true}})
