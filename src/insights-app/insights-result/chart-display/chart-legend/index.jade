include ../../../mixins.jade

.chart-legend
  .header Legend
  .content-wrapper
    if resultLoading
      .search
        svg-icon(attrs={icon: 'search'})
        input(attrs={type: 'text', placeholder: 'Search'})
      .body-loader
        - const numOfLoaderLines = 6
        each _ in Array(numOfLoaderLines).fill()
          .series-loader
            .select-icon-loader
            .label-loader
    else
      - const legendDataToDisplay = $helpers.legendDataToDisplay()
      - const isFlattenedData = $helpers.isFlattenedData()
      - const isSearchActive = $helpers.isSearchActive()
      //- Rendering more than 1k segmented all at one time is slow
      - const hideSelectAll = isSearchActive || (isFlattenedData && report.legend.numberOfFlattenedSegments() > 1000);
      - const isMultiColor = !(report.displayOptions.chartType === 'bar' && report.displayOptions.plotStyle === 'standard' && legendDataToDisplay.length === 1)
      .search(class={active: isSearchActive})
        svg-icon(attrs={icon: 'search'})
        input(
          attrs={placeholder: 'Search'}
          on={input: $helpers.changedSearch}
        )
      sticky-scroll(
        attrs={'refresh-data': JSON.stringify({showing: report.legend.seriesShowing, legendDataToDisplay})}
        class={'has-results': legendDataToDisplay.length}
      )
        .body
          if !legendDataToDisplay.length
            .no-result Your search didn't return any results
          each series, seriesIdx in legendDataToDisplay
            - const isSeriesShowing = report.legend.isSeriesShowing(seriesIdx)
            - const seriesDisplay = report.legend.getSeriesDisplayAtIndex(seriesIdx)
            - const seriesDisplayLabel = $helpers.seriesDisplayOption(seriesIdx)
            if !isFlattenedData
              .sticky-title.info(on={click: () => report.legend.toggleShowSeries(seriesIdx)})
                - const titleName = util.renameProperty(series.seriesName)
                .name(
                  class={showing: isSeriesShowing}
                  attrs={title: titleName}
                )
                  svg-icon(attrs={icon: 'triangle-right'})
                  = titleName
                .count #{$helpers.selectedSeriesCount(seriesIdx)}/#{$helpers.totalSeriesCount(seriesIdx)}
            ul.series-values
              if isSeriesShowing
                if !hideSelectAll
                  +checkbox-select-all($helpers.allSeriesSelected(seriesIdx), () => $helpers.toggleAllSeriesValue(seriesIdx))
                if !series.seriesValues.length
                  .no-result= 'No results'
                each value in series.seriesValues
                  - const showing = $helpers.isSeriesValueShowing(seriesIdx, value.originalValue)
                  li.checkbox-item.series(
                    class={
                      'is-event': series.seriesName === '$event',
                      showing,
                    }
                    on={
                      click: () => $helpers.toggleShowSeriesValue(seriesIdx, value.originalValue),
                    }
                  )
                    - const shouldHaveColor = seriesIdx === 0 && isMultiColor
                    .checkbox-select-icon.series-icon(class={
                      color: shouldHaveColor,
                      [`segment-color-${report.legend.getColorForSeries(value.originalValue, isFlattenedData)}`]: showing && seriesIdx === 0,
                    })
                      svg-icon(attrs={icon: 'check-checkbox', empty: !showing})
                    if isFlattenedData
                      - const dataTitle = value.label.join(' / ');
                      if isSearchActive
                        .checkbox-label.search-result(attrs={title: dataTitle})
                          each match in value.matches
                            .flattened-segment
                              +highlight-matches(match)
                      else
                        .checkbox-label(attrs={title: dataTitle})
                          each text in value.label
                            .flattened-segment= text
                    else
                      if isSearchActive
                        .checkbox-label.search-result(attrs={title: value.label})
                          +highlight-matches(value.matches)
                      else
                        .checkbox-label(attrs={title: value.label})= value.label
                      .delete-wrapper
                        .delete-icon
                          svg-icon(
                            attrs={icon: 'x'}
                            on={
                              click: ev => $helpers.deleteToFilter(ev, seriesIdx, value.originalValue),
                            }
                          )
            if isSeriesShowing && seriesDisplayLabel
              .display-option(on={
                click: () => report.legend.toggleSeriesDisplaySetting(seriesIdx),
              })= seriesDisplayLabel
