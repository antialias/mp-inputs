/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _mpContext = __webpack_require__(1);
	
	var _mpContext2 = _interopRequireDefault(_mpContext);
	
	var _tracking = __webpack_require__(4);
	
	var _util = __webpack_require__(8);
	
	__webpack_require__(216);
	
	__webpack_require__(458);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var initIRB = function initIRB() {
	  return new Promise(function (resolve) {
	    var IRB = document.createElement('irb-app');
	
	    var mpContext = new _mpContext2.default();
	    IRB.apiHost = mpContext.apiHost;
	
	    if (mpContext.standalone) {
	
	      var queryParams = (0, _util.parseURLQueryParams)();
	      IRB.apiKey = queryParams.api_key;
	      IRB.apiSecret = queryParams.api_secret;
	      IRB.setMPContext(mpContext);
	      resolve(IRB);
	    } else {
	
	      IRB.apiKey = mpContext.apiKey;
	      IRB.apiSecret = mpContext.apiSecret;
	      IRB.setMPContext(mpContext);
	
	      _tracking.mixpanel.identify(mpContext.userID);
	      _tracking.mixpanel.register({
	        'Email': mpContext.userEmail,
	        'Project ID': mpContext.projectID,
	        'User ID': mpContext.userID
	      });
	      _tracking.mixpanel.track('Viewed report');
	      _tracking.mixpanel.people.set({
	        '$email': mpContext.userEmail,
	        '$name': mpContext.userName
	      });
	      _tracking.rollbar.configure({
	        payload: {
	          person: {
	            id: mpContext.userID,
	            email: mpContext.userEmail
	          }
	        }
	      });
	
	      resolve(IRB);
	    }
	  });
	};
	
	initIRB().then(function (IRB) {
	  var appContainer = document.getElementById('mixpanel-application');
	  appContainer.innerHTML = '';
	  appContainer.appendChild(IRB);
	});

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global API_LOCAL, mp */
	
	var _util = __webpack_require__(2);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	// TODO
	// clean up and consolidate this garbage with the OAuth API
	// of Dashboard, so that we can get a single shared way
	// to interact with MP context/APIs that's efficient when
	// it can be but still works when app runs standalone
	
	var MPContext = function () {
	  function MPContext() {
	    _classCallCheck(this, MPContext);
	
	    this.standalone = typeof mp === 'undefined';
	    this.apiHost = 'https://mixpanel.com/';
	
	    if (!this.standalone) {
	      // global garbage
	      this.appName = mp.report.globals.app_name;
	      this.bookmarks = mp.report.globals.bookmarks;
	      this.customEvents = mp.report.globals.custom_events;
	      this.featureGates = mp.report.globals.feature_gates;
	      this.flags = mp.report.globals.flags;
	      this.hasIntegratedArb = mp.report.globals.has_integrated_arb;
	      this.hasPermissions = mp.report.globals.project_featureflags.includes('permissions');
	      this.permissions = mp.report.globals.permissions;
	      this.projectID = mp.report.globals.project_id;
	      this.setupURL = mp.report.globals.setup_mixpanel_url;
	      this.userEmail = mp.report.globals.user_email;
	      this.userID = mp.report.globals.user_id;
	      this.userName = mp.report.globals.user_name;
	      this.utcOffset = mp.report.globals.utc_offset;
	      this.whitelists = mp.report.globals.whitelists;
	
	      // API access
	      if (false) {
	        this.apiHost = window.location.origin;
	      } else if (window.location.origin.match(/^https:\/\/stage.*\.mixpanel\.com$/)) {
	        // TMP hack so staging talks local
	        this.apiHost = window.location.origin;
	      }
	      this.accessToken = mp.report.globals.access_token;
	      this.apiKey = mp.report.globals.api_key;
	      this.apiSecret = mp.report.globals.api_secret;
	      this.bmURL = this.apiHost + '/report/' + this.projectID + '/bookmarks/' + this.appName;
	      this.bookmarkCountUrl = this.apiHost + '/report/' + this.projectID + '/bookmarks/limited_count';
	    } else {
	      this.utcOffset = -480;
	    }
	  }
	
	  _createClass(MPContext, [{
	    key: 'deleteBookmark',
	    value: function deleteBookmark(id) {
	      return fetch(this.bmURL + '/delete/' + id, {
	        credentials: 'same-origin',
	        method: 'DELETE'
	      });
	    }
	  }, {
	    key: 'saveBookmark',
	    value: function saveBookmark(data) {
	      var _this = this;
	
	      if (this.standalone) {
	        return Promise.reject('Cannot save report in standalone mode yet. Will OAuth it soon.');
	      }
	
	      var endpoint = 'id' in data ? 'update/' + data.id : 'create/';
	      var reportLimit = this.featureGates.max_saved_reports;
	
	      // TODO: cassie: fix API on analytics end so we don't have to chain calls
	      return fetch(this.bookmarkCountUrl, {
	        credentials: 'same-origin',
	        method: 'GET'
	      }).then(function (res) {
	        return res.json();
	      }).then(function (res) {
	        if (res.error) {
	          throw new Error(res.error);
	        }
	        return res.bookmark_count;
	      }).then(function (count) {
	        if (count >= reportLimit) {
	          throw new Error('At saved report limit');
	        } else {
	          return count;
	        }
	      }).then(function () {
	        return _this.post(_this.bmURL + '/' + endpoint, {
	          name: data.name,
	          params: JSON.stringify(data),
	          icon: data.icon
	        });
	      }).then(function (res) {
	        return res.json();
	      }).then(function (res) {
	        if (res.error) {
	          throw new Error(res.error);
	        }
	        return res.bookmark;
	      });
	    }
	  }, {
	    key: 'setFlag',
	    value: function setFlag(flag) {
	      if (!this.flags[flag]) {
	        this.flags[flag] = mp.report.globals.flags[flag] = 1;
	        this.post(this.apiHost + '/set_flag/', { flag: flag });
	      }
	    }
	  }, {
	    key: 'post',
	    value: function post(url, data) {
	      return fetch(url, {
	        body: (0, _util.objToQueryString)(data),
	        credentials: 'same-origin',
	        headers: {
	          'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'
	        },
	        method: 'POST'
	      });
	    }
	  }]);
	
	  return MPContext;
	}();
	
	exports.default = MPContext;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _array = __webpack_require__(3);
	
	Object.keys(_array).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _array[key];
	    }
	  });
	});
	exports.commaizeNumber = commaizeNumber;
	exports.abbreviateNumber = abbreviateNumber;
	exports.capitalize = capitalize;
	exports.extend = extend;
	exports.htmlEncodeString = htmlEncodeString;
	exports.mapKeys = mapKeys;
	exports.mapValues = mapValues;
	exports.nestedObjectDepth = nestedObjectDepth;
	exports.nestedObjectKeys = nestedObjectKeys;
	exports.objectFromPairs = objectFromPairs;
	exports.objToQueryString = objToQueryString;
	exports.parseUrl = parseUrl;
	exports.pick = pick;
	exports.pluralize = pluralize;
	exports.sum = sum;
	exports.truncateMiddle = truncateMiddle;
	exports.getRollingCount = getRollingCount;
	exports.nestedObjectRolling = nestedObjectRolling;
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	// generic data-manipulation utils
	
	function commaizeNumber(number, noConversion) {
	  switch (typeof number === 'undefined' ? 'undefined' : _typeof(number)) {
	    case 'number':
	      if (isNaN(number)) {
	        return number;
	      }
	      number = number.toString();
	      break;
	    case 'string':
	      // noop
	      break;
	    default:
	      return number;
	  }
	
	  var neg = false;
	  if (number[0] === '-') {
	    neg = true;
	    number = number.slice(1);
	  }
	
	  // Parse main number
	  var split = number.split('.');
	  var commaized = noConversion ? split[0] : parseInt(split[0] || 0, 10).toString();
	
	  if (commaized.length) {
	    commaized = commaized.split('').reverse().join('');
	    commaized = commaized.match(/.{1,3}/g).join(',');
	    commaized = commaized.split('').reverse().join('');
	  }
	
	  if (split[1]) {
	    // Add decimals, if applicable
	    commaized += '.' + split[1];
	  }
	
	  if (neg) {
	    commaized = '-' + commaized;
	  }
	
	  return commaized;
	}
	
	function abbreviateNumber(number, precision) {
	  number = parseFloat(number);
	  precision = precision === undefined ? 1 : precision;
	
	  var largeNumbers = [[Math.pow(10, 15), 'Q'], [Math.pow(10, 12), 'T'], [Math.pow(10, 9), 'B'], [Math.pow(10, 6), 'M'], [Math.pow(10, 3), 'K']];
	  var suffix = '';
	
	  for (var i = 0; i < largeNumbers.length; i++) {
	    var bignum = largeNumbers[i][0];
	    var letter = largeNumbers[i][1];
	
	    if (Math.abs(number) >= bignum) {
	      number /= bignum;
	      suffix = letter;
	      break;
	    }
	  }
	
	  var isNegative = number < 0;
	  var fixed = number.toFixed(precision).split('.');
	  var formatted = commaizeNumber(Math.abs(parseInt(fixed[0], 10)));
	
	  if (fixed[1] && parseInt(fixed[1], 10) !== 0) {
	    formatted += '.' + fixed[1];
	  }
	
	  return (isNegative ? '-' : '') + formatted + suffix;
	}
	
	function capitalize(string) {
	  return string && string.charAt(0).toUpperCase() + string.slice(1);
	}
	
	function extend() {
	  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(Array.prototype.slice.call(arguments))));
	}
	
	function htmlEncodeString(val) {
	  return String(val).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#039;').replace(/\r/g, '&#013;').replace(/\n/g, '&#010;');
	}
	
	// return object with new keys and same values
	function mapKeys(obj, func) {
	  return Object.keys(obj).reduce(function (ret, k) {
	    return Object.assign(ret, _defineProperty({}, func(k, obj[k]), obj[k]));
	  }, {});
	}
	
	// return object with same keys and new values
	function mapValues(obj, func) {
	  return Object.keys(obj).reduce(function (ret, k) {
	    return Object.assign(ret, _defineProperty({}, k, func(obj[k], k)));
	  }, {});
	}
	
	function nestedObjectDepth(obj) {
	  return typeof obj === 'object' ? nestedObjectDepth(obj[Object.keys(obj)[0]]) + 1 : 0;
	}
	
	function getKeys(obj, depth, keySet) {
	  if (nestedObjectDepth(obj) > depth) {
	    Object.values(obj).forEach(function (value) {
	      return getKeys(value, depth, keySet);
	    });
	  } else {
	    Object.keys(obj).forEach(function (key) {
	      return keySet.add(key);
	    });
	  }
	}
	
	function nestedObjectKeys(obj) {
	  var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
	
	  var keys = new Set();
	  getKeys(obj, depth, keys);
	  return Array.from(keys);
	}
	
	function objectFromPairs(pairs) {
	  var object = {};
	  pairs.forEach(function (pair) {
	    object[pair[0]] = pair[1];
	  });
	  return object;
	}
	
	function objToQueryString(params) {
	  return Object.keys(params).map(function (k) {
	    return [k, encodeURIComponent(params[k])].join('=');
	  }).join('&');
	}
	
	function parseUrl(url) {
	  var parser = document.createElement('a');
	  parser.href = url;
	  return {
	    host: parser.host,
	    pathname: parser.pathname,
	    url: parser.url
	  };
	}
	
	// filter object to include only given keys
	function pick(obj, keys) {
	  return keys.reduce(function (ret, k) {
	    return Object.assign(ret, _defineProperty({}, k, obj[k]));
	  }, {});
	}
	
	function pluralize(singular, number, plural) {
	  plural = plural || singular + 's';
	  return number === 0 || number > 1 ? plural : singular;
	}
	
	function sum(arr) {
	  var _sum = 0;
	  for (var i = 0; i < arr.length; i++) {
	    _sum += arr[i];
	  }
	  return _sum;
	}
	
	function truncateMiddle(string, len) {
	  if (string) {
	    if (len <= 3) {
	      return string.substr(0, len);
	    } else if (string.length <= len) {
	      return string;
	    } else {
	      var start = Math.ceil((len - 3) / 2);
	      var end = -1 * Math.floor((len - 3) / 2);
	      return string.substr(0, start) + '...' + (end ? string.substr(end) : '');
	    }
	  }
	  return string;
	}
	
	//get the rollingcount based on unit for calculating rolling average
	function getRollingCount(unit) {
	  switch (unit) {
	    case 'hour':
	      return 12;
	    case 'day':
	      return 7;
	    case 'week':
	      return 5;
	    case 'month':
	      return 3;
	  }
	}
	
	function nestedObjectRolling(obj, rollingCount) {
	  if (Object.keys(obj).map(function (key) {
	    return obj[key];
	  }).every(function (value) {
	    return typeof value === 'number' || value === null;
	  })) {
	    var _ret = function () {
	      var found = false;
	      var values = [];
	      var sum = 0;
	      var newObj = {};
	      Object.keys(obj).sort().forEach(function (key) {
	        var amount = obj[key];
	        if (!found && amount) {
	          found = true;
	        }
	
	        if (found) {
	          if (values.length === rollingCount) {
	            sum -= values[0];
	            values.shift();
	          }
	          values.push(amount);
	          sum += amount;
	          amount = sum / values.length;
	        }
	
	        newObj[key] = amount;
	      });
	      return {
	        v: newObj
	      };
	    }();
	
	    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	  } else {
	    return mapValues(obj, function (value) {
	      return nestedObjectRolling(value, rollingCount);
	    });
	  }
	}

/***/ },
/* 3 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.immutableSplice = immutableSplice;
	exports.removeByIndex = removeByIndex;
	exports.removeByValue = removeByValue;
	exports.replaceByIndex = replaceByIndex;
	exports.insertAtIndex = insertAtIndex;
	exports.sorted = sorted;
	exports.unique = unique;
	function immutableSplice(array) {
	  var copy = array.slice(0);
	
	  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    args[_key - 1] = arguments[_key];
	  }
	
	  copy.splice.apply(copy, args);
	  return copy;
	}
	
	function removeByIndex(array, index) {
	  if (index >= array.length || index < -array.length) {
	    throw "IndexError: array index out of range";
	  }
	  return immutableSplice(array, index, 1);
	}
	
	function removeByValue(array, value) {
	  var index = array.indexOf(value);
	  if (index === -1) {
	    throw "ValueError: " + value + " is not in array";
	  }
	  return removeByIndex(array, index);
	}
	
	function replaceByIndex(array, index, value) {
	  if (index >= array.length || index < -array.length) {
	    throw "IndexError: array index out of range";
	  }
	  return immutableSplice(array, index, 1, value);
	}
	
	function insertAtIndex(array, index, value) {
	  if (index > array.length || index < -array.length) {
	    throw "IndexError: array index out of range";
	  }
	  return immutableSplice(array, index, 0, value);
	}
	
	/**
	 * Sort array without mutating original
	 * @param {Array} arr - array to sort
	 * @param {Object} options - sorting configuration
	 * @param {string} [options.order='asc'] - sort order ('asc' or 'desc')
	 * @param {function} [options.transform] - transforms each element for comparison
	 * when sorting
	 * @example
	 * sorted(['XX', 'A', 'g'], {transform: s => s.toLowerCase()});
	 * // ['A', 'g', 'XX']
	 */
	function sorted(arr) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  options.order = options.order || "asc";
	  return arr.slice().sort(function (a, b) {
	    if (options.transform) {
	      a = options.transform(a);
	      b = options.transform(b);
	    }
	    var cmp = a > b ? 1 : a < b ? -1 : 0;
	    if (options.order === "desc") {
	      cmp *= -1;
	    }
	    return cmp;
	  });
	}
	
	/**
	 * Return a copy of an array with duplicate items removed
	 * @param {Array} arr - array to de-duplicate
	 * @param {function} [options.hash] - hashes each element for comparison
	 * Items are compared via strict equality so duplicate arrays/objects will not be removed
	 * unless a `hash` function is specified to hash objects before comparison.
	 * @example
	 * unique([{'a': 1, 'b': 2}, {'a': 1, 'b': 3}, {'a': 1, 'b': 2}], {hash: o => `${o['a']}:${o['b']}`});
	 * // [{'a': 1, 'b': 2}, {'a': 1, 'b': 3}]
	 */
	function unique(arr) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  var hashed = void 0;
	  var encountered = new Set();
	  return arr.filter(function (item) {
	    hashed = options.hash ? options.hash(item) : item;
	    return encountered.has(hashed) ? false : encountered.add(hashed);
	  });
	}

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.rollbar = exports.mixpanel = undefined;
	
	var _trackingSetup = __webpack_require__(5);
	
	var mixpanel = exports.mixpanel = (0, _trackingSetup.initMixpanel)(("2fd54f3085a7b7d70da94096fc415078")); /* global MIXPANEL_TOKEN, ROLLBAR_TOKEN */
	
	var rollbar = exports.rollbar = (0, _trackingSetup.initRollbar)(("f1363513be0a42d1951b4f4e153996ec"));

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.initMixpanel = initMixpanel;
	exports.initRollbar = initRollbar;
	
	var _mixpanelBrowser = __webpack_require__(6);
	
	var _mixpanelBrowser2 = _interopRequireDefault(_mixpanelBrowser);
	
	var _rollbarBrowser = __webpack_require__(7);
	
	var _rollbarBrowser2 = _interopRequireDefault(_rollbarBrowser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* global APP_ENV */
	
	/*
	 * Env-aware tracking initialization utils
	 *
	 * Inject APP_ENV via global var or build tools (Webpack DefinePlugin)
	 *
	 * Recommended usage: create a separate module that initializes
	 * the libs and exports the instances:
	 *
	 * export const mixpanel = initMixpanel('MY MIXPANEL PUBLISHABLE TOKEN');
	 * export const rollbar = initRollbar('MY ROLLBAR PUBLISHABLE TOKEN');
	 *
	 */
	
	var appEnv =  true ? ("production") : 'development';
	
	function initMixpanel(token, instanceName) {
	  if (appEnv === 'production') {
	    _mixpanelBrowser2.default.init(token, { persistence: 'localStorage' }, instanceName);
	  } else {
	    // Project 132990 Mixpanel Dev
	    _mixpanelBrowser2.default.init('9c4e9a6caf9f429a7e3821141fc769b7', {
	      debug: true,
	      persistence: 'localStorage'
	    }, instanceName);
	  }
	  return _mixpanelBrowser2.default;
	}
	
	function initRollbar(token) {
	  return _rollbarBrowser2.default.init({
	    accessToken: token,
	    captureUncaught: true,
	    payload: {
	      environment: appEnv
	    }
	  });
	}

/***/ },
/* 6 */
/***/ function(module, exports) {

	'use strict';
	
	var Config = {
	    DEBUG: false,
	    LIB_VERSION: '2.9.16'
	};
	
	// since es6 imports are static and we run unit tests from the console, window won't be defined when importing this file
	var win;
	if (typeof(window) === 'undefined') {
	    win = {
	        navigator: {}
	    };
	} else {
	    win = window;
	}
	
	
	
	/*
	 * Saved references to long variable names, so that closure compiler can
	 * minimize file size.
	 */
	
	var ArrayProto = Array.prototype;
	var FuncProto = Function.prototype;
	var ObjProto = Object.prototype;
	var slice = ArrayProto.slice;
	var toString = ObjProto.toString;
	var hasOwnProperty = ObjProto.hasOwnProperty;
	var windowConsole = win.console;
	var navigator$1 = win.navigator;
	var document$1 = win.document;
	var userAgent = navigator$1.userAgent;
	var nativeBind = FuncProto.bind;
	var nativeForEach = ArrayProto.forEach;
	var nativeIndexOf = ArrayProto.indexOf;
	var nativeIsArray = Array.isArray;
	var breaker = {};
	var _ = {
	    trim: function(str) {
	        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill
	        return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
	    }
	};
	
	// Console override
	var console$1 = {
	    /** @type {function(...[*])} */
	    log: function() {
	        if (Config.DEBUG && !_.isUndefined(windowConsole) && windowConsole) {
	            try {
	                windowConsole.log.apply(windowConsole, arguments);
	            } catch (err) {
	                _.each(arguments, function(arg) {
	                    windowConsole.log(arg);
	                });
	            }
	        }
	    },
	    /** @type {function(...[*])} */
	    error: function() {
	        if (Config.DEBUG && !_.isUndefined(windowConsole) && windowConsole) {
	            var args = ['Mixpanel error:'].concat(_.toArray(arguments));
	            try {
	                windowConsole.error.apply(windowConsole, args);
	            } catch (err) {
	                _.each(args, function(arg) {
	                    windowConsole.error(arg);
	                });
	            }
	        }
	    },
	    /** @type {function(...[*])} */
	    critical: function() {
	        if (!_.isUndefined(windowConsole) && windowConsole) {
	            var args = ['Mixpanel error:'].concat(_.toArray(arguments));
	            try {
	                windowConsole.error.apply(windowConsole, args);
	            } catch (err) {
	                _.each(args, function(arg) {
	                    windowConsole.error(arg);
	                });
	            }
	        }
	    }
	};
	
	
	// UNDERSCORE
	// Embed part of the Underscore Library
	_.bind = function(func, context) {
	    var args, bound;
	    if (nativeBind && func.bind === nativeBind) {
	        return nativeBind.apply(func, slice.call(arguments, 1));
	    }
	    if (!_.isFunction(func)) {
	        throw new TypeError();
	    }
	    args = slice.call(arguments, 2);
	    bound = function() {
	        if (!(this instanceof bound)) {
	            return func.apply(context, args.concat(slice.call(arguments)));
	        }
	        var ctor = {};
	        ctor.prototype = func.prototype;
	        var self = new ctor();
	        ctor.prototype = null;
	        var result = func.apply(self, args.concat(slice.call(arguments)));
	        if (Object(result) === result) {
	            return result;
	        }
	        return self;
	    };
	    return bound;
	};
	
	_.bind_instance_methods = function(obj) {
	    for (var func in obj) {
	        if (typeof(obj[func]) === 'function') {
	            obj[func] = _.bind(obj[func], obj);
	        }
	    }
	};
	
	/**
	 * @param {*=} obj
	 * @param {function(...[*])=} iterator
	 * @param {Object=} context
	 */
	_.each = function(obj, iterator, context) {
	    if (obj === null || obj === undefined) {
	        return;
	    }
	    if (nativeForEach && obj.forEach === nativeForEach) {
	        obj.forEach(iterator, context);
	    } else if (obj.length === +obj.length) {
	        for (var i = 0, l = obj.length; i < l; i++) {
	            if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) {
	                return;
	            }
	        }
	    } else {
	        for (var key in obj) {
	            if (hasOwnProperty.call(obj, key)) {
	                if (iterator.call(context, obj[key], key, obj) === breaker) {
	                    return;
	                }
	            }
	        }
	    }
	};
	
	_.escapeHTML = function(s) {
	    var escaped = s;
	    if (escaped && _.isString(escaped)) {
	        escaped = escaped
	            .replace(/&/g, '&amp;')
	            .replace(/</g, '&lt;')
	            .replace(/>/g, '&gt;')
	            .replace(/"/g, '&quot;')
	            .replace(/'/g, '&#039;');
	    }
	    return escaped;
	};
	
	_.extend = function(obj) {
	    _.each(slice.call(arguments, 1), function(source) {
	        for (var prop in source) {
	            if (source[prop] !== void 0) {
	                obj[prop] = source[prop];
	            }
	        }
	    });
	    return obj;
	};
	
	_.isArray = nativeIsArray || function(obj) {
	    return toString.call(obj) === '[object Array]';
	};
	
	// from a comment on http://dbj.org/dbj/?p=286
	// fails on only one very rare and deliberate custom object:
	// var bomb = { toString : undefined, valueOf: function(o) { return "function BOMBA!"; }};
	_.isFunction = function(f) {
	    try {
	        return /^\s*\bfunction\b/.test(f);
	    } catch (x) {
	        return false;
	    }
	};
	
	_.isArguments = function(obj) {
	    return !!(obj && hasOwnProperty.call(obj, 'callee'));
	};
	
	_.toArray = function(iterable) {
	    if (!iterable) {
	        return [];
	    }
	    if (iterable.toArray) {
	        return iterable.toArray();
	    }
	    if (_.isArray(iterable)) {
	        return slice.call(iterable);
	    }
	    if (_.isArguments(iterable)) {
	        return slice.call(iterable);
	    }
	    return _.values(iterable);
	};
	
	_.values = function(obj) {
	    var results = [];
	    if (obj === null) {
	        return results;
	    }
	    _.each(obj, function(value) {
	        results[results.length] = value;
	    });
	    return results;
	};
	
	_.identity = function(value) {
	    return value;
	};
	
	_.include = function(obj, target) {
	    var found = false;
	    if (obj === null) {
	        return found;
	    }
	    if (nativeIndexOf && obj.indexOf === nativeIndexOf) {
	        return obj.indexOf(target) != -1;
	    }
	    _.each(obj, function(value) {
	        if (found || (found = (value === target))) {
	            return breaker;
	        }
	    });
	    return found;
	};
	
	_.includes = function(str, needle) {
	    return str.indexOf(needle) !== -1;
	};
	
	// Underscore Addons
	_.inherit = function(subclass, superclass) {
	    subclass.prototype = new superclass();
	    subclass.prototype.constructor = subclass;
	    subclass.superclass = superclass.prototype;
	    return subclass;
	};
	
	_.isObject = function(obj) {
	    return (obj === Object(obj) && !_.isArray(obj));
	};
	
	_.isEmptyObject = function(obj) {
	    if (_.isObject(obj)) {
	        for (var key in obj) {
	            if (hasOwnProperty.call(obj, key)) {
	                return false;
	            }
	        }
	        return true;
	    }
	    return false;
	};
	
	_.isUndefined = function(obj) {
	    return obj === void 0;
	};
	
	_.isString = function(obj) {
	    return toString.call(obj) == '[object String]';
	};
	
	_.isDate = function(obj) {
	    return toString.call(obj) == '[object Date]';
	};
	
	_.isNumber = function(obj) {
	    return toString.call(obj) == '[object Number]';
	};
	
	_.isElement = function(obj) {
	    return !!(obj && obj.nodeType === 1);
	};
	
	_.encodeDates = function(obj) {
	    _.each(obj, function(v, k) {
	        if (_.isDate(v)) {
	            obj[k] = _.formatDate(v);
	        } else if (_.isObject(v)) {
	            obj[k] = _.encodeDates(v); // recurse
	        }
	    });
	    return obj;
	};
	
	_.timestamp = function() {
	    Date.now = Date.now || function() {
	        return +new Date;
	    };
	    return Date.now();
	};
	
	_.formatDate = function(d) {
	    // YYYY-MM-DDTHH:MM:SS in UTC
	    function pad(n) {
	        return n < 10 ? '0' + n : n;
	    }
	    return d.getUTCFullYear() + '-' +
	        pad(d.getUTCMonth() + 1) + '-' +
	        pad(d.getUTCDate()) + 'T' +
	        pad(d.getUTCHours()) + ':' +
	        pad(d.getUTCMinutes()) + ':' +
	        pad(d.getUTCSeconds());
	};
	
	_.safewrap = function(f) {
	    return function() {
	        try {
	            return f.apply(this, arguments);
	        } catch (e) {
	            console$1.critical('Implementation error. Please contact support@mixpanel.com.');
	        }
	    };
	};
	
	_.safewrap_class = function(klass, functions) {
	    for (var i = 0; i < functions.length; i++) {
	        klass.prototype[functions[i]] = _.safewrap(klass.prototype[functions[i]]);
	    }
	};
	
	_.safewrap_instance_methods = function(obj) {
	    for (var func in obj) {
	        if (typeof(obj[func]) === 'function') {
	            obj[func] = _.safewrap(obj[func]);
	        }
	    }
	};
	
	_.strip_empty_properties = function(p) {
	    var ret = {};
	    _.each(p, function(v, k) {
	        if (_.isString(v) && v.length > 0) {
	            ret[k] = v;
	        }
	    });
	    return ret;
	};
	
	/*
	 * this function returns a copy of object after truncating it.  If
	 * passed an Array or Object it will iterate through obj and
	 * truncate all the values recursively.
	 */
	_.truncate = function(obj, length) {
	    var ret;
	
	    if (typeof(obj) === 'string') {
	        ret = obj.slice(0, length);
	    } else if (_.isArray(obj)) {
	        ret = [];
	        _.each(obj, function(val) {
	            ret.push(_.truncate(val, length));
	        });
	    } else if (_.isObject(obj)) {
	        ret = {};
	        _.each(obj, function(val, key) {
	            ret[key] = _.truncate(val, length);
	        });
	    } else {
	        ret = obj;
	    }
	
	    return ret;
	};
	
	_.JSONEncode = (function() {
	    return function(mixed_val) {
	        var value = mixed_val;
	        var quote = function(string) {
	            var escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
	            var meta = { // table of character substitutions
	                '\b': '\\b',
	                '\t': '\\t',
	                '\n': '\\n',
	                '\f': '\\f',
	                '\r': '\\r',
	                '"': '\\"',
	                '\\': '\\\\'
	            };
	
	            escapable.lastIndex = 0;
	            return escapable.test(string) ?
	                '"' + string.replace(escapable, function(a) {
	                    var c = meta[a];
	                    return typeof c === 'string' ? c :
	                        '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
	                }) + '"' :
	                '"' + string + '"';
	        };
	
	        var str = function(key, holder) {
	            var gap = '';
	            var indent = '    ';
	            var i = 0; // The loop counter.
	            var k = ''; // The member key.
	            var v = ''; // The member value.
	            var length = 0;
	            var mind = gap;
	            var partial = [];
	            var value = holder[key];
	
	            // If the value has a toJSON method, call it to obtain a replacement value.
	            if (value && typeof value === 'object' &&
	                typeof value.toJSON === 'function') {
	                value = value.toJSON(key);
	            }
	
	            // What happens next depends on the value's type.
	            switch (typeof value) {
	                case 'string':
	                    return quote(value);
	
	                case 'number':
	                    // JSON numbers must be finite. Encode non-finite numbers as null.
	                    return isFinite(value) ? String(value) : 'null';
	
	                case 'boolean':
	                case 'null':
	                    // If the value is a boolean or null, convert it to a string. Note:
	                    // typeof null does not produce 'null'. The case is included here in
	                    // the remote chance that this gets fixed someday.
	
	                    return String(value);
	
	                case 'object':
	                    // If the type is 'object', we might be dealing with an object or an array or
	                    // null.
	                    // Due to a specification blunder in ECMAScript, typeof null is 'object',
	                    // so watch out for that case.
	                    if (!value) {
	                        return 'null';
	                    }
	
	                    // Make an array to hold the partial results of stringifying this object value.
	                    gap += indent;
	                    partial = [];
	
	                    // Is the value an array?
	                    if (toString.apply(value) === '[object Array]') {
	                        // The value is an array. Stringify every element. Use null as a placeholder
	                        // for non-JSON values.
	
	                        length = value.length;
	                        for (i = 0; i < length; i += 1) {
	                            partial[i] = str(i, value) || 'null';
	                        }
	
	                        // Join all of the elements together, separated with commas, and wrap them in
	                        // brackets.
	                        v = partial.length === 0 ? '[]' :
	                            gap ? '[\n' + gap +
	                            partial.join(',\n' + gap) + '\n' +
	                            mind + ']' :
	                            '[' + partial.join(',') + ']';
	                        gap = mind;
	                        return v;
	                    }
	
	                    // Iterate through all of the keys in the object.
	                    for (k in value) {
	                        if (hasOwnProperty.call(value, k)) {
	                            v = str(k, value);
	                            if (v) {
	                                partial.push(quote(k) + (gap ? ': ' : ':') + v);
	                            }
	                        }
	                    }
	
	                    // Join all of the member texts together, separated with commas,
	                    // and wrap them in braces.
	                    v = partial.length === 0 ? '{}' :
	                        gap ? '{' + partial.join(',') + '' +
	                        mind + '}' : '{' + partial.join(',') + '}';
	                    gap = mind;
	                    return v;
	            }
	        };
	
	        // Make a fake root object containing our value under the key of ''.
	        // Return the result of stringifying the value.
	        return str('', {
	            '': value
	        });
	    };
	})();
	
	_.JSONDecode = (function() { // https://github.com/douglascrockford/JSON-js/blob/master/json_parse.js
	    var at, // The index of the current character
	        ch, // The current character
	        escapee = {
	            '"': '"',
	            '\\': '\\',
	            '/': '/',
	            'b': '\b',
	            'f': '\f',
	            'n': '\n',
	            'r': '\r',
	            't': '\t'
	        },
	        text,
	        error = function(m) {
	            throw {
	                name: 'SyntaxError',
	                message: m,
	                at: at,
	                text: text
	            };
	        },
	        next = function(c) {
	            // If a c parameter is provided, verify that it matches the current character.
	            if (c && c !== ch) {
	                error('Expected \'' + c + '\' instead of \'' + ch + '\'');
	            }
	            // Get the next character. When there are no more characters,
	            // return the empty string.
	            ch = text.charAt(at);
	            at += 1;
	            return ch;
	        },
	        number = function() {
	            // Parse a number value.
	            var number,
	                string = '';
	
	            if (ch === '-') {
	                string = '-';
	                next('-');
	            }
	            while (ch >= '0' && ch <= '9') {
	                string += ch;
	                next();
	            }
	            if (ch === '.') {
	                string += '.';
	                while (next() && ch >= '0' && ch <= '9') {
	                    string += ch;
	                }
	            }
	            if (ch === 'e' || ch === 'E') {
	                string += ch;
	                next();
	                if (ch === '-' || ch === '+') {
	                    string += ch;
	                    next();
	                }
	                while (ch >= '0' && ch <= '9') {
	                    string += ch;
	                    next();
	                }
	            }
	            number = +string;
	            if (!isFinite(number)) {
	                error('Bad number');
	            } else {
	                return number;
	            }
	        },
	
	        string = function() {
	            // Parse a string value.
	            var hex,
	                i,
	                string = '',
	                uffff;
	            // When parsing for string values, we must look for " and \ characters.
	            if (ch === '"') {
	                while (next()) {
	                    if (ch === '"') {
	                        next();
	                        return string;
	                    }
	                    if (ch === '\\') {
	                        next();
	                        if (ch === 'u') {
	                            uffff = 0;
	                            for (i = 0; i < 4; i += 1) {
	                                hex = parseInt(next(), 16);
	                                if (!isFinite(hex)) {
	                                    break;
	                                }
	                                uffff = uffff * 16 + hex;
	                            }
	                            string += String.fromCharCode(uffff);
	                        } else if (typeof escapee[ch] === 'string') {
	                            string += escapee[ch];
	                        } else {
	                            break;
	                        }
	                    } else {
	                        string += ch;
	                    }
	                }
	            }
	            error('Bad string');
	        },
	        white = function() {
	            // Skip whitespace.
	            while (ch && ch <= ' ') {
	                next();
	            }
	        },
	        word = function() {
	            // true, false, or null.
	            switch (ch) {
	                case 't':
	                    next('t');
	                    next('r');
	                    next('u');
	                    next('e');
	                    return true;
	                case 'f':
	                    next('f');
	                    next('a');
	                    next('l');
	                    next('s');
	                    next('e');
	                    return false;
	                case 'n':
	                    next('n');
	                    next('u');
	                    next('l');
	                    next('l');
	                    return null;
	            }
	            error('Unexpected "' + ch + '"');
	        },
	        value, // Placeholder for the value function.
	        array = function() {
	            // Parse an array value.
	            var array = [];
	
	            if (ch === '[') {
	                next('[');
	                white();
	                if (ch === ']') {
	                    next(']');
	                    return array; // empty array
	                }
	                while (ch) {
	                    array.push(value());
	                    white();
	                    if (ch === ']') {
	                        next(']');
	                        return array;
	                    }
	                    next(',');
	                    white();
	                }
	            }
	            error('Bad array');
	        },
	        object = function() {
	            // Parse an object value.
	            var key,
	                object = {};
	
	            if (ch === '{') {
	                next('{');
	                white();
	                if (ch === '}') {
	                    next('}');
	                    return object; // empty object
	                }
	                while (ch) {
	                    key = string();
	                    white();
	                    next(':');
	                    if (Object.hasOwnProperty.call(object, key)) {
	                        error('Duplicate key "' + key + '"');
	                    }
	                    object[key] = value();
	                    white();
	                    if (ch === '}') {
	                        next('}');
	                        return object;
	                    }
	                    next(',');
	                    white();
	                }
	            }
	            error('Bad object');
	        };
	
	    value = function() {
	        // Parse a JSON value. It could be an object, an array, a string,
	        // a number, or a word.
	        white();
	        switch (ch) {
	            case '{':
	                return object();
	            case '[':
	                return array();
	            case '"':
	                return string();
	            case '-':
	                return number();
	            default:
	                return ch >= '0' && ch <= '9' ? number() : word();
	        }
	    };
	
	    // Return the json_parse function. It will have access to all of the
	    // above functions and variables.
	    return function(source) {
	        var result;
	
	        text = source;
	        at = 0;
	        ch = ' ';
	        result = value();
	        white();
	        if (ch) {
	            error('Syntax error');
	        }
	
	        return result;
	    };
	})();
	
	_.base64Encode = function(data) {
	    var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
	    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,
	        ac = 0,
	        enc = '',
	        tmp_arr = [];
	
	    if (!data) {
	        return data;
	    }
	
	    data = _.utf8Encode(data);
	
	    do { // pack three octets into four hexets
	        o1 = data.charCodeAt(i++);
	        o2 = data.charCodeAt(i++);
	        o3 = data.charCodeAt(i++);
	
	        bits = o1 << 16 | o2 << 8 | o3;
	
	        h1 = bits >> 18 & 0x3f;
	        h2 = bits >> 12 & 0x3f;
	        h3 = bits >> 6 & 0x3f;
	        h4 = bits & 0x3f;
	
	        // use hexets to index into b64, and append result to encoded string
	        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
	    } while (i < data.length);
	
	    enc = tmp_arr.join('');
	
	    switch (data.length % 3) {
	        case 1:
	            enc = enc.slice(0, -2) + '==';
	            break;
	        case 2:
	            enc = enc.slice(0, -1) + '=';
	            break;
	    }
	
	    return enc;
	};
	
	_.utf8Encode = function(string) {
	    string = (string + '').replace(/\r\n/g, '\n').replace(/\r/g, '\n');
	
	    var utftext = '',
	        start,
	        end;
	    var stringl = 0,
	        n;
	
	    start = end = 0;
	    stringl = string.length;
	
	    for (n = 0; n < stringl; n++) {
	        var c1 = string.charCodeAt(n);
	        var enc = null;
	
	        if (c1 < 128) {
	            end++;
	        } else if ((c1 > 127) && (c1 < 2048)) {
	            enc = String.fromCharCode((c1 >> 6) | 192, (c1 & 63) | 128);
	        } else {
	            enc = String.fromCharCode((c1 >> 12) | 224, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128);
	        }
	        if (enc !== null) {
	            if (end > start) {
	                utftext += string.substring(start, end);
	            }
	            utftext += enc;
	            start = end = n + 1;
	        }
	    }
	
	    if (end > start) {
	        utftext += string.substring(start, string.length);
	    }
	
	    return utftext;
	};
	
	_.UUID = (function() {
	
	    // Time/ticks information
	    // 1*new Date() is a cross browser version of Date.now()
	    var T = function() {
	        var d = 1 * new Date(),
	            i = 0;
	
	        // this while loop figures how many browser ticks go by
	        // before 1*new Date() returns a new number, ie the amount
	        // of ticks that go by per millisecond
	        while (d == 1 * new Date()) {
	            i++;
	        }
	
	        return d.toString(16) + i.toString(16);
	    };
	
	    // Math.Random entropy
	    var R = function() {
	        return Math.random().toString(16).replace('.', '');
	    };
	
	    // User agent entropy
	    // This function takes the user agent string, and then xors
	    // together each sequence of 8 bytes.  This produces a final
	    // sequence of 8 bytes which it returns as hex.
	    var UA = function() {
	        var ua = userAgent,
	            i, ch, buffer = [],
	            ret = 0;
	
	        function xor(result, byte_array) {
	            var j, tmp = 0;
	            for (j = 0; j < byte_array.length; j++) {
	                tmp |= (buffer[j] << j * 8);
	            }
	            return result ^ tmp;
	        }
	
	        for (i = 0; i < ua.length; i++) {
	            ch = ua.charCodeAt(i);
	            buffer.unshift(ch & 0xFF);
	            if (buffer.length >= 4) {
	                ret = xor(ret, buffer);
	                buffer = [];
	            }
	        }
	
	        if (buffer.length > 0) {
	            ret = xor(ret, buffer);
	        }
	
	        return ret.toString(16);
	    };
	
	    return function() {
	        var se = (screen.height * screen.width).toString(16);
	        return (T() + '-' + R() + '-' + UA() + '-' + se + '-' + T());
	    };
	})();
	
	// _.isBlockedUA()
	// This is to block various web spiders from executing our JS and
	// sending false tracking data
	_.isBlockedUA = function(ua) {
	    if (/(google web preview|baiduspider|yandexbot|bingbot|googlebot|yahoo! slurp)/i.test(ua)) {
	        return true;
	    }
	    return false;
	};
	
	/**
	 * @param {Object=} formdata
	 * @param {string=} arg_separator
	 */
	_.HTTPBuildQuery = function(formdata, arg_separator) {
	    var use_val, use_key, tmp_arr = [];
	
	    if (_.isUndefined(arg_separator)) {
	        arg_separator = '&';
	    }
	
	    _.each(formdata, function(val, key) {
	        use_val = encodeURIComponent(val.toString());
	        use_key = encodeURIComponent(key);
	        tmp_arr[tmp_arr.length] = use_key + '=' + use_val;
	    });
	
	    return tmp_arr.join(arg_separator);
	};
	
	_.getQueryParam = function(url, param) {
	    // Expects a raw URL
	
	    param = param.replace(/[\[]/, '\\\[').replace(/[\]]/, '\\\]');
	    var regexS = '[\\?&]' + param + '=([^&#]*)',
	        regex = new RegExp(regexS),
	        results = regex.exec(url);
	    if (results === null || (results && typeof(results[1]) !== 'string' && results[1].length)) {
	        return '';
	    } else {
	        return decodeURIComponent(results[1]).replace(/\+/g, ' ');
	    }
	};
	
	_.getHashParam = function(hash, param) {
	    var matches = hash.match(new RegExp(param + '=([^&]*)'));
	    return matches ? matches[1] : null;
	};
	
	// _.cookie
	// Methods partially borrowed from quirksmode.org/js/cookies.html
	_.cookie = {
	    get: function(name) {
	        var nameEQ = name + '=';
	        var ca = document$1.cookie.split(';');
	        for (var i = 0; i < ca.length; i++) {
	            var c = ca[i];
	            while (c.charAt(0) == ' ') {
	                c = c.substring(1, c.length);
	            }
	            if (c.indexOf(nameEQ) === 0) {
	                return decodeURIComponent(c.substring(nameEQ.length, c.length));
	            }
	        }
	        return null;
	    },
	
	    parse: function(name) {
	        var cookie;
	        try {
	            cookie = _.JSONDecode(_.cookie.get(name)) || {};
	        } catch (err) {
	            // noop
	        }
	        return cookie;
	    },
	
	    set_seconds: function(name, value, seconds, cross_subdomain, is_secure) {
	        var cdomain = '',
	            expires = '',
	            secure = '';
	
	        if (cross_subdomain) {
	            var matches = document$1.location.hostname.match(/[a-z0-9][a-z0-9\-]+\.[a-z\.]{2,6}$/i),
	                domain = matches ? matches[0] : '';
	
	            cdomain = ((domain) ? '; domain=.' + domain : '');
	        }
	
	        if (seconds) {
	            var date = new Date();
	            date.setTime(date.getTime() + (seconds * 1000));
	            expires = '; expires=' + date.toGMTString();
	        }
	
	        if (is_secure) {
	            secure = '; secure';
	        }
	
	        document$1.cookie = name + '=' + encodeURIComponent(value) + expires + '; path=/' + cdomain + secure;
	    },
	
	    set: function(name, value, days, cross_subdomain, is_secure) {
	        var cdomain = '', expires = '', secure = '';
	
	        if (cross_subdomain) {
	            var matches = document$1.location.hostname.match(/[a-z0-9][a-z0-9\-]+\.[a-z\.]{2,6}$/i),
	                domain = matches ? matches[0] : '';
	
	            cdomain   = ((domain) ? '; domain=.' + domain : '');
	        }
	
	        if (days) {
	            var date = new Date();
	            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
	            expires = '; expires=' + date.toGMTString();
	        }
	
	        if (is_secure) {
	            secure = '; secure';
	        }
	
	        var new_cookie_val = name + '=' + encodeURIComponent(value) + expires + '; path=/' + cdomain + secure;
	        document$1.cookie = new_cookie_val;
	        return new_cookie_val;
	    },
	
	    remove: function(name, cross_subdomain) {
	        _.cookie.set(name, '', -1, cross_subdomain);
	    }
	};
	
	// _.localStorage
	_.localStorage = {
	    error: function(msg) {
	        console$1.error('localStorage error: ' + msg);
	    },
	
	    get: function(name) {
	        try {
	            return window.localStorage.getItem(name);
	        } catch (err) {
	            _.localStorage.error(err);
	        }
	        return null;
	    },
	
	    parse: function(name) {
	        try {
	            return _.JSONDecode(_.localStorage.get(name)) || {};
	        } catch (err) {
	            // noop
	        }
	        return null;
	    },
	
	    set: function(name, value) {
	        try {
	            window.localStorage.setItem(name, value);
	        } catch (err) {
	            _.localStorage.error(err);
	        }
	    },
	
	    remove: function(name) {
	        try {
	            window.localStorage.removeItem(name);
	        } catch (err) {
	            _.localStorage.error(err);
	        }
	    }
	};
	
	_.register_event = (function() {
	    // written by Dean Edwards, 2005
	    // with input from Tino Zijdel - crisp@xs4all.nl
	    // with input from Carl Sverre - mail@carlsverre.com
	    // with input from Mixpanel
	    // http://dean.edwards.name/weblog/2005/10/add-event/
	    // https://gist.github.com/1930440
	
	    /**
	     * @param {Object} element
	     * @param {string} type
	     * @param {function(...[*])} handler
	     * @param {boolean=} oldSchool
	     * @param {boolean=} useCapture
	     */
	    var register_event = function(element, type, handler, oldSchool, useCapture) {
	        if (!element) {
	            console$1.error('No valid element provided to register_event');
	            return;
	        }
	
	        if (element.addEventListener && !oldSchool) {
	            element.addEventListener(type, handler, !!useCapture);
	        } else {
	            var ontype = 'on' + type;
	            var old_handler = element[ontype]; // can be undefined
	            element[ontype] = makeHandler(element, handler, old_handler);
	        }
	    };
	
	    function makeHandler(element, new_handler, old_handlers) {
	        var handler = function(event) {
	            event = event || fixEvent(window.event);
	
	            // this basically happens in firefox whenever another script
	            // overwrites the onload callback and doesn't pass the event
	            // object to previously defined callbacks.  All the browsers
	            // that don't define window.event implement addEventListener
	            // so the dom_loaded handler will still be fired as usual.
	            if (!event) {
	                return undefined;
	            }
	
	            var ret = true;
	            var old_result, new_result;
	
	            if (_.isFunction(old_handlers)) {
	                old_result = old_handlers(event);
	            }
	            new_result = new_handler.call(element, event);
	
	            if ((false === old_result) || (false === new_result)) {
	                ret = false;
	            }
	
	            return ret;
	        };
	
	        return handler;
	    }
	
	    function fixEvent(event) {
	        if (event) {
	            event.preventDefault = fixEvent.preventDefault;
	            event.stopPropagation = fixEvent.stopPropagation;
	        }
	        return event;
	    }
	    fixEvent.preventDefault = function() {
	        this.returnValue = false;
	    };
	    fixEvent.stopPropagation = function() {
	        this.cancelBubble = true;
	    };
	
	    return register_event;
	})();
	
	_.dom_query = (function() {
	    /* document.getElementsBySelector(selector)
	    - returns an array of element objects from the current document
	    matching the CSS selector. Selectors can contain element names,
	    class names and ids and can be nested. For example:
	
	    elements = document.getElementsBySelector('div#main p a.external')
	
	    Will return an array of all 'a' elements with 'external' in their
	    class attribute that are contained inside 'p' elements that are
	    contained inside the 'div' element which has id="main"
	
	    New in version 0.4: Support for CSS2 and CSS3 attribute selectors:
	    See http://www.w3.org/TR/css3-selectors/#attribute-selectors
	
	    Version 0.4 - Simon Willison, March 25th 2003
	    -- Works in Phoenix 0.5, Mozilla 1.3, Opera 7, Internet Explorer 6, Internet Explorer 5 on Windows
	    -- Opera 7 fails
	
	    Version 0.5 - Carl Sverre, Jan 7th 2013
	    -- Now uses jQuery-esque `hasClass` for testing class name
	    equality.  This fixes a bug related to '-' characters being
	    considered not part of a 'word' in regex.
	    */
	
	    function getAllChildren(e) {
	        // Returns all children of element. Workaround required for IE5/Windows. Ugh.
	        return e.all ? e.all : e.getElementsByTagName('*');
	    }
	
	    var bad_whitespace = /[\t\r\n]/g;
	
	    function hasClass(elem, selector) {
	        var className = ' ' + selector + ' ';
	        return ((' ' + elem.className + ' ').replace(bad_whitespace, ' ').indexOf(className) >= 0);
	    }
	
	    function getElementsBySelector(selector) {
	        // Attempt to fail gracefully in lesser browsers
	        if (!document$1.getElementsByTagName) {
	            return [];
	        }
	        // Split selector in to tokens
	        var tokens = selector.split(' ');
	        var token, bits, tagName, found, foundCount, i, j, k, elements, currentContextIndex;
	        var currentContext = [document$1];
	        for (i = 0; i < tokens.length; i++) {
	            token = tokens[i].replace(/^\s+/, '').replace(/\s+$/, '');
	            if (token.indexOf('#') > -1) {
	                // Token is an ID selector
	                bits = token.split('#');
	                tagName = bits[0];
	                var id = bits[1];
	                var element = document$1.getElementById(id);
	                if (!element || (tagName && element.nodeName.toLowerCase() != tagName)) {
	                    // element not found or tag with that ID not found, return false
	                    return [];
	                }
	                // Set currentContext to contain just this element
	                currentContext = [element];
	                continue; // Skip to next token
	            }
	            if (token.indexOf('.') > -1) {
	                // Token contains a class selector
	                bits = token.split('.');
	                tagName = bits[0];
	                var className = bits[1];
	                if (!tagName) {
	                    tagName = '*';
	                }
	                // Get elements matching tag, filter them for class selector
	                found = [];
	                foundCount = 0;
	                for (j = 0; j < currentContext.length; j++) {
	                    if (tagName == '*') {
	                        elements = getAllChildren(currentContext[j]);
	                    } else {
	                        elements = currentContext[j].getElementsByTagName(tagName);
	                    }
	                    for (k = 0; k < elements.length; k++) {
	                        found[foundCount++] = elements[k];
	                    }
	                }
	                currentContext = [];
	                currentContextIndex = 0;
	                for (j = 0; j < found.length; j++) {
	                    if (found[j].className &&
	                        _.isString(found[j].className) && // some SVG elements have classNames which are not strings
	                        hasClass(found[j], className)
	                    ) {
	                        currentContext[currentContextIndex++] = found[j];
	                    }
	                }
	                continue; // Skip to next token
	            }
	            // Code to deal with attribute selectors
	            var token_match = token.match(/^(\w*)\[(\w+)([=~\|\^\$\*]?)=?"?([^\]"]*)"?\]$/);
	            if (token_match) {
	                tagName = token_match[1];
	                var attrName = token_match[2];
	                var attrOperator = token_match[3];
	                var attrValue = token_match[4];
	                if (!tagName) {
	                    tagName = '*';
	                }
	                // Grab all of the tagName elements within current context
	                found = [];
	                foundCount = 0;
	                for (j = 0; j < currentContext.length; j++) {
	                    if (tagName == '*') {
	                        elements = getAllChildren(currentContext[j]);
	                    } else {
	                        elements = currentContext[j].getElementsByTagName(tagName);
	                    }
	                    for (k = 0; k < elements.length; k++) {
	                        found[foundCount++] = elements[k];
	                    }
	                }
	                currentContext = [];
	                currentContextIndex = 0;
	                var checkFunction; // This function will be used to filter the elements
	                switch (attrOperator) {
	                    case '=': // Equality
	                        checkFunction = function(e) {
	                            return (e.getAttribute(attrName) == attrValue);
	                        };
	                        break;
	                    case '~': // Match one of space seperated words
	                        checkFunction = function(e) {
	                            return (e.getAttribute(attrName).match(new RegExp('\\b' + attrValue + '\\b')));
	                        };
	                        break;
	                    case '|': // Match start with value followed by optional hyphen
	                        checkFunction = function(e) {
	                            return (e.getAttribute(attrName).match(new RegExp('^' + attrValue + '-?')));
	                        };
	                        break;
	                    case '^': // Match starts with value
	                        checkFunction = function(e) {
	                            return (e.getAttribute(attrName).indexOf(attrValue) === 0);
	                        };
	                        break;
	                    case '$': // Match ends with value - fails with "Warning" in Opera 7
	                        checkFunction = function(e) {
	                            return (e.getAttribute(attrName).lastIndexOf(attrValue) == e.getAttribute(attrName).length - attrValue.length);
	                        };
	                        break;
	                    case '*': // Match ends with value
	                        checkFunction = function(e) {
	                            return (e.getAttribute(attrName).indexOf(attrValue) > -1);
	                        };
	                        break;
	                    default:
	                        // Just test for existence of attribute
	                        checkFunction = function(e) {
	                            return e.getAttribute(attrName);
	                        };
	                }
	                currentContext = [];
	                currentContextIndex = 0;
	                for (j = 0; j < found.length; j++) {
	                    if (checkFunction(found[j])) {
	                        currentContext[currentContextIndex++] = found[j];
	                    }
	                }
	                // alert('Attribute Selector: '+tagName+' '+attrName+' '+attrOperator+' '+attrValue);
	                continue; // Skip to next token
	            }
	            // If we get here, token is JUST an element (not a class or ID selector)
	            tagName = token;
	            found = [];
	            foundCount = 0;
	            for (j = 0; j < currentContext.length; j++) {
	                elements = currentContext[j].getElementsByTagName(tagName);
	                for (k = 0; k < elements.length; k++) {
	                    found[foundCount++] = elements[k];
	                }
	            }
	            currentContext = found;
	        }
	        return currentContext;
	    }
	
	    return function(query) {
	        if (_.isElement(query)) {
	            return [query];
	        } else if (_.isObject(query) && !_.isUndefined(query.length)) {
	            return query;
	        } else {
	            return getElementsBySelector.call(this, query);
	        }
	    };
	})();
	
	_.info = {
	    campaignParams: function() {
	        var campaign_keywords = 'utm_source utm_medium utm_campaign utm_content utm_term'.split(' '),
	            kw = '',
	            params = {};
	        _.each(campaign_keywords, function(kwkey) {
	            kw = _.getQueryParam(document$1.URL, kwkey);
	            if (kw.length) {
	                params[kwkey] = kw;
	            }
	        });
	
	        return params;
	    },
	
	    searchEngine: function(referrer) {
	        if (referrer.search('https?://(.*)google.([^/?]*)') === 0) {
	            return 'google';
	        } else if (referrer.search('https?://(.*)bing.com') === 0) {
	            return 'bing';
	        } else if (referrer.search('https?://(.*)yahoo.com') === 0) {
	            return 'yahoo';
	        } else if (referrer.search('https?://(.*)duckduckgo.com') === 0) {
	            return 'duckduckgo';
	        } else {
	            return null;
	        }
	    },
	
	    searchInfo: function(referrer) {
	        var search = _.info.searchEngine(referrer),
	            param = (search != 'yahoo') ? 'q' : 'p',
	            ret = {};
	
	        if (search !== null) {
	            ret['$search_engine'] = search;
	
	            var keyword = _.getQueryParam(referrer, param);
	            if (keyword.length) {
	                ret['mp_keyword'] = keyword;
	            }
	        }
	
	        return ret;
	    },
	
	    /**
	     * This function detects which browser is running this script.
	     * The order of the checks are important since many user agents
	     * include key words used in later checks.
	     */
	    browser: function(user_agent, vendor, opera) {
	        vendor = vendor || ''; // vendor is undefined for at least IE9
	        if (opera || _.includes(user_agent, ' OPR/')) {
	            if (_.includes(user_agent, 'Mini')) {
	                return 'Opera Mini';
	            }
	            return 'Opera';
	        } else if (/(BlackBerry|PlayBook|BB10)/i.test(user_agent)) {
	            return 'BlackBerry';
	        } else if (_.includes(user_agent, 'IEMobile') || _.includes(user_agent, 'WPDesktop')) {
	            return 'Internet Explorer Mobile';
	        } else if (_.includes(user_agent, 'Edge')) {
	            return 'Microsoft Edge';
	        } else if (_.includes(user_agent, 'FBIOS')) {
	            return 'Facebook Mobile';
	        } else if (_.includes(user_agent, 'Chrome')) {
	            return 'Chrome';
	        } else if (_.includes(user_agent, 'CriOS')) {
	            return 'Chrome iOS';
	        } else if (_.includes(user_agent, 'FxiOS')) {
	            return 'Firefox iOS';
	        } else if (_.includes(vendor, 'Apple')) {
	            if (_.includes(user_agent, 'Mobile')) {
	                return 'Mobile Safari';
	            }
	            return 'Safari';
	        } else if (_.includes(user_agent, 'Android')) {
	            return 'Android Mobile';
	        } else if (_.includes(user_agent, 'Konqueror')) {
	            return 'Konqueror';
	        } else if (_.includes(user_agent, 'Firefox')) {
	            return 'Firefox';
	        } else if (_.includes(user_agent, 'MSIE') || _.includes(user_agent, 'Trident/')) {
	            return 'Internet Explorer';
	        } else if (_.includes(user_agent, 'Gecko')) {
	            return 'Mozilla';
	        } else {
	            return '';
	        }
	    },
	
	    /**
	     * This function detects which browser version is running this script,
	     * parsing major and minor version (e.g., 42.1). User agent strings from:
	     * http://www.useragentstring.com/pages/useragentstring.php
	     */
	    browserVersion: function(userAgent, vendor, opera) {
	        var browser = _.info.browser(userAgent, vendor, opera);
	        var versionRegexs = {
	            'Internet Explorer Mobile': /rv:(\d+(\.\d+)?)/,
	            'Microsoft Edge': /Edge\/(\d+(\.\d+)?)/,
	            'Chrome': /Chrome\/(\d+(\.\d+)?)/,
	            'Chrome iOS': /CriOS\/(\d+(\.\d+)?)/,
	            'Safari': /Version\/(\d+(\.\d+)?)/,
	            'Mobile Safari': /Version\/(\d+(\.\d+)?)/,
	            'Opera': /(Opera|OPR)\/(\d+(\.\d+)?)/,
	            'Firefox': /Firefox\/(\d+(\.\d+)?)/,
	            'Firefox iOS': /FxiOS\/(\d+(\.\d+)?)/,
	            'Konqueror': /Konqueror:(\d+(\.\d+)?)/,
	            'BlackBerry': /BlackBerry (\d+(\.\d+)?)/,
	            'Android Mobile': /android\s(\d+(\.\d+)?)/,
	            'Internet Explorer': /(rv:|MSIE )(\d+(\.\d+)?)/,
	            'Mozilla': /rv:(\d+(\.\d+)?)/
	        };
	        var regex = versionRegexs[browser];
	        if (regex === undefined) {
	            return null;
	        }
	        var matches = userAgent.match(regex);
	        if (!matches) {
	            return null;
	        }
	        return parseFloat(matches[matches.length - 2]);
	    },
	
	    os: function() {
	        var a = userAgent;
	        if (/Windows/i.test(a)) {
	            if (/Phone/.test(a) || /WPDesktop/.test(a)) {
	                return 'Windows Phone';
	            }
	            return 'Windows';
	        } else if (/(iPhone|iPad|iPod)/.test(a)) {
	            return 'iOS';
	        } else if (/Android/.test(a)) {
	            return 'Android';
	        } else if (/(BlackBerry|PlayBook|BB10)/i.test(a)) {
	            return 'BlackBerry';
	        } else if (/Mac/i.test(a)) {
	            return 'Mac OS X';
	        } else if (/Linux/.test(a)) {
	            return 'Linux';
	        } else {
	            return '';
	        }
	    },
	
	    device: function(user_agent) {
	        if (/Windows Phone/i.test(user_agent) || /WPDesktop/.test(user_agent)) {
	            return 'Windows Phone';
	        } else if (/iPad/.test(user_agent)) {
	            return 'iPad';
	        } else if (/iPod/.test(user_agent)) {
	            return 'iPod Touch';
	        } else if (/iPhone/.test(user_agent)) {
	            return 'iPhone';
	        } else if (/(BlackBerry|PlayBook|BB10)/i.test(user_agent)) {
	            return 'BlackBerry';
	        } else if (/Android/.test(user_agent)) {
	            return 'Android';
	        } else {
	            return '';
	        }
	    },
	
	    referringDomain: function(referrer) {
	        var split = referrer.split('/');
	        if (split.length >= 3) {
	            return split[2];
	        }
	        return '';
	    },
	
	    properties: function() {
	        return _.extend(_.strip_empty_properties({
	            '$os': _.info.os(),
	            '$browser': _.info.browser(userAgent, navigator$1.vendor, window.opera),
	            '$referrer': document$1.referrer,
	            '$referring_domain': _.info.referringDomain(document$1.referrer),
	            '$device': _.info.device(userAgent)
	        }), {
	            '$current_url': window.location.href,
	            '$browser_version': _.info.browserVersion(userAgent, navigator$1.vendor, window.opera),
	            '$screen_height': screen.height,
	            '$screen_width': screen.width,
	            'mp_lib': 'web',
	            '$lib_version': Config.LIB_VERSION
	        });
	    },
	
	    people_properties: function() {
	        return _.extend(_.strip_empty_properties({
	            '$os': _.info.os(),
	            '$browser': _.info.browser(userAgent, navigator$1.vendor, window.opera)
	        }), {
	            '$browser_version': _.info.browserVersion(userAgent, navigator$1.vendor, window.opera)
	        });
	    },
	
	    pageviewInfo: function(page) {
	        return _.strip_empty_properties({
	            'mp_page': page,
	            'mp_referrer': document$1.referrer,
	            'mp_browser': _.info.browser(userAgent, navigator$1.vendor, window.opera),
	            'mp_platform': _.info.os()
	        });
	    }
	};
	
	// EXPORTS (for closure compiler)
	_['toArray']            = _.toArray;
	_['isObject']           = _.isObject;
	_['JSONEncode']         = _.JSONEncode;
	_['JSONDecode']         = _.JSONDecode;
	_['isBlockedUA']        = _.isBlockedUA;
	_['isEmptyObject']      = _.isEmptyObject;
	_['info']               = _.info;
	_['info']['device']     = _.info.device;
	_['info']['browser']    = _.info.browser;
	_['info']['properties'] = _.info.properties;
	
	var DISABLE_COOKIE = '__mpced';
	
	// specifying these locally here since some websites override the global Node var
	// ex: https://www.codingame.com/
	var ELEMENT_NODE = 1;
	var TEXT_NODE = 3;
	
	var autotrack = {
	    _initializedTokens: [],
	
	    _previousElementSibling: function(el) {
	        if (el.previousElementSibling) {
	            return el.previousElementSibling;
	        } else {
	            do {
	                el = el.previousSibling;
	            } while (el && el.nodeType !== ELEMENT_NODE);
	            return el;
	        }
	    },
	
	    _loadScript: function(scriptUrlToLoad, callback) {
	        var scriptTag = document.createElement('script');
	        scriptTag.type = 'text/javascript';
	        scriptTag.src = scriptUrlToLoad;
	        scriptTag.onload = callback;
	
	        var scripts = document.getElementsByTagName('script');
	        if (scripts.length > 0) {
	            scripts[0].parentNode.insertBefore(scriptTag, scripts[0]);
	        } else {
	            document.body.appendChild(scriptTag);
	        }
	    },
	
	    _getClassName: function(elem) {
	        switch(typeof elem.className) {
	            case 'string':
	                return elem.className;
	            case 'object': // handle cases where className might be SVGAnimatedString or some other type
	                return elem.className.baseVal || elem.getAttribute('class') || '';
	            default: // future proof
	                return '';
	        }
	    },
	
	    _getPropertiesFromElement: function(elem) {
	        var props = {
	            'classes': this._getClassName(elem).split(' '),
	            'tag_name': elem.tagName.toLowerCase()
	        };
	
	        if (_.includes(['input', 'select', 'textarea'], elem.tagName.toLowerCase())) {
	            var formFieldValue = this._getFormFieldValue(elem);
	            if (this._includeProperty(elem, formFieldValue)) {
	                props['value'] = formFieldValue;
	            }
	        }
	
	        _.each(elem.attributes, function(attr) {
	            props['attr__' + attr.name] = attr.value;
	        });
	
	        var nthChild = 1;
	        var nthOfType = 1;
	        var currentElem = elem;
	        while (currentElem = this._previousElementSibling(currentElem)) { // eslint-disable-line no-cond-assign
	            nthChild++;
	            if (currentElem.tagName === elem.tagName) {
	                nthOfType++;
	            }
	        }
	        props['nth_child'] = nthChild;
	        props['nth_of_type'] = nthOfType;
	
	        return props;
	    },
	
	    /*
	     * Due to potential reference discrepancies (such as the webcomponents.js polyfill)
	     * We want to match tagNames instead of specific reference because something like element === document.body
	     * won't always work because element might not be a native element.
	     */
	    _isTag: function(el, tag) {
	        return el && el.tagName && el.tagName.toLowerCase() === tag.toLowerCase();
	    },
	
	    _shouldTrackDomEvent: function(element, event) {
	        if (!element || this._isTag(element, 'html') || element.nodeType !== ELEMENT_NODE) {
	            return false;
	        }
	        var tag = element.tagName.toLowerCase();
	        switch (tag) {
	            case 'html':
	                return false;
	            case 'form':
	                return event.type === 'submit';
	            case 'input':
	                if (['button', 'submit'].indexOf(element.getAttribute('type')) === -1) {
	                    return event.type === 'change';
	                } else {
	                    return event.type === 'click';
	                }
	            case 'select':
	            case 'textarea':
	                return event.type === 'change';
	            default:
	                return event.type === 'click';
	        }
	    },
	
	    _getDefaultProperties: function(eventType) {
	        return {
	            '$event_type': eventType,
	            '$ce_version': 1,
	            '$host': window.location.host,
	            '$pathname': window.location.pathname
	        };
	    },
	
	    _getInputValue: function(input) {
	        var value = null;
	        var type = input.type.toLowerCase();
	        switch(type) {
	            case 'checkbox':
	                if (input.checked) {
	                    value = [input.value];
	                }
	                break;
	            case 'radio':
	                if (input.checked) {
	                    value = input.value;
	                }
	                break;
	            default:
	                value = input.value;
	                break;
	        }
	        return value;
	    },
	
	    _getSelectValue: function(select) {
	        var value;
	        if (select.multiple) {
	            var values = [];
	            _.each(select.querySelectorAll('[selected]'), function(option) {
	                values.push(option.value);
	            });
	            value = values;
	        } else {
	            value = select.value;
	        }
	        return value;
	    },
	
	    _includeProperty: function(input, value) {
	        for (var curEl = input; curEl.parentNode && !this._isTag(curEl, 'body'); curEl = curEl.parentNode) {
	            var classes = this._getClassName(curEl).split(' ');
	            if (_.includes(classes, 'mp-sensitive') || _.includes(classes, 'mp-no-track')) {
	                return false;
	            }
	        }
	
	        if (_.includes(this._getClassName(input).split(' '), 'mp-include')) {
	            return true;
	        }
	
	        if (value === null) {
	            return false;
	        }
	
	        // don't include hidden or password fields
	        var type = input.type || '';
	        switch(type.toLowerCase()) {
	            case 'hidden':
	                return false;
	            case 'password':
	                return false;
	        }
	
	        // filter out data from fields that look like sensitive fields
	        var name = input.name || input.id || '';
	        var sensitiveNameRegex = /^cc|cardnum|ccnum|creditcard|csc|cvc|cvv|exp|pass|seccode|securitycode|securitynum|socialsec|socsec|ssn/i;
	        if (sensitiveNameRegex.test(name.replace(/[^a-zA-Z0-9]/g, ''))) {
	            return false;
	        }
	
	        if (typeof value === 'string') {
	            // check to see if input value looks like a credit card number
	            // see: https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9781449327453/ch04s20.html
	            var ccRegex = /^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/;
	            if (ccRegex.test((value || '').replace(/[\- ]/g, ''))) {
	                return false;
	            }
	
	            // check to see if input value looks like a social security number
	            var ssnRegex = /(^\d{3}-?\d{2}-?\d{4}$)/;
	            if (ssnRegex.test(value)) {
	                return false;
	            }
	        }
	
	        return true;
	    },
	
	    _getFormFieldValue: function(field) {
	        var val;
	        switch(field.tagName.toLowerCase()) {
	            case 'input':
	                val = this._getInputValue(field);
	                break;
	            case 'select':
	                val = this._getSelectValue(field);
	                break;
	            default:
	                val = field.value || field.textContent;
	                break;
	        }
	        return this._includeProperty(field, val) ? val : null;
	    },
	
	    _getFormFieldProperties: function(form) {
	        var formFieldProps = {};
	        _.each(form.elements, function(field) {
	            var name = field.getAttribute('name') || field.getAttribute('id');
	            if (name !== null) {
	                name = '$form_field__' + name;
	                var val = this._getFormFieldValue(field);
	                if (this._includeProperty(field, val)) {
	                    var prevFieldVal = formFieldProps[name];
	                    if (prevFieldVal !== undefined) { // combine values for inputs of same name
	                        formFieldProps[name] = [].concat(prevFieldVal, val);
	                    } else {
	                        formFieldProps[name] = val;
	                    }
	                }
	            }
	        }, this);
	        return formFieldProps;
	    },
	
	    _extractCustomPropertyValue: function(customProperty) {
	        var propValues = [];
	        _.each(document.querySelectorAll(customProperty['css_selector']), function(matchedElem) {
	            if (['input', 'select'].indexOf(matchedElem.tagName.toLowerCase()) > -1) {
	                propValues.push(matchedElem['value']);
	            } else if (matchedElem['textContent']) {
	                propValues.push(matchedElem['textContent']);
	            }
	        });
	        return propValues.join(', ');
	    },
	
	    _getCustomProperties: function(targetElementList) {
	        var props = {};
	        _.each(this._customProperties, function(customProperty) {
	            _.each(customProperty['event_selectors'], function(eventSelector) {
	                var eventElements = document.querySelectorAll(eventSelector);
	                _.each(eventElements, function(eventElement) {
	                    if (_.includes(targetElementList, eventElement)) {
	                        props[customProperty['name']] = this._extractCustomPropertyValue(customProperty);
	                    }
	                }, this);
	            }, this);
	        }, this);
	        return props;
	    },
	
	    checkForBackoff: function(resp) {
	        // temporarily stop CE for X seconds if the 'X-MP-CE-Backoff' header says to
	        var secondsToDisable = parseInt(resp.getResponseHeader('X-MP-CE-Backoff'));
	        if (!isNaN(secondsToDisable) && secondsToDisable > 0) {
	            var disableUntil = _.timestamp() + (secondsToDisable * 1000);
	            console.log('disabling CE for ' + secondsToDisable + ' seconds (from ' + _.timestamp() + ' until ' + disableUntil + ')');
	            _.cookie.set_seconds(DISABLE_COOKIE, true, secondsToDisable, true);
	        }
	    },
	
	    _getEventTarget: function(e) {
	        // https://developer.mozilla.org/en-US/docs/Web/API/Event/target#Compatibility_notes
	        if (typeof e.target === 'undefined') {
	            return e.srcElement;
	        } else {
	            return e.target;
	        }
	    },
	
	    _trackEvent: function(e, instance) {
	        /*** Don't mess with this code without running IE8 tests on it ***/
	        var target = this._getEventTarget(e);
	        if (target.nodeType === TEXT_NODE) { // defeat Safari bug (see: http://www.quirksmode.org/js/events_properties.html)
	            target = target.parentNode;
	        }
	
	        if (this._shouldTrackDomEvent(target, e)) {
	            var targetElementList = [target];
	            var curEl = target;
	            while (curEl.parentNode && !this._isTag(curEl, 'body')) {
	                targetElementList.push(curEl.parentNode);
	                curEl = curEl.parentNode;
	            }
	
	            var elementsJson = [];
	            var href, elementText, form, explicitNoTrack = false;
	            _.each(targetElementList, function(el, idx) {
	                // if the element or a parent element is an anchor tag
	                // include the href as a property
	                if (el.tagName.toLowerCase() === 'a') {
	                    href = el.getAttribute('href');
	                } else if (el.tagName.toLowerCase() === 'form') {
	                    form = el;
	                }
	                // crawl up to max of 5 nodes to populate text content
	                if (!elementText && idx < 5 && el.textContent) {
	                    var textContent = _.trim(el.textContent);
	                    if (textContent) {
	                        elementText = textContent.replace(/[\r\n]/g, ' ').replace(/[ ]+/g, ' ').substring(0, 255);
	                    }
	                }
	
	                // allow users to programatically prevent tracking of elements by adding class 'mp-no-track'
	                var classes = this._getClassName(el).split(' ');
	                if (_.includes(classes, 'mp-no-track')) {
	                    explicitNoTrack = true;
	                }
	
	                elementsJson.push(this._getPropertiesFromElement(el));
	            }, this);
	
	            if (explicitNoTrack) {
	                return false;
	            }
	
	            var props = _.extend(
	                this._getDefaultProperties(e.type),
	                {
	                    '$elements':  elementsJson,
	                    '$el_attr__href': href,
	                    '$el_text': elementText
	                },
	                this._getCustomProperties(targetElementList)
	            );
	
	            if (form && (e.type === 'submit' || e.type === 'click')) {
	                _.extend(props, this._getFormFieldProperties(form));
	            }
	            instance.track('$web_event', props);
	            return true;
	        }
	    },
	
	    // only reason is to stub for unit tests
	    // since you can't override window.location props
	    _navigate: function(href) {
	        window.location.href = href;
	    },
	
	    _addDomEventHandlers: function(instance) {
	        var handler = _.bind(function(e) {
	            if (_.cookie.parse(DISABLE_COOKIE) !== true) {
	                e = e || window.event;
	                this._trackEvent(e, instance);
	            }
	        }, this);
	        _.register_event(document, 'submit', handler, false, true);
	        _.register_event(document, 'change', handler, false, true);
	        _.register_event(document, 'click', handler, false, true);
	    },
	
	    _customProperties: {},
	    init: function(instance) {
	        if (!(document && document.body)) {
	            console.log('document not ready yet, trying again in 500 milliseconds...');
	            var that = this;
	            setTimeout(function() { that.init(instance); }, 500);
	            return;
	        }
	
	        var token = instance.get_config('token');
	        if (this._initializedTokens.indexOf(token) > -1) {
	            console.log('autotrack already initialized for token "' + token + '"');
	            return;
	        }
	        this._initializedTokens.push(token);
	
	        if (!this._maybeLoadEditor(instance)) { // don't autotrack actions when the editor is enabled
	            var parseDecideResponse = _.bind(function(response) {
	                if (response && response['config'] && response['config']['enable_collect_everything'] === true) {
	
	                    if (response['custom_properties']) {
	                        this._customProperties = response['custom_properties'];
	                    }
	
	                    instance.track('$web_event', _.extend({
	                        '$title': document.title
	                    }, this._getDefaultProperties('pageview')));
	
	                    this._addDomEventHandlers(instance);
	
	                } else {
	                    instance['__autotrack_enabled'] = false;
	                }
	            }, this);
	
	            instance._send_request(
	                instance.get_config('decide_host') + '/decide/', {
	                    'verbose': true,
	                    'version': '1',
	                    'lib': 'web',
	                    'token': token
	                },
	                instance._prepare_callback(parseDecideResponse)
	            );
	        }
	    },
	
	    _editorParamsFromHash: function(instance, hash) {
	        var editorParams;
	        try {
	            var state = _.getHashParam(hash, 'state');
	            state = JSON.parse(decodeURIComponent(state));
	            var expiresInSeconds = _.getHashParam(hash, 'expires_in');
	            editorParams = {
	                'accessToken': _.getHashParam(hash, 'access_token'),
	                'accessTokenExpiresAt': (new Date()).getTime() + (Number(expiresInSeconds) * 1000),
	                'bookmarkletMode': !!state['bookmarkletMode'],
	                'projectId': state['projectId'],
	                'projectOwnerId': state['projectOwnerId'],
	                'projectToken': state['token'],
	                'readOnly': state['readOnly'],
	                'userFlags': state['userFlags'],
	                'userId': state['userId']
	            };
	            window.sessionStorage.setItem('editorParams', JSON.stringify(editorParams));
	
	            if (state['desiredHash']) {
	                window.location.hash = state['desiredHash'];
	            } else if (window.history) {
	                history.replaceState('', document.title, window.location.pathname + window.location.search); // completely remove hash
	            } else {
	                window.location.hash = ''; // clear hash (but leaves # unfortunately)
	            }
	        } catch (e) {
	            console.error('Unable to parse data from hash', e);
	        }
	        return editorParams;
	    },
	
	    /**
	     * To load the visual editor, we need an access token and other state. That state comes from one of three places:
	     * 1. In the URL hash params if the customer is using an old snippet
	     * 2. From session storage under the key `_mpcehash` if the snippet already parsed the hash
	     * 3. From session storage under the key `editorParams` if the editor was initialized on a previous page
	     */
	    _maybeLoadEditor: function(instance) {
	        var parseFromUrl = false;
	        if (_.getHashParam(window.location.hash, 'state')) {
	            var state = _.getHashParam(window.location.hash, 'state');
	            state = JSON.parse(decodeURIComponent(state));
	            parseFromUrl = state['action'] === 'mpeditor';
	        }
	        var parseFromStorage = !!window.sessionStorage.getItem('_mpcehash');
	        var editorParams;
	
	        if (parseFromUrl) { // happens if they are initializing the editor using an old snippet
	            editorParams = this._editorParamsFromHash(instance, window.location.hash);
	        } else if (parseFromStorage) { // happens if they are initialized the editor and using the new snippet
	            editorParams = this._editorParamsFromHash(instance, window.sessionStorage.getItem('_mpcehash'));
	            window.sessionStorage.removeItem('_mpcehash');
	        } else { // get credentials from sessionStorage from a previous initialzation
	            editorParams = JSON.parse(window.sessionStorage.getItem('editorParams') || '{}');
	        }
	
	        if (editorParams['projectToken'] && instance.get_config('token') === editorParams['projectToken']) {
	            this._loadEditor(instance, editorParams);
	            return true;
	        } else {
	            return false;
	        }
	    },
	
	    // only load the codeless event editor once, even if there are multiple instances of MixpanelLib
	    _editorLoaded: false,
	    _loadEditor: function(instance, editorParams) {
	        if (!this._editorLoaded) {
	            this._editorLoaded = true;
	            var editorUrl;
	            var cacheBuster = '?_ts=' + (new Date()).getTime();
	            var siteMedia = instance.get_config('app_host') + '/site_media';
	            if (Config.DEBUG) {
	                editorUrl = siteMedia + '/compiled/reports/collect-everything/editor.js' + cacheBuster;
	            } else {
	                editorUrl = siteMedia + '/bundle-webpack/reports/collect-everything/editor.min.js' + cacheBuster;
	            }
	            this._loadScript(editorUrl, function() {
	                window['mp_load_editor'](editorParams);
	            });
	            return true;
	        }
	        return false;
	    },
	
	    // this is a mechanism to ramp up CE with no server-side interaction.
	    // when CE is active, every page load results in a decide request. we
	    // need to gently ramp this up so we don't overload decide. this decides
	    // deterministically if CE is enabled for this project by modding the char
	    // value of the project token.
	    enabledForProject: function(token, numBuckets, numEnabledBuckets) {
	        numBuckets = !_.isUndefined(numBuckets) ? numBuckets : 10;
	        numEnabledBuckets = !_.isUndefined(numEnabledBuckets) ? numEnabledBuckets : 10;
	        var charCodeSum = 0;
	        for (var i = 0; i < token.length; i++) {
	            charCodeSum += token.charCodeAt(i);
	        }
	        return (charCodeSum % numBuckets) < numEnabledBuckets;
	    },
	
	    isBrowserSupported: function() {
	        return _.isFunction(document.querySelectorAll);
	    }
	};
	
	_.bind_instance_methods(autotrack);
	_.safewrap_instance_methods(autotrack);
	
	/*
	 * Mixpanel JS Library
	 *
	 * Copyright 2012, Mixpanel, Inc. All Rights Reserved
	 * http://mixpanel.com/
	 *
	 * Includes portions of Underscore.js
	 * http://documentcloud.github.com/underscore/
	 * (c) 2011 Jeremy Ashkenas, DocumentCloud Inc.
	 * Released under the MIT License.
	 */
	
	// ==ClosureCompiler==
	// @compilation_level ADVANCED_OPTIMIZATIONS
	// @output_file_name mixpanel-2.8.min.js
	// ==/ClosureCompiler==
	
	/*
	SIMPLE STYLE GUIDE:
	
	this.x === public function
	this._x === internal - only use within this file
	this.__x === private - only use within the class
	
	Globals should be all caps
	*/
	
	var init_type;       // MODULE or SNIPPET loader
	var mixpanel_master; // main mixpanel instance / object
	var INIT_MODULE  = 0;
	var INIT_SNIPPET = 1;
	
	/*
	 * Constants
	 */
	/** @const */   var PRIMARY_INSTANCE_NAME     = 'mixpanel';
	/** @const */   var SET_QUEUE_KEY             = '__mps';
	/** @const */   var SET_ONCE_QUEUE_KEY        = '__mpso';
	/** @const */   var ADD_QUEUE_KEY             = '__mpa';
	/** @const */   var APPEND_QUEUE_KEY          = '__mpap';
	/** @const */   var UNION_QUEUE_KEY           = '__mpu';
	/** @const */   var SET_ACTION                = '$set';
	/** @const */   var SET_ONCE_ACTION           = '$set_once';
	/** @const */   var ADD_ACTION                = '$add';
	/** @const */   var APPEND_ACTION             = '$append';
	/** @const */   var UNION_ACTION              = '$union';
	// This key is deprecated, but we want to check for it to see whether aliasing is allowed.
	/** @const */   var PEOPLE_DISTINCT_ID_KEY    = '$people_distinct_id';
	/** @const */   var ALIAS_ID_KEY              = '__alias';
	/** @const */   var CAMPAIGN_IDS_KEY          = '__cmpns';
	/** @const */   var EVENT_TIMERS_KEY          = '__timers';
	/** @const */   var RESERVED_PROPERTIES       = [
	    SET_QUEUE_KEY,
	    SET_ONCE_QUEUE_KEY,
	    ADD_QUEUE_KEY,
	    APPEND_QUEUE_KEY,
	    UNION_QUEUE_KEY,
	    PEOPLE_DISTINCT_ID_KEY,
	    ALIAS_ID_KEY,
	    CAMPAIGN_IDS_KEY,
	    EVENT_TIMERS_KEY
	];
	
	/*
	 * Dynamic... constants? Is that an oxymoron?
	 */
	var HTTP_PROTOCOL = (('https:' === document.location.protocol) ? 'https://' : 'http://');
	
	    // http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/
	    // https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#withCredentials
	var USE_XHR = (window.XMLHttpRequest && 'withCredentials' in new XMLHttpRequest());
	
	    // IE<10 does not support cross-origin XHR's but script tags
	    // with defer won't block window.onload; ENQUEUE_REQUESTS
	    // should only be true for Opera<12
	var ENQUEUE_REQUESTS = !USE_XHR && (userAgent.indexOf('MSIE') === -1) && (userAgent.indexOf('Mozilla') === -1);
	
	/*
	 * Module-level globals
	 */
	var DEFAULT_CONFIG = {
	    'api_host':               HTTP_PROTOCOL + 'api.mixpanel.com',
	    'app_host':               HTTP_PROTOCOL + 'mixpanel.com',
	    'autotrack':              true,
	    'cdn':                    HTTP_PROTOCOL + 'cdn.mxpnl.com',
	    'cross_subdomain_cookie': true,
	    'persistence':            'cookie',
	    'persistence_name':       '',
	    'cookie_name':            '',
	    'loaded':                 function() {},
	    'store_google':           true,
	    'save_referrer':          true,
	    'test':                   false,
	    'verbose':                false,
	    'img':                    false,
	    'track_pageview':         true,
	    'debug':                  false,
	    'track_links_timeout':    300,
	    'cookie_expiration':      365,
	    'upgrade':                false,
	    'disable_persistence':    false,
	    'disable_cookie':         false,
	    'secure_cookie':          false,
	    'ip':                     true,
	    'property_blacklist':     []
	};
	DEFAULT_CONFIG['decide_host'] = DEFAULT_CONFIG['api_host'];
	
	var DOM_LOADED = false;
	
	/**
	 * DomTracker Object
	 * @constructor
	 */
	var DomTracker = function() {};
	
	// interface
	DomTracker.prototype.create_properties = function() {};
	DomTracker.prototype.event_handler = function() {};
	DomTracker.prototype.after_track_handler = function() {};
	
	DomTracker.prototype.init = function(mixpanel_instance) {
	    this.mp = mixpanel_instance;
	    return this;
	};
	
	/**
	 * @param {Object|string} query
	 * @param {string} event_name
	 * @param {Object=} properties
	 * @param {function(...[*])=} user_callback
	 */
	DomTracker.prototype.track = function(query, event_name, properties, user_callback) {
	    var that = this;
	    var elements = _.dom_query(query);
	
	    if (elements.length === 0) {
	        console$1.error('The DOM query (' + query + ') returned 0 elements');
	        return;
	    }
	
	    _.each(elements, function(element) {
	        _.register_event(element, this.override_event, function(e) {
	            var options = {};
	            var props = that.create_properties(properties, this);
	            var timeout = that.mp.get_config('track_links_timeout');
	
	            that.event_handler(e, this, options);
	
	            // in case the mixpanel servers don't get back to us in time
	            window.setTimeout(that.track_callback(user_callback, props, options, true), timeout);
	
	            // fire the tracking event
	            that.mp.track(event_name, props, that.track_callback(user_callback, props, options));
	        });
	    }, this);
	
	    return true;
	};
	
	/**
	 * @param {function(...[*])} user_callback
	 * @param {Object} props
	 * @param {boolean=} timeout_occured
	 */
	DomTracker.prototype.track_callback = function(user_callback, props, options, timeout_occured) {
	    timeout_occured = timeout_occured || false;
	    var that = this;
	
	    return function() {
	        // options is referenced from both callbacks, so we can have
	        // a 'lock' of sorts to ensure only one fires
	        if (options.callback_fired) { return; }
	        options.callback_fired = true;
	
	        if (user_callback && user_callback(timeout_occured, props) === false) {
	            // user can prevent the default functionality by
	            // returning false from their callback
	            return;
	        }
	
	        that.after_track_handler(props, options, timeout_occured);
	    };
	};
	
	DomTracker.prototype.create_properties = function(properties, element) {
	    var props;
	
	    if (typeof(properties) === 'function') {
	        props = properties(element);
	    } else {
	        props = _.extend({}, properties);
	    }
	
	    return props;
	};
	
	/**
	 * LinkTracker Object
	 * @constructor
	 * @extends DomTracker
	 */
	var LinkTracker = function() {
	    this.override_event = 'click';
	};
	_.inherit(LinkTracker, DomTracker);
	
	LinkTracker.prototype.create_properties = function(properties, element) {
	    var props = LinkTracker.superclass.create_properties.apply(this, arguments);
	
	    if (element.href) { props['url'] = element.href; }
	
	    return props;
	};
	
	LinkTracker.prototype.event_handler = function(evt, element, options) {
	    options.new_tab = (
	        evt.which === 2 ||
	        evt.metaKey ||
	        evt.ctrlKey ||
	        element.target === '_blank'
	    );
	    options.href = element.href;
	
	    if (!options.new_tab) {
	        evt.preventDefault();
	    }
	};
	
	LinkTracker.prototype.after_track_handler = function(props, options) {
	    if (options.new_tab) { return; }
	
	    setTimeout(function() {
	        window.location = options.href;
	    }, 0);
	};
	
	/**
	 * FormTracker Object
	 * @constructor
	 * @extends DomTracker
	 */
	var FormTracker = function() {
	    this.override_event = 'submit';
	};
	_.inherit(FormTracker, DomTracker);
	
	FormTracker.prototype.event_handler = function(evt, element, options) {
	    options.element = element;
	    evt.preventDefault();
	};
	
	FormTracker.prototype.after_track_handler = function(props, options) {
	    setTimeout(function() {
	        options.element.submit();
	    }, 0);
	};
	
	/**
	 * Mixpanel Persistence Object
	 * @constructor
	 */
	var MixpanelPersistence = function(config) {
	    this['props'] = {};
	    this.campaign_params_saved = false;
	
	    if (config['persistence_name']) {
	        this.name = 'mp_' + config['persistence_name'];
	    } else {
	        this.name = 'mp_' + config['token'] + '_mixpanel';
	    }
	
	    var storage_type = config['persistence'];
	    if (storage_type !== 'cookie' && storage_type !== 'localStorage') {
	        console$1.critical('Unknown persistence type ' + storage_type + '; falling back to cookie');
	        storage_type = config['persistence'] = 'cookie';
	    }
	
	    var localStorage_supported = function() {
	        var supported = true;
	        try {
	            var key = '__mplssupport__',
	                val = 'xyz';
	            _.localStorage.set(key, val);
	            if (_.localStorage.get(key) !== val) {
	                supported = false;
	            }
	            _.localStorage.remove(key);
	        } catch (err) {
	            supported = false;
	        }
	        if (!supported) {
	            console$1.error('localStorage unsupported; falling back to cookie store');
	        }
	        return supported;
	    };
	    if (storage_type === 'localStorage' && localStorage_supported()) {
	        this.storage = _.localStorage;
	    } else {
	        this.storage = _.cookie;
	    }
	
	    this.load();
	    this.update_config(config);
	    this.upgrade(config);
	    this.save();
	};
	
	MixpanelPersistence.prototype.properties = function() {
	    var p = {};
	    // Filter out reserved properties
	    _.each(this['props'], function(v, k) {
	        if (!_.include(RESERVED_PROPERTIES, k)) {
	            p[k] = v;
	        }
	    });
	    return p;
	};
	
	MixpanelPersistence.prototype.load = function() {
	    if (this.disabled) { return; }
	
	    var entry = this.storage.parse(this.name);
	
	    if (entry) {
	        this['props'] = _.extend({}, entry);
	    }
	};
	
	MixpanelPersistence.prototype.upgrade = function(config) {
	    var upgrade_from_old_lib = config['upgrade'],
	        old_cookie_name,
	        old_cookie;
	
	    if (upgrade_from_old_lib) {
	        old_cookie_name = 'mp_super_properties';
	        // Case where they had a custom cookie name before.
	        if (typeof(upgrade_from_old_lib) === 'string') {
	            old_cookie_name = upgrade_from_old_lib;
	        }
	
	        old_cookie = this.storage.parse(old_cookie_name);
	
	        // remove the cookie
	        this.storage.remove(old_cookie_name);
	        this.storage.remove(old_cookie_name, true);
	
	        if (old_cookie) {
	            this['props'] = _.extend(
	                this['props'],
	                old_cookie['all'],
	                old_cookie['events']
	            );
	        }
	    }
	
	    if (!config['cookie_name'] && config['name'] !== 'mixpanel') {
	        // special case to handle people with cookies of the form
	        // mp_TOKEN_INSTANCENAME from the first release of this library
	        old_cookie_name = 'mp_' + config['token'] + '_' + config['name'];
	        old_cookie = this.storage.parse(old_cookie_name);
	
	        if (old_cookie) {
	            this.storage.remove(old_cookie_name);
	            this.storage.remove(old_cookie_name, true);
	
	            // Save the prop values that were in the cookie from before -
	            // this should only happen once as we delete the old one.
	            this.register_once(old_cookie);
	        }
	    }
	
	    if (this.storage === _.localStorage) {
	        old_cookie = _.cookie.parse(this.name);
	
	        _.cookie.remove(this.name);
	        _.cookie.remove(this.name, true);
	
	        if (old_cookie) {
	            this.register_once(old_cookie);
	        }
	    }
	};
	
	MixpanelPersistence.prototype.save = function() {
	    if (this.disabled) { return; }
	    this._expire_notification_campaigns();
	    this.storage.set(
	        this.name,
	        _.JSONEncode(this['props']),
	        this.expire_days,
	        this.cross_subdomain,
	        this.secure
	    );
	};
	
	MixpanelPersistence.prototype.remove = function() {
	    // remove both domain and subdomain cookies
	    this.storage.remove(this.name, false);
	    this.storage.remove(this.name, true);
	};
	
	// removes the storage entry and deletes all loaded data
	// forced name for tests
	MixpanelPersistence.prototype.clear = function() {
	    this.remove();
	    this['props'] = {};
	};
	
	/**
	 * @param {Object} props
	 * @param {*=} default_value
	 * @param {number=} days
	 */
	MixpanelPersistence.prototype.register_once = function(props, default_value, days) {
	    if (_.isObject(props)) {
	        if (typeof(default_value) === 'undefined') { default_value = 'None'; }
	        this.expire_days = (typeof(days) === 'undefined') ? this.default_expiry : days;
	
	        _.each(props, function(val, prop) {
	            if (!this['props'][prop] || this['props'][prop] === default_value) {
	                this['props'][prop] = val;
	            }
	        }, this);
	
	        this.save();
	
	        return true;
	    }
	    return false;
	};
	
	/**
	 * @param {Object} props
	 * @param {number=} days
	 */
	MixpanelPersistence.prototype.register = function(props, days) {
	    if (_.isObject(props)) {
	        this.expire_days = (typeof(days) === 'undefined') ? this.default_expiry : days;
	
	        _.extend(this['props'], props);
	
	        this.save();
	
	        return true;
	    }
	    return false;
	};
	
	MixpanelPersistence.prototype.unregister = function(prop) {
	    if (prop in this['props']) {
	        delete this['props'][prop];
	        this.save();
	    }
	};
	
	MixpanelPersistence.prototype._expire_notification_campaigns = _.safewrap(function() {
	    var campaigns_shown = this['props'][CAMPAIGN_IDS_KEY],
	        EXPIRY_TIME = Config.DEBUG ? 60 * 1000 : 60 * 60 * 1000; // 1 minute (Config.DEBUG) / 1 hour (PDXN)
	    if (!campaigns_shown) {
	        return;
	    }
	    for (var campaign_id in campaigns_shown) {
	        if (1 * new Date() - campaigns_shown[campaign_id] > EXPIRY_TIME) {
	            delete campaigns_shown[campaign_id];
	        }
	    }
	    if (_.isEmptyObject(campaigns_shown)) {
	        delete this['props'][CAMPAIGN_IDS_KEY];
	    }
	});
	
	MixpanelPersistence.prototype.update_campaign_params = function() {
	    if (!this.campaign_params_saved) {
	        this.register_once(_.info.campaignParams());
	        this.campaign_params_saved = true;
	    }
	};
	
	MixpanelPersistence.prototype.update_search_keyword = function(referrer) {
	    this.register(_.info.searchInfo(referrer));
	};
	
	// EXPORTED METHOD, we test this directly.
	MixpanelPersistence.prototype.update_referrer_info = function(referrer) {
	    // If referrer doesn't exist, we want to note the fact that it was type-in traffic.
	    this.register_once({
	        '$initial_referrer': referrer || '$direct',
	        '$initial_referring_domain': _.info.referringDomain(referrer) || '$direct'
	    }, '');
	};
	
	MixpanelPersistence.prototype.get_referrer_info = function() {
	    return _.strip_empty_properties({
	        '$initial_referrer': this['props']['$initial_referrer'],
	        '$initial_referring_domain': this['props']['$initial_referring_domain']
	    });
	};
	
	// safely fills the passed in object with stored properties,
	// does not override any properties defined in both
	// returns the passed in object
	MixpanelPersistence.prototype.safe_merge = function(props) {
	    _.each(this['props'], function(val, prop) {
	        if (!(prop in props)) {
	            props[prop] = val;
	        }
	    });
	
	    return props;
	};
	
	MixpanelPersistence.prototype.update_config = function(config) {
	    this.default_expiry = this.expire_days = config['cookie_expiration'];
	    this.set_disabled(config['disable_persistence']);
	    this.set_cross_subdomain(config['cross_subdomain_cookie']);
	    this.set_secure(config['secure_cookie']);
	};
	
	MixpanelPersistence.prototype.set_disabled = function(disabled) {
	    this.disabled = disabled;
	    if (this.disabled) {
	        this.remove();
	    }
	};
	
	MixpanelPersistence.prototype.set_cross_subdomain = function(cross_subdomain) {
	    if (cross_subdomain !== this.cross_subdomain) {
	        this.cross_subdomain = cross_subdomain;
	        this.remove();
	        this.save();
	    }
	};
	
	MixpanelPersistence.prototype.get_cross_subdomain = function() {
	    return this.cross_subdomain;
	};
	
	MixpanelPersistence.prototype.set_secure = function(secure) {
	    if (secure !== this.secure) {
	        this.secure = secure ? true : false;
	        this.remove();
	        this.save();
	    }
	};
	
	MixpanelPersistence.prototype._add_to_people_queue = function(queue, data) {
	    var q_key = this._get_queue_key(queue),
	        q_data = data[queue],
	        set_q = this._get_or_create_queue(SET_ACTION),
	        set_once_q = this._get_or_create_queue(SET_ONCE_ACTION),
	        add_q = this._get_or_create_queue(ADD_ACTION),
	        union_q = this._get_or_create_queue(UNION_ACTION),
	        append_q = this._get_or_create_queue(APPEND_ACTION, []);
	
	    if (q_key === SET_QUEUE_KEY) {
	        // Update the set queue - we can override any existing values
	        _.extend(set_q, q_data);
	        // if there was a pending increment, override it
	        // with the set.
	        this._pop_from_people_queue(ADD_ACTION, q_data);
	        // if there was a pending union, override it
	        // with the set.
	        this._pop_from_people_queue(UNION_ACTION, q_data);
	    } else if (q_key === SET_ONCE_QUEUE_KEY) {
	        // only queue the data if there is not already a set_once call for it.
	        _.each(q_data, function(v, k) {
	            if (!(k in set_once_q)) {
	                set_once_q[k] = v;
	            }
	        });
	    } else if (q_key === ADD_QUEUE_KEY) {
	        _.each(q_data, function(v, k) {
	            // If it exists in the set queue, increment
	            // the value
	            if (k in set_q) {
	                set_q[k] += v;
	            } else {
	                // If it doesn't exist, update the add
	                // queue
	                if (!(k in add_q)) {
	                    add_q[k] = 0;
	                }
	                add_q[k] += v;
	            }
	        }, this);
	    } else if (q_key === UNION_QUEUE_KEY) {
	        _.each(q_data, function(v, k) {
	            if (_.isArray(v)) {
	                if (!(k in union_q)) {
	                    union_q[k] = [];
	                }
	                // We may send duplicates, the server will dedup them.
	                union_q[k] = union_q[k].concat(v);
	            }
	        });
	    } else if (q_key === APPEND_QUEUE_KEY) {
	        append_q.push(q_data);
	    }
	
	    console$1.log('MIXPANEL PEOPLE REQUEST (QUEUED, PENDING IDENTIFY):');
	    console$1.log(data);
	
	    this.save();
	};
	
	MixpanelPersistence.prototype._pop_from_people_queue = function(queue, data) {
	    var q = this._get_queue(queue);
	    if (!_.isUndefined(q)) {
	        _.each(data, function(v, k) {
	            delete q[k];
	        }, this);
	
	        this.save();
	    }
	};
	
	MixpanelPersistence.prototype._get_queue_key = function(queue) {
	    if (queue === SET_ACTION) {
	        return SET_QUEUE_KEY;
	    } else if (queue === SET_ONCE_ACTION) {
	        return SET_ONCE_QUEUE_KEY;
	    } else if (queue === ADD_ACTION) {
	        return ADD_QUEUE_KEY;
	    } else if (queue === APPEND_ACTION) {
	        return APPEND_QUEUE_KEY;
	    } else if (queue === UNION_ACTION) {
	        return UNION_QUEUE_KEY;
	    } else {
	        console$1.error('Invalid queue:', queue);
	    }
	};
	
	MixpanelPersistence.prototype._get_queue = function(queue) {
	    return this['props'][this._get_queue_key(queue)];
	};
	MixpanelPersistence.prototype._get_or_create_queue = function(queue, default_val) {
	    var key = this._get_queue_key(queue);
	    default_val = _.isUndefined(default_val) ? {} : default_val;
	
	    return this['props'][key] || (this['props'][key] = default_val);
	};
	
	MixpanelPersistence.prototype.set_event_timer = function(event_name, timestamp) {
	    var timers = this['props'][EVENT_TIMERS_KEY] || {};
	    timers[event_name] = timestamp;
	    this['props'][EVENT_TIMERS_KEY] = timers;
	    this.save();
	};
	
	MixpanelPersistence.prototype.remove_event_timer = function(event_name) {
	    var timers = this['props'][EVENT_TIMERS_KEY] || {};
	    var timestamp = timers[event_name];
	    if (!_.isUndefined(timestamp)) {
	        delete this['props'][EVENT_TIMERS_KEY][event_name];
	        this.save();
	    }
	    return timestamp;
	};
	
	/**
	 * Mixpanel Library Object
	 * @constructor
	 */
	var MixpanelLib = function() {};
	
	/**
	 * Mixpanel People Object
	 * @constructor
	 */
	var MixpanelPeople = function() {};
	
	var MPNotif;
	
	/**
	 * create_mplib(token:string, config:object, name:string)
	 *
	 * This function is used by the init method of MixpanelLib objects
	 * as well as the main initializer at the end of the JSLib (that
	 * initializes document.mixpanel as well as any additional instances
	 * declared before this file has loaded).
	 */
	var create_mplib = function(token, config, name) {
	    var instance,
	        target = (name === PRIMARY_INSTANCE_NAME) ? mixpanel_master : mixpanel_master[name];
	
	    if (target && init_type === INIT_MODULE) {
	        instance = target;
	    } else {
	        if (target && !_.isArray(target)) {
	            console$1.error('You have already initialized ' + name);
	            return;
	        }
	        instance = new MixpanelLib();
	    }
	
	    instance._init(token, config, name);
	
	    instance['people'] = new MixpanelPeople();
	    instance['people']._init(instance);
	
	    // if any instance on the page has debug = true, we set the
	    // global debug to be true
	    Config.DEBUG = Config.DEBUG || instance.get_config('debug');
	
	    instance['__autotrack_enabled'] = instance.get_config('autotrack');
	    if (instance.get_config('autotrack')) {
	        var num_buckets = 100;
	        var num_enabled_buckets = 100;
	        if (!autotrack.enabledForProject(instance.get_config('token'), num_buckets, num_enabled_buckets)) {
	            instance['__autotrack_enabled'] = false;
	            console$1.log('Not in active bucket: disabling Automatic Event Collection.');
	        } else if (!autotrack.isBrowserSupported()) {
	            instance['__autotrack_enabled'] = false;
	            console$1.log('Disabling Automatic Event Collection because this browser is not supported');
	        } else {
	            autotrack.init(instance);
	        }
	
	        try {
	            add_dom_event_counting_handlers(instance);
	        } catch (e) {
	            console$1.error(e);
	        }
	    }
	
	    // if target is not defined, we called init after the lib already
	    // loaded, so there won't be an array of things to execute
	    if (!_.isUndefined(target) && _.isArray(target)) {
	        // Crunch through the people queue first - we queue this data up &
	        // flush on identify, so it's better to do all these operations first
	        instance._execute_array.call(instance['people'], target['people']);
	        instance._execute_array(target);
	    }
	
	    return instance;
	};
	
	// Initialization methods
	
	/**
	 * This function initializes a new instance of the Mixpanel tracking object.
	 * All new instances are added to the main mixpanel object as sub properties (such as
	 * mixpanel.library_name) and also returned by this function. To define a
	 * second instance on the page, you would call:
	 *
	 *     mixpanel.init('new token', { your: 'config' }, 'library_name');
	 *
	 * and use it like so:
	 *
	 *     mixpanel.library_name.track(...);
	 *
	 * @param {String} token   Your Mixpanel API token
	 * @param {Object} [config]  A dictionary of config options to override
	 * @param {String} [name]    The name for the new mixpanel instance that you want created
	 */
	MixpanelLib.prototype.init = function (token, config, name) {
	    if (_.isUndefined(name)) {
	        console$1.error('You must name your new library: init(token, config, name)');
	        return;
	    }
	    if (name === PRIMARY_INSTANCE_NAME) {
	        console$1.error('You must initialize the main mixpanel object right after you include the Mixpanel js snippet');
	        return;
	    }
	
	    var instance = create_mplib(token, config, name);
	    mixpanel_master[name] = instance;
	    instance._loaded();
	
	    return instance;
	};
	
	// mixpanel._init(token:string, config:object, name:string)
	//
	// This function sets up the current instance of the mixpanel
	// library.  The difference between this method and the init(...)
	// method is this one initializes the actual instance, whereas the
	// init(...) method sets up a new library and calls _init on it.
	//
	MixpanelLib.prototype._init = function(token, config, name) {
	    this['__loaded'] = true;
	    this['config'] = {};
	
	    this.set_config(_.extend({}, DEFAULT_CONFIG, config, {
	        'name': name,
	        'token': token,
	        'callback_fn': ((name === PRIMARY_INSTANCE_NAME) ? name : PRIMARY_INSTANCE_NAME + '.' + name) + '._jsc'
	    }));
	
	    this['_jsc'] = function() {};
	
	    this.__dom_loaded_queue = [];
	    this.__request_queue = [];
	    this.__disabled_events = [];
	    this._flags = {
	        'disable_all_events': false,
	        'identify_called': false
	    };
	
	    this['persistence'] = this['cookie'] = new MixpanelPersistence(this['config']);
	    this.register_once({'distinct_id': _.UUID()}, '');
	};
	
	// Private methods
	
	MixpanelLib.prototype._loaded = function() {
	    this.get_config('loaded')(this);
	
	    // this happens after so a user can call identify/name_tag in
	    // the loaded callback
	    if (this.get_config('track_pageview')) {
	        this.track_pageview();
	    }
	};
	
	MixpanelLib.prototype._dom_loaded = function() {
	    _.each(this.__dom_loaded_queue, function(item) {
	        this._track_dom.apply(this, item);
	    }, this);
	    _.each(this.__request_queue, function(item) {
	        this._send_request.apply(this, item);
	    }, this);
	    delete this.__dom_loaded_queue;
	    delete this.__request_queue;
	};
	
	MixpanelLib.prototype._track_dom = function(DomClass, args) {
	    if (this.get_config('img')) {
	        console$1.error('You can\'t use DOM tracking functions with img = true.');
	        return false;
	    }
	
	    if (!DOM_LOADED) {
	        this.__dom_loaded_queue.push([DomClass, args]);
	        return false;
	    }
	
	    var dt = new DomClass().init(this);
	    return dt.track.apply(dt, args);
	};
	
	/**
	 * _prepare_callback() should be called by callers of _send_request for use
	 * as the callback argument.
	 *
	 * If there is no callback, this returns null.
	 * If we are going to make XHR/XDR requests, this returns a function.
	 * If we are going to use script tags, this returns a string to use as the
	 * callback GET param.
	 */
	MixpanelLib.prototype._prepare_callback = function(callback, data) {
	    if (_.isUndefined(callback)) {
	        return null;
	    }
	
	    if (USE_XHR) {
	        var callback_function = function(response) {
	            callback(response, data);
	        };
	        return callback_function;
	    } else {
	        // if the user gives us a callback, we store as a random
	        // property on this instances jsc function and update our
	        // callback string to reflect that.
	        var jsc = this['_jsc'];
	        var randomized_cb = '' + Math.floor(Math.random() * 100000000);
	        var callback_string = this.get_config('callback_fn') + '[' + randomized_cb + ']';
	        jsc[randomized_cb] = function(response) {
	            delete jsc[randomized_cb];
	            callback(response, data);
	        };
	        return callback_string;
	    }
	};
	
	MixpanelLib.prototype._send_request = function(url, data, callback) {
	    if (ENQUEUE_REQUESTS) {
	        this.__request_queue.push(arguments);
	        return;
	    }
	
	    // needed to correctly format responses
	    var verbose_mode = this.get_config('verbose');
	    if (data['verbose']) { verbose_mode = true; }
	
	    if (this.get_config('test')) { data['test'] = 1; }
	    if (verbose_mode) { data['verbose'] = 1; }
	    if (this.get_config('img')) { data['img'] = 1; }
	    if (!USE_XHR) {
	        if (callback) {
	            data['callback'] = callback;
	        } else if (verbose_mode || this.get_config('test')) {
	            // Verbose output (from verbose mode, or an error in test mode) is a json blob,
	            // which by itself is not valid javascript. Without a callback, this verbose output will
	            // cause an error when returned via jsonp, so we force a no-op callback param.
	            // See the ECMA script spec: http://www.ecma-international.org/ecma-262/5.1/#sec-12.4
	            data['callback'] = '(function(){})';
	        }
	    }
	
	    data['ip'] = this.get_config('ip')?1:0;
	    data['_'] = new Date().getTime().toString();
	    url += '?' + _.HTTPBuildQuery(data);
	
	    if ('img' in data) {
	        var img = document.createElement('img');
	        img.src = url;
	        document.body.appendChild(img);
	    } else if (USE_XHR) {
	        try {
	            var req = new XMLHttpRequest();
	            req.open('GET', url, true);
	            // send the mp_optout cookie
	            // withCredentials cannot be modified until after calling .open on Android and Mobile Safari
	            req.withCredentials = true;
	            req.onreadystatechange = function () {
	                if (req.readyState === 4) { // XMLHttpRequest.DONE == 4, except in safari 4
	                    if (url.indexOf('api.mixpanel.com/track') !== -1) {
	                        autotrack.checkForBackoff(req);
	                    }
	                    if (req.status === 200) {
	                        if (callback) {
	                            if (verbose_mode) {
	                                callback(_.JSONDecode(req.responseText));
	                            } else {
	                                callback(Number(req.responseText));
	                            }
	                        }
	                    } else {
	                        var error = 'Bad HTTP status: ' + req.status + ' ' + req.statusText;
	                        console$1.error(error);
	                        if (callback) {
	                            if (verbose_mode) {
	                                callback({status: 0, error: error});
	                            } else {
	                                callback(0);
	                            }
	                        }
	                    }
	                }
	            };
	            req.send(null);
	        } catch (e) {
	            console$1.error(e);
	        }
	    } else {
	        var script = document.createElement('script');
	        script.type = 'text/javascript';
	        script.async = true;
	        script.defer = true;
	        script.src = url;
	        var s = document.getElementsByTagName('script')[0];
	        s.parentNode.insertBefore(script, s);
	    }
	};
	
	/**
	 * _execute_array() deals with processing any mixpanel function
	 * calls that were called before the Mixpanel library were loaded
	 * (and are thus stored in an array so they can be called later)
	 *
	 * Note: we fire off all the mixpanel function calls && user defined
	 * functions BEFORE we fire off mixpanel tracking calls. This is so
	 * identify/register/set_config calls can properly modify early
	 * tracking calls.
	 *
	 * @param {Array} array
	 */
	MixpanelLib.prototype._execute_array = function(array) {
	    var fn_name, alias_calls = [], other_calls = [], tracking_calls = [];
	    _.each(array, function(item) {
	        if (item) {
	            fn_name = item[0];
	            if (typeof(item) === 'function') {
	                item.call(this);
	            } else if (_.isArray(item) && fn_name === 'alias') {
	                alias_calls.push(item);
	            } else if (_.isArray(item) && fn_name.indexOf('track') !== -1 && typeof(this[fn_name]) === 'function') {
	                tracking_calls.push(item);
	            } else {
	                other_calls.push(item);
	            }
	        }
	    }, this);
	
	    var execute = function(calls, context) {
	        _.each(calls, function(item) {
	            this[item[0]].apply(this, item.slice(1));
	        }, context);
	    };
	
	    execute(alias_calls, this);
	    execute(other_calls, this);
	    execute(tracking_calls, this);
	};
	
	/**
	 * push() keeps the standard async-array-push
	 * behavior around after the lib is loaded.
	 * This is only useful for external integrations that
	 * do not wish to rely on our convenience methods
	 * (created in the snippet).
	 *
	 * ### Usage:
	 *     mixpanel.push(['register', { a: 'b' }]);
	 *
	 * @param {Array} item A [function_name, args...] array to be executed
	 */
	MixpanelLib.prototype.push = function(item) {
	    this._execute_array([item]);
	};
	
	/**
	 * Disable events on the Mixpanel object. If passed no arguments,
	 * this function disables tracking of any event. If passed an
	 * array of event names, those events will be disabled, but other
	 * events will continue to be tracked.
	 *
	 * Note: this function does not stop other mixpanel functions from
	 * firing, such as register() or people.set().
	 *
	 * @param {Array} [events] An array of event names to disable
	 */
	MixpanelLib.prototype.disable = function(events) {
	    if (typeof(events) === 'undefined') {
	        this._flags.disable_all_events = true;
	    } else {
	        this.__disabled_events = this.__disabled_events.concat(events);
	    }
	};
	
	/**
	 * Track an event. This is the most important and
	 * frequently used Mixpanel function.
	 *
	 * ### Usage:
	 *
	 *     // track an event named 'Registered'
	 *     mixpanel.track('Registered', {'Gender': 'Male', 'Age': 21});
	 *
	 * To track link clicks or form submissions, see track_links() or track_forms().
	 *
	 * @param {String} event_name The name of the event. This can be anything the user does - 'Button Click', 'Sign Up', 'Item Purchased', etc.
	 * @param {Object} [properties] A set of properties to include with the event you're sending. These describe the user who did the event or details about the event itself.
	 * @param {Function} [callback] If provided, the callback function will be called after tracking the event.
	 */
	MixpanelLib.prototype.track = function(event_name, properties, callback) {
	    if (typeof(callback) !== 'function') {
	        callback = function() {};
	    }
	
	    if (_.isUndefined(event_name)) {
	        console$1.error('No event name provided to mixpanel.track');
	        return;
	    }
	
	    if (this._event_is_disabled(event_name)) {
	        callback(0);
	        return;
	    }
	
	    // set defaults
	    properties = properties || {};
	    properties['token'] = this.get_config('token');
	
	    // set $duration if time_event was previously called for this event
	    var start_timestamp = this['persistence'].remove_event_timer(event_name);
	    if (!_.isUndefined(start_timestamp)) {
	        var duration_in_ms = new Date().getTime() - start_timestamp;
	        properties['$duration'] = parseFloat((duration_in_ms / 1000).toFixed(3));
	    }
	
	    // update persistence
	    this['persistence'].update_search_keyword(document.referrer);
	
	    if (this.get_config('store_google')) { this['persistence'].update_campaign_params(); }
	    if (this.get_config('save_referrer')) { this['persistence'].update_referrer_info(document.referrer); }
	
	    // note: extend writes to the first object, so lets make sure we
	    // don't write to the persistence properties object and info
	    // properties object by passing in a new object
	
	    // update properties with pageview info and super-properties
	    properties = _.extend(
	        {},
	        _.info.properties(),
	        this['persistence'].properties(),
	        properties
	    );
	
	    try {
	        if (this.get_config('autotrack') && event_name !== 'mp_page_view' && event_name !== '$create_alias') {
	            // The point of $__c is to count how many clicks occur per tracked event. Since we're
	            // tracking an event in this function, we need to reset the $__c value.
	            properties = _.extend({}, properties, this.mp_counts);
	            this.mp_counts = {'$__c': 0};
	            _.cookie.set('mp_' + this.get_config('name') + '__c', 0, 1, true);
	        }
	    } catch (e) {
	        console$1.error(e);
	    }
	
	    var property_blacklist = this.get_config('property_blacklist');
	    if (_.isArray(property_blacklist)) {
	        _.each(property_blacklist, function(blacklisted_prop) {
	            delete properties[blacklisted_prop];
	        });
	    } else {
	        console$1.error('Invalid value for property_blacklist config: ' + property_blacklist);
	    }
	
	    var data = {
	        'event': event_name,
	        'properties': properties
	    };
	
	    var truncated_data = _.truncate(data, 255);
	    var json_data      = _.JSONEncode(truncated_data);
	    var encoded_data   = _.base64Encode(json_data);
	
	    console$1.log('MIXPANEL REQUEST:');
	    console$1.log(truncated_data);
	
	    this._send_request(
	        this.get_config('api_host') + '/track/',
	        { 'data': encoded_data },
	        this._prepare_callback(callback, truncated_data)
	    );
	
	    return truncated_data;
	};
	
	/**
	 * Track a page view event, which is currently ignored by the server.
	 * This function is called by default on page load unless the
	 * track_pageview configuration variable is false.
	 *
	 * @param {String} [page] The url of the page to record. If you don't include this, it defaults to the current url.
	 * @api private
	 */
	MixpanelLib.prototype.track_pageview = function(page) {
	    if (_.isUndefined(page)) {
	        page = document.location.href;
	    }
	    this.track('mp_page_view', _.info.pageviewInfo(page));
	};
	
	/**
	 * Track clicks on a set of document elements. Selector must be a
	 * valid query. Elements must exist on the page at the time track_links is called.
	 *
	 * ### Usage:
	 *
	 *     // track click for link id #nav
	 *     mixpanel.track_links('#nav', 'Clicked Nav Link');
	 *
	 * ### Notes:
	 *
	 * This function will wait up to 300 ms for the Mixpanel
	 * servers to respond. If they have not responded by that time
	 * it will head to the link without ensuring that your event
	 * has been tracked.  To configure this timeout please see the
	 * set_config() documentation below.
	 *
	 * If you pass a function in as the properties argument, the
	 * function will receive the DOMElement that triggered the
	 * event as an argument.  You are expected to return an object
	 * from the function; any properties defined on this object
	 * will be sent to mixpanel as event properties.
	 *
	 * @type {Function}
	 * @param {Object|String} query A valid DOM query, element or jQuery-esque list
	 * @param {String} event_name The name of the event to track
	 * @param {Object|Function} [properties] A properties object or function that returns a dictionary of properties when passed a DOMElement
	 */
	MixpanelLib.prototype.track_links = function() {
	    return this._track_dom.call(this, LinkTracker, arguments);
	};
	
	/**
	 * Track form submissions. Selector must be a valid query.
	 *
	 * ### Usage:
	 *
	 *     // track submission for form id 'register'
	 *     mixpanel.track_forms('#register', 'Created Account');
	 *
	 * ### Notes:
	 *
	 * This function will wait up to 300 ms for the mixpanel
	 * servers to respond, if they have not responded by that time
	 * it will head to the link without ensuring that your event
	 * has been tracked.  To configure this timeout please see the
	 * set_config() documentation below.
	 *
	 * If you pass a function in as the properties argument, the
	 * function will receive the DOMElement that triggered the
	 * event as an argument.  You are expected to return an object
	 * from the function; any properties defined on this object
	 * will be sent to mixpanel as event properties.
	 *
	 * @type {Function}
	 * @param {Object|String} query A valid DOM query, element or jQuery-esque list
	 * @param {String} event_name The name of the event to track
	 * @param {Object|Function} [properties] This can be a set of properties, or a function that returns a set of properties after being passed a DOMElement
	 */
	MixpanelLib.prototype.track_forms = function() {
	    return this._track_dom.call(this, FormTracker, arguments);
	};
	
	/**
	 * Time an event by including the time between this call and a
	 * later 'track' call for the same event in the properties sent
	 * with the event.
	 *
	 * ### Usage:
	 *
	 *     // time an event named 'Registered'
	 *     mixpanel.time_event('Registered');
	 *     mixpanel.track('Registered', {'Gender': 'Male', 'Age': 21});
	 *
	 * When called for a particular event name, the next track call for that event
	 * name will include the elapsed time between the 'time_event' and 'track'
	 * calls. This value is stored as seconds in the '$duration' property.
	 *
	 * @param {String} event_name The name of the event.
	 */
	MixpanelLib.prototype.time_event = function(event_name) {
	    if (_.isUndefined(event_name)) {
	        console$1.error('No event name provided to mixpanel.time_event');
	        return;
	    }
	
	    if (this._event_is_disabled(event_name)) {
	        return;
	    }
	
	    this['persistence'].set_event_timer(event_name,  new Date().getTime());
	};
	
	/**
	 * Register a set of super properties, which are included with all
	 * events. This will overwrite previous super property values.
	 *
	 * ### Usage:
	 *
	 *     // register 'Gender' as a super property
	 *     mixpanel.register({'Gender': 'Female'});
	 *
	 *     // register several super properties when a user signs up
	 *     mixpanel.register({
	 *         'Email': 'jdoe@example.com',
	 *         'Account Type': 'Free'
	 *     });
	 *
	 * @param {Object} properties An associative array of properties to store about the user
	 * @param {Number} [days] How many days since the user's last visit to store the super properties
	 */
	MixpanelLib.prototype.register = function(props, days) {
	    this['persistence'].register(props, days);
	};
	
	/**
	 * Register a set of super properties only once. This will not
	 * overwrite previous super property values, unlike register().
	 *
	 * ### Usage:
	 *
	 *     // register a super property for the first time only
	 *     mixpanel.register_once({
	 *         'First Login Date': new Date().toISOString()
	 *     });
	 *
	 * ### Notes:
	 *
	 * If default_value is specified, current super properties
	 * with that value will be overwritten.
	 *
	 * @param {Object} properties An associative array of properties to store about the user
	 * @param {*} [default_value] Value to override if already set in super properties (ex: 'False') Default: 'None'
	 * @param {Number} [days] How many days since the users last visit to store the super properties
	 */
	MixpanelLib.prototype.register_once = function(props, default_value, days) {
	    this['persistence'].register_once(props, default_value, days);
	};
	
	/**
	 * Delete a super property stored with the current user.
	 *
	 * @param {String} property The name of the super property to remove
	 */
	MixpanelLib.prototype.unregister = function(property) {
	    this['persistence'].unregister(property);
	};
	
	MixpanelLib.prototype._register_single = function(prop, value) {
	    var props = {};
	    props[prop] = value;
	    this.register(props);
	};
	
	/**
	 * Identify a user with a unique ID. All subsequent
	 * actions caused by this user will be tied to this unique ID. This
	 * property is used to track unique visitors. If the method is
	 * never called, then unique visitors will be identified by a UUID
	 * generated the first time they visit the site.
	 *
	 * ### Notes:
	 *
	 * You can call this function to overwrite a previously set
	 * unique ID for the current user. Mixpanel cannot translate
	 * between IDs at this time, so when you change a user's ID
	 * they will appear to be a new user.
	 *
	 * identify() should not be called to link anonymous activity to
	 * subsequent activity when a unique ID is first assigned.
	 * Use alias() when a unique ID is first assigned (registration), and
	 * use identify() to identify the user with that unique ID on an ongoing
	 * basis (e.g., each time a user logs in after registering).
	 * Do not call identify() at the same time as alias().
	 *
	 * @param {String} [unique_id] A string that uniquely identifies a user. If not provided, the distinct_id currently in the persistent store (cookie or localStorage) will be used.
	 */
	MixpanelLib.prototype.identify = function(unique_id, _set_callback, _add_callback, _append_callback, _set_once_callback, _union_callback) {
	    // Optional Parameters
	    //  _set_callback:function  A callback to be run if and when the People set queue is flushed
	    //  _add_callback:function  A callback to be run if and when the People add queue is flushed
	    //  _append_callback:function  A callback to be run if and when the People append queue is flushed
	    //  _set_once_callback:function  A callback to be run if and when the People set_once queue is flushed
	    //  _union_callback:function  A callback to be run if and when the People union queue is flushed
	
	    // identify only changes the distinct id if it doesn't match either the existing or the alias;
	    // if it's new, blow away the alias as well.
	    if (unique_id !== this.get_distinct_id() && unique_id !== this.get_property(ALIAS_ID_KEY)) {
	        this.unregister(ALIAS_ID_KEY);
	        this._register_single('distinct_id', unique_id);
	    }
	    this._check_and_handle_notifications(this.get_distinct_id());
	    this._flags.identify_called = true;
	    // Flush any queued up people requests
	    this['people']._flush(_set_callback, _add_callback, _append_callback, _set_once_callback, _union_callback);
	};
	
	/**
	 * Clears super properties and generates a new random distinct_id for this instance.
	 * Useful for clearing data when a user logs out.
	 */
	MixpanelLib.prototype.reset = function() {
	    this['persistence'].clear();
	    this._flags.identify_called = false;
	    this.register_once({'distinct_id': _.UUID()}, '');
	};
	
	/**
	 * Returns the current distinct id of the user. This is either the id automatically
	 * generated by the library or the id that has been passed by a call to identify().
	 *
	 * ### Notes:
	 *
	 * get_distinct_id() can only be called after the Mixpanel library has finished loading.
	 * init() has a loaded function available to handle this automatically. For example:
	 *
	 *     // set distinct_id after the mixpanel library has loaded
	 *     mixpanel.init('YOUR PROJECT TOKEN', {
	 *         loaded: function(mixpanel) {
	 *             distinct_id = mixpanel.get_distinct_id();
	 *         }
	 *     });
	 */
	MixpanelLib.prototype.get_distinct_id = function() {
	    return this.get_property('distinct_id');
	};
	
	/**
	 * Create an alias, which Mixpanel will use to link two distinct_ids going forward (not retroactively).
	 * Multiple aliases can map to the same original ID, but not vice-versa. Aliases can also be chained - the
	 * following is a valid scenario:
	 *
	 *     mixpanel.alias('new_id', 'existing_id');
	 *     ...
	 *     mixpanel.alias('newer_id', 'new_id');
	 *
	 * If the original ID is not passed in, we will use the current distinct_id - probably the auto-generated GUID.
	 *
	 * ### Notes:
	 *
	 * The best practice is to call alias() when a unique ID is first created for a user
	 * (e.g., when a user first registers for an account and provides an email address).
	 * alias() should never be called more than once for a given user, except to
	 * chain a newer ID to a previously new ID, as described above.
	 *
	 * @param {String} alias A unique identifier that you want to use for this user in the future.
	 * @param {String} [original] The current identifier being used for this user.
	 */
	MixpanelLib.prototype.alias = function(alias, original) {
	    // If the $people_distinct_id key exists in persistence, there has been a previous
	    // mixpanel.people.identify() call made for this user. It is VERY BAD to make an alias with
	    // this ID, as it will duplicate users.
	    if (alias === this.get_property(PEOPLE_DISTINCT_ID_KEY)) {
	        console$1.critical('Attempting to create alias for existing People user - aborting.');
	        return -2;
	    }
	
	    var _this = this;
	    if (_.isUndefined(original)) {
	        original = this.get_distinct_id();
	    }
	    if (alias !== original) {
	        this._register_single(ALIAS_ID_KEY, alias);
	        return this.track('$create_alias', { 'alias': alias, 'distinct_id': original }, function() {
	            // Flush the people queue
	            _this.identify(alias);
	        });
	    } else {
	        console$1.error('alias matches current distinct_id - skipping api call.');
	        this.identify(alias);
	        return -1;
	    }
	};
	
	/**
	 * Provide a string to recognize the user by. The string passed to
	 * this method will appear in the Mixpanel Streams product rather
	 * than an automatically generated name. Name tags do not have to
	 * be unique.
	 *
	 * This value will only be included in Streams data.
	 *
	 * @param {String} name_tag A human readable name for the user
	 * @api private
	 */
	MixpanelLib.prototype.name_tag = function(name_tag) {
	    this._register_single('mp_name_tag', name_tag);
	};
	
	/**
	 * Update the configuration of a mixpanel library instance.
	 *
	 * The default config is:
	 *
	 *     {
	 *       // super properties cookie expiration (in days)
	 *       cookie_expiration:          365
	 *
	 *       // super properties span subdomains
	 *       cross_subdomain_cookie:     true
	 *
	 *       // if this is true, the mixpanel cookie or localStorage entry
	 *       // will be deleted, and no user persistence will take place
	 *       disable_persistence:        false
	 *
	 *       // type of persistent store for super properties (cookie/
	 *       // localStorage) if set to 'localStorage', any existing
	 *       // mixpanel cookie value with the same persistence_name
	 *       // will be transferred to localStorage and deleted
	 *       persistence:                'cookie'
	 *
	 *       // name for super properties persistent store
	 *       persistence_name:           ''
	 *
	 *       // names of properties/superproperties which should never
	 *       // be sent with track() calls
	 *       property_blacklist:         []
	 *
	 *       // if this is true, mixpanel cookies will be marked as
	 *       // secure, meaning they will only be transmitted over https
	 *       secure_cookie:              false
	 *
	 *       // the amount of time track_links will
	 *       // wait for Mixpanel's servers to respond
	 *       track_links_timeout:        300
	 *
	 *       // should we track a page view on page load
	 *       track_pageview:             true
	 *
	 *       // if you set upgrade to be true, the library will check for
	 *       // a cookie from our old js library and import super
	 *       // properties from it, then the old cookie is deleted
	 *       // The upgrade config option only works in the initialization,
	 *       // so make sure you set it when you create the library.
	 *       upgrade:                    false
	 *     }
	 *
	 *
	 * @param {Object} config A dictionary of new configuration values to update
	 */
	MixpanelLib.prototype.set_config = function(config) {
	    if (_.isObject(config)) {
	        _.extend(this['config'], config);
	
	        if (!this.get_config('persistence_name')) {
	            this['config']['persistence_name'] = this['config']['cookie_name'];
	        }
	        if (!this.get_config('disable_persistence')) {
	            this['config']['disable_persistence'] = this['config']['disable_cookie'];
	        }
	
	        if (this['persistence']) {
	            this['persistence'].update_config(this['config']);
	        }
	        Config.DEBUG = Config.DEBUG || this.get_config('debug');
	    }
	};
	
	/**
	 * returns the current config object for the library.
	 */
	MixpanelLib.prototype.get_config = function(prop_name) {
	    return this['config'][prop_name];
	};
	
	/**
	 * Returns the value of the super property named property_name. If no such
	 * property is set, get_property() will return the undefined value.
	 *
	 * ### Notes:
	 *
	 * get_property() can only be called after the Mixpanel library has finished loading.
	 * init() has a loaded function available to handle this automatically. For example:
	 *
	 *     // grab value for 'user_id' after the mixpanel library has loaded
	 *     mixpanel.init('YOUR PROJECT TOKEN', {
	 *         loaded: function(mixpanel) {
	 *             user_id = mixpanel.get_property('user_id');
	 *         }
	 *     });
	 *
	 * @param {String} property_name The name of the super property you want to retrieve
	 */
	MixpanelLib.prototype.get_property = function(property_name) {
	    return this['persistence']['props'][property_name];
	};
	
	MixpanelLib.prototype.toString = function() {
	    var name = this.get_config('name');
	    if (name !== PRIMARY_INSTANCE_NAME) {
	        name = PRIMARY_INSTANCE_NAME + '.' + name;
	    }
	    return name;
	};
	
	MixpanelLib.prototype._event_is_disabled = function(event_name) {
	    return _.isBlockedUA(userAgent) ||
	        this._flags.disable_all_events ||
	        _.include(this.__disabled_events, event_name);
	};
	
	MixpanelLib.prototype._check_and_handle_notifications = function(distinct_id) {
	    if (!distinct_id || this._flags.identify_called || this.get_config('disable_notifications')) {
	        return;
	    }
	
	    console$1.log('MIXPANEL NOTIFICATION CHECK');
	
	    var data = {
	        'verbose':     true,
	        'version':     '1',
	        'lib':         'web',
	        'token':       this.get_config('token'),
	        'distinct_id': distinct_id
	    };
	    var self = this;
	    this._send_request(
	        this.get_config('decide_host') + '/decide/',
	        data,
	        this._prepare_callback(function(r) {
	            if (r['notifications'] && r['notifications'].length > 0) {
	                self._show_notification.call(self, r['notifications'][0]);
	            }
	        })
	    );
	};
	
	MixpanelLib.prototype._show_notification = function(notification_data) {
	    var notification = new MPNotif(notification_data, this);
	    notification.show();
	};
	
	MixpanelPeople.prototype._init = function(mixpanel_instance) {
	    this._mixpanel = mixpanel_instance;
	};
	
	/*
	 * Set properties on a user record.
	 *
	 * ### Usage:
	 *
	 *     mixpanel.people.set('gender', 'm');
	 *
	 *     // or set multiple properties at once
	 *     mixpanel.people.set({
	 *         'Company': 'Acme',
	 *         'Plan': 'Premium',
	 *         'Upgrade date': new Date()
	 *     });
	 *     // properties can be strings, integers, dates, or lists
	 *
	 * @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and values.
	 * @param {*} [to] A value to set on the given property name
	 * @param {Function} [callback] If provided, the callback will be called after the tracking event
	 */
	MixpanelPeople.prototype.set = function(prop, to, callback) {
	    var data = {};
	    var $set = {};
	    if (_.isObject(prop)) {
	        _.each(prop, function(v, k) {
	            if (!this._is_reserved_property(k)) {
	                $set[k] = v;
	            }
	        }, this);
	        callback = to;
	    } else {
	        $set[prop] = to;
	    }
	
	    // make sure that the referrer info has been updated and saved
	    if (this._get_config('save_referrer')) {
	        this._mixpanel['persistence'].update_referrer_info(document.referrer);
	    }
	
	    // update $set object with default people properties
	    $set = _.extend(
	        {},
	        _.info.people_properties(),
	        this._mixpanel['persistence'].get_referrer_info(),
	        $set
	    );
	
	    data[SET_ACTION] = $set;
	
	    return this._send_request(data, callback);
	};
	
	/*
	 * Set properties on a user record, only if they do not yet exist.
	 * This will not overwrite previous people property values, unlike
	 * people.set().
	 *
	 * ### Usage:
	 *
	 *     mixpanel.people.set_once('First Login Date', new Date());
	 *
	 *     // or set multiple properties at once
	 *     mixpanel.people.set_once({
	 *         'First Login Date': new Date(),
	 *         'Starting Plan': 'Premium'
	 *     });
	 *
	 *     // properties can be strings, integers or dates
	 *
	 * @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and values.
	 * @param {*} [to] A value to set on the given property name
	 * @param {Function} [callback] If provided, the callback will be called after the tracking event
	 */
	MixpanelPeople.prototype.set_once = function(prop, to, callback) {
	    var data = {};
	    var $set_once = {};
	    if (_.isObject(prop)) {
	        _.each(prop, function(v, k) {
	            if (!this._is_reserved_property(k)) {
	                $set_once[k] = v;
	            }
	        }, this);
	        callback = to;
	    } else {
	        $set_once[prop] = to;
	    }
	    data[SET_ONCE_ACTION] = $set_once;
	    return this._send_request(data, callback);
	};
	
	/*
	 * Increment/decrement numeric people analytics properties.
	 *
	 * ### Usage:
	 *
	 *     mixpanel.people.increment('page_views', 1);
	 *
	 *     // or, for convenience, if you're just incrementing a counter by
	 *     // 1, you can simply do
	 *     mixpanel.people.increment('page_views');
	 *
	 *     // to decrement a counter, pass a negative number
	 *     mixpanel.people.increment('credits_left', -1);
	 *
	 *     // like mixpanel.people.set(), you can increment multiple
	 *     // properties at once:
	 *     mixpanel.people.increment({
	 *         counter1: 1,
	 *         counter2: 6
	 *     });
	 *
	 * @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and numeric values.
	 * @param {Number} [by] An amount to increment the given property
	 * @param {Function} [callback] If provided, the callback will be called after the tracking event
	 */
	MixpanelPeople.prototype.increment = function(prop, by, callback) {
	    var data = {};
	    var $add = {};
	    if (_.isObject(prop)) {
	        _.each(prop, function(v, k) {
	            if (!this._is_reserved_property(k)) {
	                if (isNaN(parseFloat(v))) {
	                    console$1.error('Invalid increment value passed to mixpanel.people.increment - must be a number');
	                    return;
	                } else {
	                    $add[k] = v;
	                }
	            }
	        }, this);
	        callback = by;
	    } else {
	        // convenience: mixpanel.people.increment('property'); will
	        // increment 'property' by 1
	        if (_.isUndefined(by)) {
	            by = 1;
	        }
	        $add[prop] = by;
	    }
	    data[ADD_ACTION] = $add;
	
	    return this._send_request(data, callback);
	};
	
	/*
	 * Append a value to a list-valued people analytics property.
	 *
	 * ### Usage:
	 *
	 *     // append a value to a list, creating it if needed
	 *     mixpanel.people.append('pages_visited', 'homepage');
	 *
	 *     // like mixpanel.people.set(), you can append multiple
	 *     // properties at once:
	 *     mixpanel.people.append({
	 *         list1: 'bob',
	 *         list2: 123
	 *     });
	 *
	 * @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and values.
	 * @param {*} [value] An item to append to the list
	 * @param {Function} [callback] If provided, the callback will be called after the tracking event
	 */
	MixpanelPeople.prototype.append = function(list_name, value, callback) {
	    var data = {};
	    var $append = {};
	    if (_.isObject(list_name)) {
	        _.each(list_name, function(v, k) {
	            if (!this._is_reserved_property(k)) {
	                $append[k] = v;
	            }
	        }, this);
	        callback = value;
	    } else {
	        $append[list_name] = value;
	    }
	    data[APPEND_ACTION] = $append;
	
	    return this._send_request(data, callback);
	};
	
	/*
	 * Merge a given list with a list-valued people analytics property,
	 * excluding duplicate values.
	 *
	 * ### Usage:
	 *
	 *     // merge a value to a list, creating it if needed
	 *     mixpanel.people.union('pages_visited', 'homepage');
	 *
	 *     // like mixpanel.people.set(), you can append multiple
	 *     // properties at once:
	 *     mixpanel.people.union({
	 *         list1: 'bob',
	 *         list2: 123
	 *     });
	 *
	 *     // like mixpanel.people.append(), you can append multiple
	 *     // values to the same list:
	 *     mixpanel.people.union({
	 *         list1: ['bob', 'billy']
	 *     });
	 *
	 * @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and values.
	 * @param {*} [value] Value / values to merge with the given property
	 * @param {Function} [callback] If provided, the callback will be called after the tracking event
	 */
	MixpanelPeople.prototype.union = function(list_name, values, callback) {
	    var data = {};
	    var $union = {};
	    if (_.isObject(list_name)) {
	        _.each(list_name, function(v, k) {
	            if (!this._is_reserved_property(k)) {
	                $union[k] = _.isArray(v) ? v : [v];
	            }
	        }, this);
	        callback = values;
	    } else {
	        $union[list_name] = _.isArray(values) ? values : [values];
	    }
	    data[UNION_ACTION] = $union;
	
	    return this._send_request(data, callback);
	};
	
	/*
	 * Record that you have charged the current user a certain amount
	 * of money. Charges recorded with track_charge() will appear in the
	 * Mixpanel revenue report.
	 *
	 * ### Usage:
	 *
	 *     // charge a user $50
	 *     mixpanel.people.track_charge(50);
	 *
	 *     // charge a user $30.50 on the 2nd of january
	 *     mixpanel.people.track_charge(30.50, {
	 *         '$time': new Date('jan 1 2012')
	 *     });
	 *
	 * @param {Number} amount The amount of money charged to the current user
	 * @param {Object} [properties] An associative array of properties associated with the charge
	 * @param {Function} [callback] If provided, the callback will be called when the server responds
	 */
	MixpanelPeople.prototype.track_charge = function(amount, properties, callback) {
	    if (!_.isNumber(amount)) {
	        amount = parseFloat(amount);
	        if (isNaN(amount)) {
	            console$1.error('Invalid value passed to mixpanel.people.track_charge - must be a number');
	            return;
	        }
	    }
	
	    return this.append('$transactions', _.extend({
	        '$amount': amount
	    }, properties), callback);
	};
	
	/*
	 * Permanently clear all revenue report transactions from the
	 * current user's people analytics profile.
	 *
	 * ### Usage:
	 *
	 *     mixpanel.people.clear_charges();
	 *
	 * @param {Function} [callback] If provided, the callback will be called after the tracking event
	 */
	MixpanelPeople.prototype.clear_charges = function(callback) {
	    return this.set('$transactions', [], callback);
	};
	
	/*
	 * Permanently deletes the current people analytics profile from
	 * Mixpanel (using the current distinct_id).
	 *
	 * ### Usage:
	 *
	 *     // remove the all data you have stored about the current user
	 *     mixpanel.people.delete_user();
	 *
	 */
	MixpanelPeople.prototype.delete_user = function() {
	    if (!this._identify_called()) {
	        console$1.error('mixpanel.people.delete_user() requires you to call identify() first');
	        return;
	    }
	    var data = {'$delete': this._mixpanel.get_distinct_id()};
	    return this._send_request(data);
	};
	
	MixpanelPeople.prototype.toString = function() {
	    return this._mixpanel.toString() + '.people';
	};
	
	MixpanelPeople.prototype._send_request = function(data, callback) {
	    data['$token'] = this._get_config('token');
	    data['$distinct_id'] = this._mixpanel.get_distinct_id();
	
	    var date_encoded_data = _.encodeDates(data);
	    var truncated_data    = _.truncate(date_encoded_data, 255);
	    var json_data         = _.JSONEncode(date_encoded_data);
	    var encoded_data      = _.base64Encode(json_data);
	
	    if (!this._identify_called()) {
	        this._enqueue(data);
	        if (!_.isUndefined(callback)) {
	            if (this._get_config('verbose')) {
	                callback({status: -1, error: null});
	            } else {
	                callback(-1);
	            }
	        }
	        return truncated_data;
	    }
	
	    console$1.log('MIXPANEL PEOPLE REQUEST:');
	    console$1.log(truncated_data);
	
	    this._mixpanel._send_request(
	        this._get_config('api_host') + '/engage/',
	        {'data': encoded_data},
	        this._mixpanel._prepare_callback(callback, truncated_data)
	    );
	
	    return truncated_data;
	};
	
	MixpanelPeople.prototype._get_config = function(conf_var) {
	    return this._mixpanel.get_config(conf_var);
	};
	
	MixpanelPeople.prototype._identify_called = function() {
	    return this._mixpanel._flags.identify_called === true;
	};
	
	// Queue up engage operations if identify hasn't been called yet.
	MixpanelPeople.prototype._enqueue = function(data) {
	    if (SET_ACTION in data) {
	        this._mixpanel['persistence']._add_to_people_queue(SET_ACTION, data);
	    } else if (SET_ONCE_ACTION in data) {
	        this._mixpanel['persistence']._add_to_people_queue(SET_ONCE_ACTION, data);
	    } else if (ADD_ACTION in data) {
	        this._mixpanel['persistence']._add_to_people_queue(ADD_ACTION, data);
	    } else if (APPEND_ACTION in data) {
	        this._mixpanel['persistence']._add_to_people_queue(APPEND_ACTION, data);
	    } else if (UNION_ACTION in data) {
	        this._mixpanel['persistence']._add_to_people_queue(UNION_ACTION, data);
	    } else {
	        console$1.error('Invalid call to _enqueue():', data);
	    }
	};
	
	// Flush queued engage operations - order does not matter,
	// and there are network level race conditions anyway
	MixpanelPeople.prototype._flush = function(_set_callback, _add_callback, _append_callback, _set_once_callback, _union_callback) {
	    var _this = this;
	    var $set_queue = _.extend({}, this._mixpanel['persistence']._get_queue(SET_ACTION));
	    var $set_once_queue = _.extend({}, this._mixpanel['persistence']._get_queue(SET_ONCE_ACTION));
	    var $add_queue = _.extend({}, this._mixpanel['persistence']._get_queue(ADD_ACTION));
	    var $append_queue = this._mixpanel['persistence']._get_queue(APPEND_ACTION);
	    var $union_queue = _.extend({}, this._mixpanel['persistence']._get_queue(UNION_ACTION));
	
	    if (!_.isUndefined($set_queue) && _.isObject($set_queue) && !_.isEmptyObject($set_queue)) {
	        _this._mixpanel['persistence']._pop_from_people_queue(SET_ACTION, $set_queue);
	        this.set($set_queue, function(response, data) {
	            // on bad response, we want to add it back to the queue
	            if (response === 0) {
	                _this._mixpanel['persistence']._add_to_people_queue(SET_ACTION, $set_queue);
	            }
	            if (!_.isUndefined(_set_callback)) {
	                _set_callback(response, data);
	            }
	        });
	    }
	
	    if (!_.isUndefined($set_once_queue) && _.isObject($set_once_queue) && !_.isEmptyObject($set_once_queue)) {
	        _this._mixpanel['persistence']._pop_from_people_queue(SET_ONCE_ACTION, $set_once_queue);
	        this.set_once($set_once_queue, function(response, data) {
	            // on bad response, we want to add it back to the queue
	            if (response === 0) {
	                _this._mixpanel['persistence']._add_to_people_queue(SET_ONCE_ACTION, $set_once_queue);
	            }
	            if (!_.isUndefined(_set_once_callback)) {
	                _set_once_callback(response, data);
	            }
	        });
	    }
	
	    if (!_.isUndefined($add_queue) && _.isObject($add_queue) && !_.isEmptyObject($add_queue)) {
	        _this._mixpanel['persistence']._pop_from_people_queue(ADD_ACTION, $add_queue);
	        this.increment($add_queue, function(response, data) {
	            // on bad response, we want to add it back to the queue
	            if (response === 0) {
	                _this._mixpanel['persistence']._add_to_people_queue(ADD_ACTION, $add_queue);
	            }
	            if (!_.isUndefined(_add_callback)) {
	                _add_callback(response, data);
	            }
	        });
	    }
	
	    if (!_.isUndefined($union_queue) && _.isObject($union_queue) && !_.isEmptyObject($union_queue)) {
	        _this._mixpanel['persistence']._pop_from_people_queue(UNION_ACTION, $union_queue);
	        this.union($union_queue, function(response, data) {
	            // on bad response, we want to add it back to the queue
	            if (response === 0) {
	                _this._mixpanel['persistence']._add_to_people_queue(UNION_ACTION, $union_queue);
	            }
	            if (!_.isUndefined(_union_callback)) {
	                _union_callback(response, data);
	            }
	        });
	    }
	
	    // we have to fire off each $append individually since there is
	    // no concat method server side
	    if (!_.isUndefined($append_queue) && _.isArray($append_queue) && $append_queue.length) {
	        var $append_item;
	        var callback = function(response, data) {
	            if (response === 0) {
	                _this._mixpanel['persistence']._add_to_people_queue(APPEND_ACTION, $append_item);
	            }
	            if (!_.isUndefined(_append_callback)) {
	                _append_callback(response, data);
	            }
	        };
	        for (var i = $append_queue.length - 1; i >= 0; i--) {
	            $append_item = $append_queue.pop();
	            _this.append($append_item, callback);
	        }
	        // Save the shortened append queue
	        _this._mixpanel['persistence'].save();
	    }
	};
	
	MixpanelPeople.prototype._is_reserved_property = function(prop) {
	    return prop === '$distinct_id' || prop === '$token';
	};
	
	
	// Internal class for notification display
	MixpanelLib._Notification = function(notif_data, mixpanel_instance) {
	    _.bind_instance_methods(this);
	
	    this.mixpanel    = mixpanel_instance;
	    this.persistence = this.mixpanel['persistence'];
	
	    this.campaign_id = _.escapeHTML(notif_data['id']);
	    this.message_id  = _.escapeHTML(notif_data['message_id']);
	
	    this.body            = (_.escapeHTML(notif_data['body']) || '').replace(/\n/g, '<br/>');
	    this.cta             = _.escapeHTML(notif_data['cta']) || 'Close';
	    this.dest_url        = _.escapeHTML(notif_data['cta_url']) || null;
	    this.image_url       = _.escapeHTML(notif_data['image_url']) || null;
	    this.notif_type      = _.escapeHTML(notif_data['type']) || 'takeover';
	    this.style           = _.escapeHTML(notif_data['style']) || 'light';
	    this.thumb_image_url = _.escapeHTML(notif_data['thumb_image_url']) || null;
	    this.title           = _.escapeHTML(notif_data['title']) || '';
	    this.video_url       = _.escapeHTML(notif_data['video_url']) || null;
	    this.video_width     = MPNotif.VIDEO_WIDTH;
	    this.video_height    = MPNotif.VIDEO_HEIGHT;
	
	    this.clickthrough = true;
	    if (!this.dest_url) {
	        this.dest_url = '#dismiss';
	        this.clickthrough = false;
	    }
	
	    this.mini = this.notif_type === 'mini';
	    if (!this.mini) {
	        this.notif_type = 'takeover';
	    }
	    this.notif_width = !this.mini ? MPNotif.NOTIF_WIDTH : MPNotif.NOTIF_WIDTH_MINI;
	
	    this._set_client_config();
	    this.imgs_to_preload = this._init_image_html();
	    this._init_video();
	};
	
	MPNotif = MixpanelLib._Notification;
	
	MPNotif.ANIM_TIME         = 200;
	MPNotif.MARKUP_PREFIX     = 'mixpanel-notification';
	MPNotif.BG_OPACITY        = 0.6;
	MPNotif.NOTIF_TOP         = 25;
	MPNotif.NOTIF_START_TOP   = 200;
	MPNotif.NOTIF_WIDTH       = 388;
	MPNotif.NOTIF_WIDTH_MINI  = 420;
	MPNotif.NOTIF_HEIGHT_MINI = 85;
	MPNotif.THUMB_BORDER_SIZE = 5;
	MPNotif.THUMB_IMG_SIZE    = 60;
	MPNotif.THUMB_OFFSET      = Math.round(MPNotif.THUMB_IMG_SIZE / 2);
	MPNotif.VIDEO_WIDTH       = 595;
	MPNotif.VIDEO_HEIGHT      = 334;
	
	MPNotif.prototype.show = function() {
	    var self = this;
	    this._set_client_config();
	
	    // don't display until HTML body exists
	    if (!this.body_el) {
	        setTimeout(function() { self.show(); }, 300);
	        return;
	    }
	
	    this._init_styles();
	    this._init_notification_el();
	
	    // wait for any images to load before showing notification
	    this._preload_images(this._attach_and_animate);
	};
	
	MPNotif.prototype.dismiss = _.safewrap(function() {
	    if (!this.marked_as_shown) {
	        // unexpected condition: user interacted with notif even though we didn't consider it
	        // visible (see _mark_as_shown()); send tracking signals to mark delivery
	        this._mark_delivery({'invisible': true});
	    }
	
	    var exiting_el = this.showing_video ? this._get_el('video') : this._get_notification_display_el();
	    if (this.use_transitions) {
	        this._remove_class('bg', 'visible');
	        this._add_class(exiting_el, 'exiting');
	        setTimeout(this._remove_notification_el, MPNotif.ANIM_TIME);
	    } else {
	        var notif_attr, notif_start, notif_goal;
	        if (this.mini) {
	            notif_attr  = 'right';
	            notif_start = 20;
	            notif_goal  = -100;
	        } else {
	            notif_attr  = 'top';
	            notif_start = MPNotif.NOTIF_TOP;
	            notif_goal  = MPNotif.NOTIF_START_TOP + MPNotif.NOTIF_TOP;
	        }
	        this._animate_els([
	            {
	                el:    this._get_el('bg'),
	                attr:  'opacity',
	                start: MPNotif.BG_OPACITY,
	                goal:  0.0
	            },
	            {
	                el:    exiting_el,
	                attr:  'opacity',
	                start: 1.0,
	                goal:  0.0
	            },
	            {
	                el:    exiting_el,
	                attr:  notif_attr,
	                start: notif_start,
	                goal:  notif_goal
	            }
	        ], MPNotif.ANIM_TIME, this._remove_notification_el);
	    }
	});
	
	MPNotif.prototype._add_class = _.safewrap(function(el, class_name) {
	    class_name = MPNotif.MARKUP_PREFIX + '-' + class_name;
	    if (typeof el === 'string') {
	        el = this._get_el(el);
	    }
	    if (!el.className) {
	        el.className = class_name;
	    } else if (!~(' ' + el.className + ' ').indexOf(' ' + class_name + ' ')) {
	        el.className += ' ' + class_name;
	    }
	});
	MPNotif.prototype._remove_class = _.safewrap(function(el, class_name) {
	    class_name = MPNotif.MARKUP_PREFIX + '-' + class_name;
	    if (typeof el === 'string') {
	        el = this._get_el(el);
	    }
	    if (el.className) {
	        el.className = (' ' + el.className + ' ')
	                .replace(' ' + class_name + ' ', '')
	                .replace(/^[\s\xA0]+/, '')
	                .replace(/[\s\xA0]+$/, '');
	    }
	});
	
	MPNotif.prototype._animate_els = _.safewrap(function(anims, mss, done_cb, start_time) {
	    var self = this,
	        in_progress = false,
	        ai, anim,
	        cur_time = 1 * new Date(), time_diff;
	
	    start_time = start_time || cur_time;
	    time_diff = cur_time - start_time;
	
	    for (ai = 0; ai < anims.length; ai++) {
	        anim = anims[ai];
	        if (typeof anim.val === 'undefined') {
	            anim.val = anim.start;
	        }
	        if (anim.val !== anim.goal) {
	            in_progress = true;
	            var anim_diff = anim.goal - anim.start,
	                anim_dir = anim.goal >= anim.start ? 1 : -1;
	            anim.val = anim.start + anim_diff * time_diff / mss;
	            if (anim.attr !== 'opacity') {
	                anim.val = Math.round(anim.val);
	            }
	            if ((anim_dir > 0 && anim.val >= anim.goal) || (anim_dir < 0 && anim.val <= anim.goal)) {
	                anim.val = anim.goal;
	            }
	        }
	    }
	    if (!in_progress) {
	        if (done_cb) {
	            done_cb();
	        }
	        return;
	    }
	
	    for (ai = 0; ai < anims.length; ai++) {
	        anim = anims[ai];
	        if (anim.el) {
	            var suffix = anim.attr === 'opacity' ? '' : 'px';
	            anim.el.style[anim.attr] = String(anim.val) + suffix;
	        }
	    }
	    setTimeout(function() { self._animate_els(anims, mss, done_cb, start_time); }, 10);
	});
	
	MPNotif.prototype._attach_and_animate = _.safewrap(function() {
	    var self = this;
	
	    // no possibility to double-display
	    if (this.shown || this._get_shown_campaigns()[this.campaign_id]) {
	        return;
	    }
	    this.shown = true;
	
	    this.body_el.appendChild(this.notification_el);
	    setTimeout(function() {
	        var notif_el = self._get_notification_display_el();
	        if (self.use_transitions) {
	            if (!self.mini) {
	                self._add_class('bg', 'visible');
	            }
	            self._add_class(notif_el, 'visible');
	            self._mark_as_shown();
	        } else {
	            var notif_attr, notif_start, notif_goal;
	            if (self.mini) {
	                notif_attr  = 'right';
	                notif_start = -100;
	                notif_goal  = 20;
	            } else {
	                notif_attr  = 'top';
	                notif_start = MPNotif.NOTIF_START_TOP + MPNotif.NOTIF_TOP;
	                notif_goal  = MPNotif.NOTIF_TOP;
	            }
	            self._animate_els([
	                {
	                    el:    self._get_el('bg'),
	                    attr:  'opacity',
	                    start: 0.0,
	                    goal:  MPNotif.BG_OPACITY
	                },
	                {
	                    el:    notif_el,
	                    attr:  'opacity',
	                    start: 0.0,
	                    goal:  1.0
	                },
	                {
	                    el:    notif_el,
	                    attr:  notif_attr,
	                    start: notif_start,
	                    goal:  notif_goal
	                }
	            ], MPNotif.ANIM_TIME, self._mark_as_shown);
	        }
	    }, 100);
	    _.register_event(self._get_el('cancel'), 'click', function(e) {
	        e.preventDefault();
	        self.dismiss();
	    });
	    var click_el = self._get_el('button') ||
	                       self._get_el('mini-content');
	    _.register_event(click_el, 'click', function(e) {
	        e.preventDefault();
	        if (self.show_video) {
	            self._track_event('$campaign_open', {'$resource_type': 'video'});
	            self._switch_to_video();
	        } else {
	            self.dismiss();
	            if (self.clickthrough) {
	                self._track_event('$campaign_open', {'$resource_type': 'link'}, function() {
	                    window.location.href = self.dest_url;
	                });
	            }
	        }
	    });
	});
	
	MPNotif.prototype._get_el = function(id) {
	    return document.getElementById(MPNotif.MARKUP_PREFIX + '-' + id);
	};
	
	MPNotif.prototype._get_notification_display_el = function() {
	    return this._get_el(this.notif_type);
	};
	
	MPNotif.prototype._get_shown_campaigns = function() {
	    return this.persistence['props'][CAMPAIGN_IDS_KEY] || (this.persistence['props'][CAMPAIGN_IDS_KEY] = {});
	};
	
	MPNotif.prototype._browser_lte = function(browser, version) {
	    return this.browser_versions[browser] && this.browser_versions[browser] <= version;
	};
	
	MPNotif.prototype._init_image_html = function() {
	    var imgs_to_preload = [];
	
	    if (!this.mini) {
	        if (this.image_url) {
	            imgs_to_preload.push(this.image_url);
	            this.img_html = '<img id="img" src="' + this.image_url + '"/>';
	        } else {
	            this.img_html = '';
	        }
	        if (this.thumb_image_url) {
	            imgs_to_preload.push(this.thumb_image_url);
	            this.thumb_img_html =
	                    '<div id="thumbborder-wrapper"><div id="thumbborder"></div></div>' +
	                    '<img id="thumbnail"' +
	                        ' src="' + this.thumb_image_url + '"' +
	                        ' width="' + MPNotif.THUMB_IMG_SIZE + '"' +
	                        ' height="' + MPNotif.THUMB_IMG_SIZE + '"' +
	                    '/>' +
	                    '<div id="thumbspacer"></div>';
	        } else {
	            this.thumb_img_html = '';
	        }
	    } else {
	        this.thumb_image_url = this.thumb_image_url || '//cdn.mxpnl.com/site_media/images/icons/notifications/mini-news-dark.png';
	        imgs_to_preload.push(this.thumb_image_url);
	    }
	
	    return imgs_to_preload;
	};
	
	MPNotif.prototype._init_notification_el = function() {
	    var notification_html = '';
	    var video_src         = '';
	    var video_html        = '';
	    var cancel_html       = '<div id="cancel">' +
	                                    '<div id="cancel-icon"></div>' +
	                                '</div>';
	
	    this.notification_el = document.createElement('div');
	    this.notification_el.id = MPNotif.MARKUP_PREFIX + '-wrapper';
	    if (!this.mini) {
	        // TAKEOVER notification
	        var close_html  = (this.clickthrough || this.show_video) ? '' : '<div id="button-close"></div>',
	            play_html   = this.show_video ? '<div id="button-play"></div>' : '';
	        if (this._browser_lte('ie', 7)) {
	            close_html = '';
	            play_html = '';
	        }
	        notification_html =
	                '<div id="takeover">' +
	                    this.thumb_img_html +
	                    '<div id="mainbox">' +
	                        cancel_html +
	                        '<div id="content">' +
	                            this.img_html +
	                            '<div id="title">' + this.title + '</div>' +
	                            '<div id="body">' + this.body + '</div>' +
	                            '<div id="tagline">' +
	                                '<a href="http://mixpanel.com?from=inapp" target="_blank">POWERED BY MIXPANEL</a>' +
	                            '</div>' +
	                        '</div>' +
	                        '<div id="button">' +
	                            close_html +
	                            '<a id="button-link" href="' + this.dest_url + '">' + this.cta + '</a>' +
	                            play_html +
	                        '</div>' +
	                    '</div>' +
	                '</div>';
	    } else {
	        // MINI notification
	        notification_html =
	                '<div id="mini">' +
	                    '<div id="mainbox">' +
	                        cancel_html +
	                        '<div id="mini-content">' +
	                            '<div id="mini-icon">' +
	                                '<div id="mini-icon-img"></div>' +
	                            '</div>' +
	                            '<div id="body">' +
	                                '<div id="body-text"><div>' + this.body + '</div></div>' +
	                            '</div>' +
	                        '</div>' +
	                    '</div>' +
	                    '<div id="mini-border"></div>' +
	                '</div>';
	    }
	    if (this.youtube_video) {
	        video_src = '//www.youtube.com/embed/' + this.youtube_video +
	                '?wmode=transparent&showinfo=0&modestbranding=0&rel=0&autoplay=1&loop=0&vq=hd1080';
	        if (this.yt_custom) {
	            video_src += '&enablejsapi=1&html5=1&controls=0';
	            video_html =
	                    '<div id="video-controls">' +
	                        '<div id="video-progress" class="video-progress-el">' +
	                            '<div id="video-progress-total" class="video-progress-el"></div>' +
	                            '<div id="video-elapsed" class="video-progress-el"></div>' +
	                        '</div>' +
	                        '<div id="video-time" class="video-progress-el"></div>' +
	                    '</div>';
	        }
	    } else if (this.vimeo_video) {
	        video_src = '//player.vimeo.com/video/' + this.vimeo_video + '?autoplay=1&title=0&byline=0&portrait=0';
	    }
	    if (this.show_video) {
	        this.video_iframe =
	                '<iframe id="' + MPNotif.MARKUP_PREFIX + '-video-frame" ' +
	                    'width="' + this.video_width + '" height="' + this.video_height + '" ' +
	                    ' src="' + video_src + '"' +
	                    ' frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen="1" scrolling="no"' +
	                '></iframe>';
	        video_html =
	                '<div id="video-' + (this.flip_animate ? '' : 'no') + 'flip">' +
	                    '<div id="video">' +
	                        '<div id="video-holder"></div>' +
	                        video_html +
	                    '</div>' +
	                '</div>';
	    }
	    var main_html = video_html + notification_html;
	    if (this.flip_animate) {
	        main_html =
	                (this.mini ? notification_html : '') +
	                '<div id="flipcontainer"><div id="flipper">' +
	                    (this.mini ? video_html : main_html) +
	                '</div></div>';
	    }
	
	    this.notification_el.innerHTML =
	            ('<div id="overlay" class="' + this.notif_type + '">' +
	                '<div id="campaignid-' + this.campaign_id + '">' +
	                    '<div id="bgwrapper">' +
	                        '<div id="bg"></div>' +
	                        main_html +
	                    '</div>' +
	                '</div>' +
	            '</div>')
	            .replace(/class=\"/g, 'class="' + MPNotif.MARKUP_PREFIX + '-')
	            .replace(/id=\"/g, 'id="' + MPNotif.MARKUP_PREFIX + '-');
	};
	
	MPNotif.prototype._init_styles = function() {
	    if (this.style === 'dark') {
	        this.style_vals = {
	            bg:             '#1d1f25',
	            bg_actions:     '#282b32',
	            bg_hover:       '#3a4147',
	            bg_light:       '#4a5157',
	            border_gray:    '#32353c',
	            cancel_opacity: '0.4',
	            mini_hover:     '#2a3137',
	            text_title:     '#fff',
	            text_main:      '#9498a3',
	            text_tagline:   '#464851',
	            text_hover:     '#ddd'
	        };
	    } else {
	        this.style_vals = {
	            bg:             '#fff',
	            bg_actions:     '#e7eaee',
	            bg_hover:       '#eceff3',
	            bg_light:       '#f5f5f5',
	            border_gray:    '#e4ecf2',
	            cancel_opacity: '1.0',
	            mini_hover:     '#fafafa',
	            text_title:     '#5c6578',
	            text_main:      '#8b949b',
	            text_tagline:   '#ced9e6',
	            text_hover:     '#7c8598'
	        };
	    }
	    var shadow = '0px 0px 35px 0px rgba(45, 49, 56, 0.7)',
	        video_shadow = shadow,
	        mini_shadow = shadow,
	        thumb_total_size = MPNotif.THUMB_IMG_SIZE + MPNotif.THUMB_BORDER_SIZE * 2,
	        anim_seconds = (MPNotif.ANIM_TIME / 1000) + 's';
	    if (this.mini) {
	        shadow = 'none';
	    }
	
	    // don't display on small viewports
	    var notif_media_queries = {},
	        min_width = MPNotif.NOTIF_WIDTH_MINI + 20;
	    notif_media_queries['@media only screen and (max-width: ' + (min_width - 1) + 'px)'] = {
	        '#overlay': {
	            'display': 'none'
	        }
	    };
	    var notif_styles = {
	        '.flipped': {
	            'transform': 'rotateY(180deg)'
	        },
	        '#overlay': {
	            'position': 'fixed',
	            'top': '0',
	            'left': '0',
	            'width': '100%',
	            'height': '100%',
	            'overflow': 'auto',
	            'text-align': 'center',
	            'z-index': '10000',
	            'font-family': '"Helvetica", "Arial", sans-serif',
	            '-webkit-font-smoothing': 'antialiased',
	            '-moz-osx-font-smoothing': 'grayscale'
	        },
	        '#overlay.mini': {
	            'height': '0',
	            'overflow': 'visible'
	        },
	        '#overlay a': {
	            'width': 'initial',
	            'padding': '0',
	            'text-decoration': 'none',
	            'text-transform': 'none',
	            'color': 'inherit'
	        },
	        '#bgwrapper': {
	            'position': 'relative',
	            'width': '100%',
	            'height': '100%'
	        },
	        '#bg': {
	            'position': 'fixed',
	            'top': '0',
	            'left': '0',
	            'width': '100%',
	            'height': '100%',
	            'min-width': this.doc_width * 4 + 'px',
	            'min-height': this.doc_height * 4 + 'px',
	            'background-color': 'black',
	            'opacity': '0.0',
	            '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=60)', // IE8
	            'filter': 'alpha(opacity=60)', // IE5-7
	            'transition': 'opacity ' + anim_seconds
	        },
	        '#bg.visible': {
	            'opacity': MPNotif.BG_OPACITY
	        },
	        '.mini #bg': {
	            'width': '0',
	            'height': '0',
	            'min-width': '0'
	        },
	        '#flipcontainer': {
	            'perspective': '1000px',
	            'position': 'absolute',
	            'width': '100%'
	        },
	        '#flipper': {
	            'position': 'relative',
	            'transform-style': 'preserve-3d',
	            'transition': '0.3s'
	        },
	        '#takeover': {
	            'position': 'absolute',
	            'left': '50%',
	            'width': MPNotif.NOTIF_WIDTH + 'px',
	            'margin-left': Math.round(-MPNotif.NOTIF_WIDTH / 2) + 'px',
	            'backface-visibility': 'hidden',
	            'transform': 'rotateY(0deg)',
	            'opacity': '0.0',
	            'top': MPNotif.NOTIF_START_TOP + 'px',
	            'transition': 'opacity ' + anim_seconds + ', top ' + anim_seconds
	        },
	        '#takeover.visible': {
	            'opacity': '1.0',
	            'top': MPNotif.NOTIF_TOP + 'px'
	        },
	        '#takeover.exiting': {
	            'opacity': '0.0',
	            'top': MPNotif.NOTIF_START_TOP + 'px'
	        },
	        '#thumbspacer': {
	            'height': MPNotif.THUMB_OFFSET + 'px'
	        },
	        '#thumbborder-wrapper': {
	            'position': 'absolute',
	            'top': (-MPNotif.THUMB_BORDER_SIZE) + 'px',
	            'left': (MPNotif.NOTIF_WIDTH / 2 - MPNotif.THUMB_OFFSET - MPNotif.THUMB_BORDER_SIZE) + 'px',
	            'width': thumb_total_size + 'px',
	            'height': (thumb_total_size / 2) + 'px',
	            'overflow': 'hidden'
	        },
	        '#thumbborder': {
	            'position': 'absolute',
	            'width': thumb_total_size + 'px',
	            'height': thumb_total_size + 'px',
	            'border-radius': thumb_total_size + 'px',
	            'background-color': this.style_vals.bg_actions,
	            'opacity': '0.5'
	        },
	        '#thumbnail': {
	            'position': 'absolute',
	            'top': '0px',
	            'left': (MPNotif.NOTIF_WIDTH / 2 - MPNotif.THUMB_OFFSET) + 'px',
	            'width': MPNotif.THUMB_IMG_SIZE + 'px',
	            'height': MPNotif.THUMB_IMG_SIZE + 'px',
	            'overflow': 'hidden',
	            'z-index': '100',
	            'border-radius': MPNotif.THUMB_IMG_SIZE + 'px'
	        },
	        '#mini': {
	            'position': 'absolute',
	            'right': '20px',
	            'top': MPNotif.NOTIF_TOP + 'px',
	            'width': this.notif_width + 'px',
	            'height': MPNotif.NOTIF_HEIGHT_MINI * 2 + 'px',
	            'margin-top': 20 - MPNotif.NOTIF_HEIGHT_MINI + 'px',
	            'backface-visibility': 'hidden',
	            'opacity': '0.0',
	            'transform': 'rotateX(90deg)',
	            'transition': 'opacity 0.3s, transform 0.3s, right 0.3s'
	        },
	        '#mini.visible': {
	            'opacity': '1.0',
	            'transform': 'rotateX(0deg)'
	        },
	        '#mini.exiting': {
	            'opacity': '0.0',
	            'right': '-150px'
	        },
	        '#mainbox': {
	            'border-radius': '4px',
	            'box-shadow': shadow,
	            'text-align': 'center',
	            'background-color': this.style_vals.bg,
	            'font-size': '14px',
	            'color': this.style_vals.text_main
	        },
	        '#mini #mainbox': {
	            'height': MPNotif.NOTIF_HEIGHT_MINI + 'px',
	            'margin-top': MPNotif.NOTIF_HEIGHT_MINI + 'px',
	            'border-radius': '3px',
	            'transition': 'background-color ' + anim_seconds
	        },
	        '#mini-border': {
	            'height': (MPNotif.NOTIF_HEIGHT_MINI + 6) + 'px',
	            'width': (MPNotif.NOTIF_WIDTH_MINI + 6) + 'px',
	            'position': 'absolute',
	            'top': '-3px',
	            'left': '-3px',
	            'margin-top': MPNotif.NOTIF_HEIGHT_MINI + 'px',
	            'border-radius': '6px',
	            'opacity': '0.25',
	            'background-color': '#fff',
	            'z-index': '-1',
	            'box-shadow': mini_shadow
	        },
	        '#mini-icon': {
	            'position': 'relative',
	            'display': 'inline-block',
	            'width': '75px',
	            'height': MPNotif.NOTIF_HEIGHT_MINI + 'px',
	            'border-radius': '3px 0 0 3px',
	            'background-color': this.style_vals.bg_actions,
	            'background': 'linear-gradient(135deg, ' + this.style_vals.bg_light + ' 0%, ' + this.style_vals.bg_actions + ' 100%)',
	            'transition': 'background-color ' + anim_seconds
	        },
	        '#mini:hover #mini-icon': {
	            'background-color': this.style_vals.mini_hover
	        },
	        '#mini:hover #mainbox': {
	            'background-color': this.style_vals.mini_hover
	        },
	        '#mini-icon-img': {
	            'position': 'absolute',
	            'background-image': 'url(' + this.thumb_image_url + ')',
	            'width': '48px',
	            'height': '48px',
	            'top': '20px',
	            'left': '12px'
	        },
	        '#content': {
	            'padding': '30px 20px 0px 20px'
	        },
	        '#mini-content': {
	            'text-align': 'left',
	            'height': MPNotif.NOTIF_HEIGHT_MINI + 'px',
	            'cursor': 'pointer'
	        },
	        '#img': {
	            'width': '328px',
	            'margin-top': '30px',
	            'border-radius': '5px'
	        },
	        '#title': {
	            'max-height': '600px',
	            'overflow': 'hidden',
	            'word-wrap': 'break-word',
	            'padding': '25px 0px 20px 0px',
	            'font-size': '19px',
	            'font-weight': 'bold',
	            'color': this.style_vals.text_title
	        },
	        '#body': {
	            'max-height': '600px',
	            'margin-bottom': '25px',
	            'overflow': 'hidden',
	            'word-wrap': 'break-word',
	            'line-height': '21px',
	            'font-size': '15px',
	            'font-weight': 'normal',
	            'text-align': 'left'
	        },
	        '#mini #body': {
	            'display': 'inline-block',
	            'max-width': '250px',
	            'margin': '0 0 0 30px',
	            'height': MPNotif.NOTIF_HEIGHT_MINI + 'px',
	            'font-size': '16px',
	            'letter-spacing': '0.8px',
	            'color': this.style_vals.text_title
	        },
	        '#mini #body-text': {
	            'display': 'table',
	            'height': MPNotif.NOTIF_HEIGHT_MINI + 'px'
	        },
	        '#mini #body-text div': {
	            'display': 'table-cell',
	            'vertical-align': 'middle'
	        },
	        '#tagline': {
	            'margin-bottom': '15px',
	            'font-size': '10px',
	            'font-weight': '600',
	            'letter-spacing': '0.8px',
	            'color': '#ccd7e0',
	            'text-align': 'left'
	        },
	        '#tagline a': {
	            'color': this.style_vals.text_tagline,
	            'transition': 'color ' + anim_seconds
	        },
	        '#tagline a:hover': {
	            'color': this.style_vals.text_hover
	        },
	        '#cancel': {
	            'position': 'absolute',
	            'right': '0',
	            'width': '8px',
	            'height': '8px',
	            'padding': '10px',
	            'border-radius': '20px',
	            'margin': '12px 12px 0 0',
	            'box-sizing': 'content-box',
	            'cursor': 'pointer',
	            'transition': 'background-color ' + anim_seconds
	        },
	        '#mini #cancel': {
	            'margin': '7px 7px 0 0'
	        },
	        '#cancel-icon': {
	            'width': '8px',
	            'height': '8px',
	            'overflow': 'hidden',
	            'background-image': 'url(//cdn.mxpnl.com/site_media/images/icons/notifications/cancel-x.png)',
	            'opacity': this.style_vals.cancel_opacity
	        },
	        '#cancel:hover': {
	            'background-color': this.style_vals.bg_hover
	        },
	        '#button': {
	            'display': 'block',
	            'height': '60px',
	            'line-height': '60px',
	            'text-align': 'center',
	            'background-color': this.style_vals.bg_actions,
	            'border-radius': '0 0 4px 4px',
	            'overflow': 'hidden',
	            'cursor': 'pointer',
	            'transition': 'background-color ' + anim_seconds
	        },
	        '#button-close': {
	            'display': 'inline-block',
	            'width': '9px',
	            'height': '60px',
	            'margin-right': '8px',
	            'vertical-align': 'top',
	            'background-image': 'url(//cdn.mxpnl.com/site_media/images/icons/notifications/close-x-' + this.style + '.png)',
	            'background-repeat': 'no-repeat',
	            'background-position': '0px 25px'
	        },
	        '#button-play': {
	            'display': 'inline-block',
	            'width': '30px',
	            'height': '60px',
	            'margin-left': '15px',
	            'background-image': 'url(//cdn.mxpnl.com/site_media/images/icons/notifications/play-' + this.style + '-small.png)',
	            'background-repeat': 'no-repeat',
	            'background-position': '0px 15px'
	        },
	        'a#button-link': {
	            'display': 'inline-block',
	            'vertical-align': 'top',
	            'text-align': 'center',
	            'font-size': '17px',
	            'font-weight': 'bold',
	            'overflow': 'hidden',
	            'word-wrap': 'break-word',
	            'color': this.style_vals.text_title,
	            'transition': 'color ' + anim_seconds
	        },
	        '#button:hover': {
	            'background-color': this.style_vals.bg_hover,
	            'color': this.style_vals.text_hover
	        },
	        '#button:hover a': {
	            'color': this.style_vals.text_hover
	        },
	
	        '#video-noflip': {
	            'position': 'relative',
	            'top': (-this.video_height * 2) + 'px'
	        },
	        '#video-flip': {
	            'backface-visibility': 'hidden',
	            'transform': 'rotateY(180deg)'
	        },
	        '#video': {
	            'position': 'absolute',
	            'width': (this.video_width - 1) + 'px',
	            'height': this.video_height + 'px',
	            'top': MPNotif.NOTIF_TOP + 'px',
	            'margin-top': '100px',
	            'left': '50%',
	            'margin-left': Math.round(-this.video_width / 2) + 'px',
	            'overflow': 'hidden',
	            'border-radius': '5px',
	            'box-shadow': video_shadow,
	            'transform': 'translateZ(1px)', // webkit rendering bug http://stackoverflow.com/questions/18167981/clickable-link-area-unexpectedly-smaller-after-css-transform
	            'transition': 'opacity ' + anim_seconds + ', top ' + anim_seconds
	        },
	        '#video.exiting': {
	            'opacity': '0.0',
	            'top': this.video_height + 'px'
	        },
	        '#video-holder': {
	            'position': 'absolute',
	            'width': (this.video_width - 1) + 'px',
	            'height': this.video_height + 'px',
	            'overflow': 'hidden',
	            'border-radius': '5px'
	        },
	        '#video-frame': {
	            'margin-left': '-1px',
	            'width': this.video_width + 'px'
	        },
	        '#video-controls': {
	            'opacity': '0',
	            'transition': 'opacity 0.5s'
	        },
	        '#video:hover #video-controls': {
	            'opacity': '1.0'
	        },
	        '#video .video-progress-el': {
	            'position': 'absolute',
	            'bottom': '0',
	            'height': '25px',
	            'border-radius': '0 0 0 5px'
	        },
	        '#video-progress': {
	            'width': '90%'
	        },
	        '#video-progress-total': {
	            'width': '100%',
	            'background-color': this.style_vals.bg,
	            'opacity': '0.7'
	        },
	        '#video-elapsed': {
	            'width': '0',
	            'background-color': '#6cb6f5',
	            'opacity': '0.9'
	        },
	        '#video #video-time': {
	            'width': '10%',
	            'right': '0',
	            'font-size': '11px',
	            'line-height': '25px',
	            'color': this.style_vals.text_main,
	            'background-color': '#666',
	            'border-radius': '0 0 5px 0'
	        }
	    };
	
	    // IE hacks
	    if (this._browser_lte('ie', 8)) {
	        _.extend(notif_styles, {
	            '* html #overlay': {
	                'position': 'absolute'
	            },
	            '* html #bg': {
	                'position': 'absolute'
	            },
	            'html, body': {
	                'height': '100%'
	            }
	        });
	    }
	    if (this._browser_lte('ie', 7)) {
	        _.extend(notif_styles, {
	            '#mini #body': {
	                'display': 'inline',
	                'zoom': '1',
	                'border': '1px solid ' + this.style_vals.bg_hover
	            },
	            '#mini #body-text': {
	                'padding': '20px'
	            },
	            '#mini #mini-icon': {
	                'display': 'none'
	            }
	        });
	    }
	
	    // add vendor-prefixed style rules
	    var VENDOR_STYLES   = ['backface-visibility', 'border-radius', 'box-shadow', 'opacity',
	                               'perspective', 'transform', 'transform-style', 'transition'],
	        VENDOR_PREFIXES = ['khtml', 'moz', 'ms', 'o', 'webkit'];
	    for (var selector in notif_styles) {
	        for (var si = 0; si < VENDOR_STYLES.length; si++) {
	            var prop = VENDOR_STYLES[si];
	            if (prop in notif_styles[selector]) {
	                var val = notif_styles[selector][prop];
	                for (var pi = 0; pi < VENDOR_PREFIXES.length; pi++) {
	                    notif_styles[selector]['-' + VENDOR_PREFIXES[pi] + '-' + prop] = val;
	                }
	            }
	        }
	    }
	
	    var inject_styles = function(styles, media_queries) {
	        var create_style_text = function(style_defs) {
	            var st = '';
	            for (var selector in style_defs) {
	                var mp_selector = selector
	                        .replace(/#/g, '#' + MPNotif.MARKUP_PREFIX + '-')
	                        .replace(/\./g, '.' + MPNotif.MARKUP_PREFIX + '-');
	                st += '\n' + mp_selector + ' {';
	                var props = style_defs[selector];
	                for (var k in props) {
	                    st += k + ':' + props[k] + ';';
	                }
	                st += '}';
	            }
	            return st;
	        };
	        var create_media_query_text = function(mq_defs) {
	            var mqt = '';
	            for (var mq in mq_defs) {
	                mqt += '\n' + mq + ' {' + create_style_text(mq_defs[mq]) + '\n}';
	            }
	            return mqt;
	        };
	
	        var style_text = create_style_text(styles) + create_media_query_text(media_queries),
	            head_el = document.head || document.getElementsByTagName('head')[0] || document.documentElement,
	            style_el = document.createElement('style');
	        head_el.appendChild(style_el);
	        style_el.setAttribute('type', 'text/css');
	        if (style_el.styleSheet) { // IE
	            style_el.styleSheet.cssText = style_text;
	        } else {
	            style_el.textContent = style_text;
	        }
	    };
	    inject_styles(notif_styles, notif_media_queries);
	};
	
	MPNotif.prototype._init_video = _.safewrap(function() {
	    if (!this.video_url) {
	        return;
	    }
	    var self = this;
	
	    // Youtube iframe API compatibility
	    self.yt_custom = 'postMessage' in window;
	
	    self.dest_url = self.video_url;
	    var youtube_match = self.video_url.match(
	                // http://stackoverflow.com/questions/2936467/parse-youtube-video-id-using-preg-match
	                /(?:youtube(?:-nocookie)?\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/ ]{11})/i
	            ),
	        vimeo_match = self.video_url.match(
	                /vimeo\.com\/.*?(\d+)/i
	            );
	    if (youtube_match) {
	        self.show_video = true;
	        self.youtube_video = youtube_match[1];
	
	        if (self.yt_custom) {
	            window['onYouTubeIframeAPIReady'] = function() {
	                if (self._get_el('video-frame')) {
	                    self._yt_video_ready();
	                }
	            };
	
	            // load Youtube iframe API; see https://developers.google.com/youtube/iframe_api_reference
	            var tag = document.createElement('script');
	            tag.src = '//www.youtube.com/iframe_api';
	            var firstScriptTag = document.getElementsByTagName('script')[0];
	            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
	        }
	    } else if (vimeo_match) {
	        self.show_video = true;
	        self.vimeo_video = vimeo_match[1];
	    }
	
	    // IE <= 7, FF <= 3: fall through to video link rather than embedded player
	    if (self._browser_lte('ie', 7) || self._browser_lte('firefox', 3)) {
	        self.show_video = false;
	        self.clickthrough = true;
	    }
	});
	
	MPNotif.prototype._mark_as_shown = _.safewrap(function() {
	    // click on background to dismiss
	    var self = this;
	    _.register_event(self._get_el('bg'), 'click', function() {
	        self.dismiss();
	    });
	
	    var get_style = function(el, style_name) {
	        var styles = {};
	        if (document.defaultView && document.defaultView.getComputedStyle) {
	            styles = document.defaultView.getComputedStyle(el, null); // FF3 requires both args
	        } else if (el.currentStyle) { // IE
	            styles = el.currentStyle;
	        }
	        return styles[style_name];
	    };
	
	    if (this.campaign_id) {
	        var notif_el = this._get_el('overlay');
	        if (notif_el && get_style(notif_el, 'visibility') !== 'hidden' && get_style(notif_el, 'display') !== 'none') {
	            this._mark_delivery();
	        }
	    }
	});
	
	MPNotif.prototype._mark_delivery = _.safewrap(function(extra_props) {
	    if (!this.marked_as_shown) {
	        this.marked_as_shown = true;
	
	        if (this.campaign_id) {
	            // mark notification shown (local cache)
	            this._get_shown_campaigns()[this.campaign_id] = 1 * new Date();
	            this.persistence.save();
	        }
	
	        // track delivery
	        this._track_event('$campaign_delivery', extra_props);
	
	        // mark notification shown (mixpanel property)
	        this.mixpanel['people']['append']({
	            '$campaigns': this.campaign_id,
	            '$notifications': {
	                'campaign_id': this.campaign_id,
	                'message_id':  this.message_id,
	                'type':        'web',
	                'time':        new Date()
	            }
	        });
	    }
	});
	
	MPNotif.prototype._preload_images = function(all_loaded_cb) {
	    var self = this;
	    if (this.imgs_to_preload.length === 0) {
	        all_loaded_cb();
	        return;
	    }
	
	    var preloaded_imgs = 0;
	    var img_objs = [];
	    var onload = function() {
	        preloaded_imgs++;
	        if (preloaded_imgs === self.imgs_to_preload.length && all_loaded_cb) {
	            all_loaded_cb();
	            all_loaded_cb = null;
	        }
	    };
	    for (var i = 0; i < this.imgs_to_preload.length; i++) {
	        var img = new Image();
	        img.onload = onload;
	        img.src = this.imgs_to_preload[i];
	        if (img.complete) {
	            onload();
	        }
	        img_objs.push(img);
	    }
	
	    // IE6/7 doesn't fire onload reliably
	    if (this._browser_lte('ie', 7)) {
	        setTimeout(function() {
	            var imgs_loaded = true;
	            for (i = 0; i < img_objs.length; i++) {
	                if (!img_objs[i].complete) {
	                    imgs_loaded = false;
	                }
	            }
	            if (imgs_loaded && all_loaded_cb) {
	                all_loaded_cb();
	                all_loaded_cb = null;
	            }
	        }, 500);
	    }
	};
	
	MPNotif.prototype._remove_notification_el = _.safewrap(function() {
	    window.clearInterval(this._video_progress_checker);
	    this.notification_el.style.visibility = 'hidden';
	    this.body_el.removeChild(this.notification_el);
	});
	
	MPNotif.prototype._set_client_config = function() {
	    var get_browser_version = function(browser_ex) {
	        var match = navigator.userAgent.match(browser_ex);
	        return match && match[1];
	    };
	    this.browser_versions = {};
	    this.browser_versions['chrome']  = get_browser_version(/Chrome\/(\d+)/);
	    this.browser_versions['firefox'] = get_browser_version(/Firefox\/(\d+)/);
	    this.browser_versions['ie']      = get_browser_version(/MSIE (\d+).+/);
	    if (!this.browser_versions['ie'] && !(window.ActiveXObject) && 'ActiveXObject' in window) {
	        this.browser_versions['ie'] = 11;
	    }
	
	    this.body_el = document.body || document.getElementsByTagName('body')[0];
	    if (this.body_el) {
	        this.doc_width = Math.max(
	                this.body_el.scrollWidth, document.documentElement.scrollWidth,
	                this.body_el.offsetWidth, document.documentElement.offsetWidth,
	                this.body_el.clientWidth, document.documentElement.clientWidth
	            );
	        this.doc_height = Math.max(
	                this.body_el.scrollHeight, document.documentElement.scrollHeight,
	                this.body_el.offsetHeight, document.documentElement.offsetHeight,
	                this.body_el.clientHeight, document.documentElement.clientHeight
	            );
	    }
	
	    // detect CSS compatibility
	    var ie_ver = this.browser_versions['ie'];
	    var sample_styles = document.createElement('div').style,
	        is_css_compatible = function(rule) {
	            if (rule in sample_styles) {
	                return true;
	            }
	            if (!ie_ver) {
	                rule = rule[0].toUpperCase() + rule.slice(1);
	                var props = ['O' + rule, 'Webkit' + rule, 'Moz' + rule];
	                for (var i = 0; i < props.length; i++) {
	                    if (props[i] in sample_styles) {
	                        return true;
	                    }
	                }
	            }
	            return false;
	        };
	    this.use_transitions = this.body_el &&
	        is_css_compatible('transition') &&
	        is_css_compatible('transform');
	    this.flip_animate = (this.browser_versions['chrome'] >= 33 || this.browser_versions['firefox'] >= 15) &&
	        this.body_el &&
	        is_css_compatible('backfaceVisibility') &&
	        is_css_compatible('perspective') &&
	        is_css_compatible('transform');
	};
	
	MPNotif.prototype._switch_to_video = _.safewrap(function() {
	    var self = this,
	        anims = [
	            {
	                el:    self._get_notification_display_el(),
	                attr:  'opacity',
	                start: 1.0,
	                goal:  0.0
	            },
	            {
	                el:    self._get_notification_display_el(),
	                attr:  'top',
	                start: MPNotif.NOTIF_TOP,
	                goal:  -500
	            },
	            {
	                el:    self._get_el('video-noflip'),
	                attr:  'opacity',
	                start: 0.0,
	                goal:  1.0
	            },
	            {
	                el:    self._get_el('video-noflip'),
	                attr:  'top',
	                start: -self.video_height * 2,
	                goal:  0
	            }
	        ];
	
	    if (self.mini) {
	        var bg = self._get_el('bg'),
	            overlay = self._get_el('overlay');
	        bg.style.width = '100%';
	        bg.style.height = '100%';
	        overlay.style.width = '100%';
	
	        self._add_class(self._get_notification_display_el(), 'exiting');
	        self._add_class(bg, 'visible');
	
	        anims.push({
	            el:    self._get_el('bg'),
	            attr:  'opacity',
	            start: 0.0,
	            goal:  MPNotif.BG_OPACITY
	        });
	    }
	
	    var video_el = self._get_el('video-holder');
	    video_el.innerHTML = self.video_iframe;
	
	    var video_ready = function() {
	        if (window['YT'] && window['YT']['loaded']) {
	            self._yt_video_ready();
	        }
	        self.showing_video = true;
	        self._get_notification_display_el().style.visibility = 'hidden';
	    };
	    if (self.flip_animate) {
	        self._add_class('flipper', 'flipped');
	        setTimeout(video_ready, MPNotif.ANIM_TIME);
	    } else {
	        self._animate_els(anims, MPNotif.ANIM_TIME, video_ready);
	    }
	});
	
	MPNotif.prototype._track_event = function(event_name, properties, cb) {
	    if (this.campaign_id) {
	        properties = properties || {};
	        properties = _.extend(properties, {
	            'campaign_id':     this.campaign_id,
	            'message_id':      this.message_id,
	            'message_type':    'web_inapp',
	            'message_subtype': this.notif_type
	        });
	        this.mixpanel['track'](event_name, properties, cb);
	    } else if (cb) {
	        cb.call();
	    }
	};
	
	MPNotif.prototype._yt_video_ready = _.safewrap(function() {
	    var self = this;
	    if (self.video_inited) {
	        return;
	    }
	    self.video_inited = true;
	
	    var progress_bar  = self._get_el('video-elapsed'),
	        progress_time = self._get_el('video-time'),
	        progress_el   = self._get_el('video-progress');
	
	    new window['YT']['Player'](MPNotif.MARKUP_PREFIX + '-video-frame', {
	        'events': {
	            'onReady': function(event) {
	                var ytplayer = event['target'],
	                    video_duration = ytplayer['getDuration'](),
	                    pad = function(i) {
	                        return ('00' + i).slice(-2);
	                    },
	                    update_video_time = function(current_time) {
	                        var secs = Math.round(video_duration - current_time),
	                            mins = Math.floor(secs / 60),
	                            hours = Math.floor(mins / 60);
	                        secs -= mins * 60;
	                        mins -= hours * 60;
	                        progress_time.innerHTML = '-' + (hours ? hours + ':' : '') + pad(mins) + ':' + pad(secs);
	                    };
	                update_video_time(0);
	                self._video_progress_checker = window.setInterval(function() {
	                    var current_time = ytplayer['getCurrentTime']();
	                    progress_bar.style.width = (current_time / video_duration * 100) + '%';
	                    update_video_time(current_time);
	                }, 250);
	                _.register_event(progress_el, 'click', function(e) {
	                    var clickx = Math.max(0, e.pageX - progress_el.getBoundingClientRect().left);
	                    ytplayer['seekTo'](video_duration * clickx / progress_el.clientWidth, true);
	                });
	            }
	        }
	    });
	});
	
	// EXPORTS (for closure compiler)
	
	// MixpanelLib Exports
	MixpanelLib.prototype['init']                            = MixpanelLib.prototype.init;
	MixpanelLib.prototype['reset']                           = MixpanelLib.prototype.reset;
	MixpanelLib.prototype['disable']                         = MixpanelLib.prototype.disable;
	MixpanelLib.prototype['time_event']                      = MixpanelLib.prototype.time_event;
	MixpanelLib.prototype['track']                           = MixpanelLib.prototype.track;
	MixpanelLib.prototype['track_links']                     = MixpanelLib.prototype.track_links;
	MixpanelLib.prototype['track_forms']                     = MixpanelLib.prototype.track_forms;
	MixpanelLib.prototype['track_pageview']                  = MixpanelLib.prototype.track_pageview;
	MixpanelLib.prototype['register']                        = MixpanelLib.prototype.register;
	MixpanelLib.prototype['register_once']                   = MixpanelLib.prototype.register_once;
	MixpanelLib.prototype['unregister']                      = MixpanelLib.prototype.unregister;
	MixpanelLib.prototype['identify']                        = MixpanelLib.prototype.identify;
	MixpanelLib.prototype['alias']                           = MixpanelLib.prototype.alias;
	MixpanelLib.prototype['name_tag']                        = MixpanelLib.prototype.name_tag;
	MixpanelLib.prototype['set_config']                      = MixpanelLib.prototype.set_config;
	MixpanelLib.prototype['get_config']                      = MixpanelLib.prototype.get_config;
	MixpanelLib.prototype['get_property']                    = MixpanelLib.prototype.get_property;
	MixpanelLib.prototype['get_distinct_id']                 = MixpanelLib.prototype.get_distinct_id;
	MixpanelLib.prototype['toString']                        = MixpanelLib.prototype.toString;
	MixpanelLib.prototype['_check_and_handle_notifications'] = MixpanelLib.prototype._check_and_handle_notifications;
	MixpanelLib.prototype['_show_notification']              = MixpanelLib.prototype._show_notification;
	
	// MixpanelPersistence Exports
	MixpanelPersistence.prototype['properties']            = MixpanelPersistence.prototype.properties;
	MixpanelPersistence.prototype['update_search_keyword'] = MixpanelPersistence.prototype.update_search_keyword;
	MixpanelPersistence.prototype['update_referrer_info']  = MixpanelPersistence.prototype.update_referrer_info;
	MixpanelPersistence.prototype['get_cross_subdomain']   = MixpanelPersistence.prototype.get_cross_subdomain;
	MixpanelPersistence.prototype['clear']                 = MixpanelPersistence.prototype.clear;
	
	// MixpanelPeople Exports
	MixpanelPeople.prototype['set']           = MixpanelPeople.prototype.set;
	MixpanelPeople.prototype['set_once']      = MixpanelPeople.prototype.set_once;
	MixpanelPeople.prototype['increment']     = MixpanelPeople.prototype.increment;
	MixpanelPeople.prototype['append']        = MixpanelPeople.prototype.append;
	MixpanelPeople.prototype['union']         = MixpanelPeople.prototype.union;
	MixpanelPeople.prototype['track_charge']  = MixpanelPeople.prototype.track_charge;
	MixpanelPeople.prototype['clear_charges'] = MixpanelPeople.prototype.clear_charges;
	MixpanelPeople.prototype['delete_user']   = MixpanelPeople.prototype.delete_user;
	MixpanelPeople.prototype['toString']      = MixpanelPeople.prototype.toString;
	
	_.safewrap_class(MixpanelLib, ['identify', '_check_and_handle_notifications', '_show_notification']);
	
	var instances = {};
	var extend_mp = function() {
	    // add all the sub mixpanel instances
	    _.each(instances, function(instance, name) {
	        if (name !== PRIMARY_INSTANCE_NAME) { mixpanel_master[name] = instance; }
	    });
	
	    // add private functions as _
	    mixpanel_master['_'] = _;
	};
	
	var override_mp_init_func = function() {
	    // we override the snippets init function to handle the case where a
	    // user initializes the mixpanel library after the script loads & runs
	    mixpanel_master['init'] = function(token, config, name) {
	        if (name) {
	            // initialize a sub library
	            if (!mixpanel_master[name]) {
	                mixpanel_master[name] = instances[name] = create_mplib(token, config, name);
	                mixpanel_master[name]._loaded();
	            }
	            return mixpanel_master[name];
	        } else {
	            var instance = mixpanel_master;
	
	            if (instances[PRIMARY_INSTANCE_NAME]) {
	                // main mixpanel lib already initialized
	                instance = instances[PRIMARY_INSTANCE_NAME];
	            } else if (token) {
	                // intialize the main mixpanel lib
	                instance = create_mplib(token, config, PRIMARY_INSTANCE_NAME);
	                instance._loaded();
	                instances[PRIMARY_INSTANCE_NAME] = instance;
	            }
	
	            mixpanel_master = instance;
	            if (init_type === INIT_SNIPPET) {
	                window[PRIMARY_INSTANCE_NAME] = mixpanel_master;
	            }
	            extend_mp();
	        }
	    };
	};
	
	var add_dom_loaded_handler = function() {
	    // Cross browser DOM Loaded support
	    function dom_loaded_handler() {
	        // function flag since we only want to execute this once
	        if (dom_loaded_handler.done) { return; }
	        dom_loaded_handler.done = true;
	
	        DOM_LOADED = true;
	        ENQUEUE_REQUESTS = false;
	
	        _.each(instances, function(inst) {
	            inst._dom_loaded();
	        });
	    }
	
	    function do_scroll_check() {
	        try {
	            document.documentElement.doScroll('left');
	        } catch(e) {
	            setTimeout(do_scroll_check, 1);
	            return;
	        }
	
	        dom_loaded_handler();
	    }
	
	    if (document.addEventListener) {
	        if (document.readyState === 'complete') {
	            // safari 4 can fire the DOMContentLoaded event before loading all
	            // external JS (including this file). you will see some copypasta
	            // on the internet that checks for 'complete' and 'loaded', but
	            // 'loaded' is an IE thing
	            dom_loaded_handler();
	        } else {
	            document.addEventListener('DOMContentLoaded', dom_loaded_handler, false);
	        }
	    } else if (document.attachEvent) {
	        // IE
	        document.attachEvent('onreadystatechange', dom_loaded_handler);
	
	        // check to make sure we arn't in a frame
	        var toplevel = false;
	        try {
	            toplevel = window.frameElement === null;
	        } catch(e) {
	            // noop
	        }
	
	        if (document.documentElement.doScroll && toplevel) {
	            do_scroll_check();
	        }
	    }
	
	    // fallback handler, always will work
	    _.register_event(window, 'load', dom_loaded_handler, true);
	};
	
	var add_dom_event_counting_handlers = function(instance) {
	    var name = instance.get_config('name');
	
	    instance.mp_counts = instance.mp_counts || {};
	    instance.mp_counts['$__c'] = parseInt(_.cookie.get('mp_' + name + '__c')) || 0;
	
	    var increment_count = function() {
	        instance.mp_counts['$__c'] = (instance.mp_counts['$__c'] || 0) + 1;
	        _.cookie.set('mp_' + name + '__c', instance.mp_counts['$__c'], 1, true);
	    };
	
	    var evtCallback = function() {
	        try {
	            instance.mp_counts = instance.mp_counts || {};
	            increment_count();
	        } catch (e) {
	            console$1.error(e);
	        }
	    };
	    _.register_event(document, 'submit', evtCallback);
	    _.register_event(document, 'change', evtCallback);
	    var mousedownTarget = null;
	    _.register_event(document, 'mousedown', function(e) {
	        mousedownTarget = e.target;
	    });
	    _.register_event(document, 'mouseup', function(e) {
	        if (e.target === mousedownTarget) {
	            evtCallback(e);
	        }
	    });
	};
	
	function init_as_module() {
	    init_type = INIT_MODULE;
	    mixpanel_master = new MixpanelLib();
	
	    override_mp_init_func();
	    mixpanel_master['init']();
	    add_dom_loaded_handler();
	
	    return mixpanel_master;
	}
	
	var mixpanel = init_as_module();
	
	module.exports = mixpanel;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	!function(e,r){if(true)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var t=r();for(var n in t)("object"==typeof exports?exports:e)[n]=t[n]}}(this,function(){return function(e){function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}var t={};return r.m=e,r.c=t,r.p="",r(0)}([function(e,r,t){e.exports=t(1)},function(e,r,t){"use strict";function n(){var e="undefined"==typeof JSON?{}:JSON;o.setupJSON(e)}var o=t(2),i=t(3);n();var a=window._rollbarConfig,s=a&&a.globalAlias||"Rollbar",u=window[s]&&"undefined"!=typeof window[s].shimId;!u&&a?o.wrapper.init(a):(window.Rollbar=o.wrapper,window.RollbarNotifier=i.Notifier),e.exports=o.wrapper},function(e,r,t){"use strict";function n(e,r,t){!t[4]&&window._rollbarWrappedError&&(t[4]=window._rollbarWrappedError,window._rollbarWrappedError=null),e.uncaughtError.apply(e,t),r&&r.apply(window,t)}function o(e,r){if(r.hasOwnProperty&&r.hasOwnProperty("addEventListener")){var t=r.addEventListener;r.addEventListener=function(r,n,o){t.call(this,r,e.wrap(n),o)};var n=r.removeEventListener;r.removeEventListener=function(e,r,t){n.call(this,e,r&&r._wrapped||r,t)}}}var i=t(3),a=t(8),s=i.Notifier;window._rollbarWrappedError=null;var u={};u.init=function(e,r){var t=new s(r);if(t.configure(e),e.captureUncaught){var i;r&&a.isType(r._rollbarOldOnError,"function")?i=r._rollbarOldOnError:window.onerror&&!window.onerror.belongsToShim&&(i=window.onerror),window.onerror=function(){var e=Array.prototype.slice.call(arguments,0);n(t,i,e)};var u,c,l=["EventTarget","Window","Node","ApplicationCache","AudioTrackList","ChannelMergerNode","CryptoOperation","EventSource","FileReader","HTMLUnknownElement","IDBDatabase","IDBRequest","IDBTransaction","KeyOperation","MediaController","MessagePort","ModalWindow","Notification","SVGElementInstance","Screen","TextTrack","TextTrackCue","TextTrackList","WebSocket","WebSocketWorker","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","XMLHttpRequestUpload"];for(u=0;u<l.length;++u)c=l[u],window[c]&&window[c].prototype&&o(t,window[c].prototype)}return e.captureUnhandledRejections&&(r&&a.isType(r._unhandledRejectionHandler,"function")&&window.removeEventListener("unhandledrejection",r._unhandledRejectionHandler),t._unhandledRejectionHandler=function(e){var r=e.reason,n=e.promise,o=e.detail;!r&&o&&(r=o.reason,n=o.promise),t.unhandledRejection(r,n)},window.addEventListener("unhandledrejection",t._unhandledRejectionHandler)),window.Rollbar=t,s.processPayloads(),t},e.exports={wrapper:u,setupJSON:i.setupJSON}},function(e,r,t){"use strict";function n(e){E=e,w.setupJSON(e)}function o(e,r){return function(){var t=r||this;try{return e.apply(t,arguments)}catch(n){console.error("[Rollbar]:",n)}}}function i(){h||(h=setTimeout(f,1e3))}function a(){return _}function s(e){_=_||this;var r="https://"+s.DEFAULT_ENDPOINT;this.options={enabled:!0,endpoint:r,environment:"production",scrubFields:g([],s.DEFAULT_SCRUB_FIELDS),checkIgnore:null,logLevel:s.DEFAULT_LOG_LEVEL,reportLevel:s.DEFAULT_REPORT_LEVEL,uncaughtErrorLevel:s.DEFAULT_UNCAUGHT_ERROR_LEVEL,payload:{}},this.lastError=null,this.plugins={},this.parentNotifier=e,e&&(e.hasOwnProperty("shimId")?e.notifier=this:this.configure(e.options))}function u(e){window._rollbarPayloadQueue.push(e),i()}function c(e){return o(function(){var r=this._getLogArgs(arguments);return this._log(e||r.level||this.options.logLevel||s.DEFAULT_LOG_LEVEL,r.message,r.err,r.custom,r.callback)})}function l(e,r){e||(e=r?E.stringify(r):"");var t={body:e};return r&&(t.extra=g(!0,{},r)),{message:t}}function p(e,r,t){var n=m.guessErrorClass(r.message),o=r.name||n[0],i=n[1],a={exception:{"class":o,message:i}};if(e&&(a.exception.description=e||"uncaught exception"),r.stack){var s,u,c,p,f,d,h,w;for(a.frames=[],h=0;h<r.stack.length;++h)s=r.stack[h],u={filename:s.url?v.sanitizeUrl(s.url):"(unknown)",lineno:s.line||null,method:s.func&&"?"!==s.func?s.func:"[anonymous]",colno:s.column},c=p=f=null,d=s.context?s.context.length:0,d&&(w=Math.floor(d/2),p=s.context.slice(0,w),c=s.context[w],f=s.context.slice(w)),c&&(u.code=c),(p||f)&&(u.context={},p&&p.length&&(u.context.pre=p),f&&f.length&&(u.context.post=f)),s.args&&(u.args=s.args),a.frames.push(u);return a.frames.reverse(),t&&(a.extra=g(!0,{},t)),{trace:a}}return l(o+": "+i,t)}function f(){var e;try{for(;e=window._rollbarPayloadQueue.shift();)d(e)}finally{h=void 0}}function d(e){var r=e.endpointUrl,t=e.accessToken,n=e.payload,o=e.callback||function(){},i=(new Date).getTime();i-L>=6e4&&(L=i,R=0);var a=window._globalRollbarOptions.maxItems,c=window._globalRollbarOptions.itemsPerMinute,l=function(){return!n.ignoreRateLimit&&a>=1&&T>=a},p=function(){return!n.ignoreRateLimit&&c>=1&&R>=c};return l()?void o(new Error(a+" max items reached")):p()?void o(new Error(c+" items per minute reached")):(T++,R++,l()&&_._log(_.options.uncaughtErrorLevel,"maxItems has been hit. Ignoring errors for the remainder of the current page load.",null,{maxItems:a},null,!1,!0),n.ignoreRateLimit&&delete n.ignoreRateLimit,void y.post(r,t,n,function(r,t){return r?(r instanceof b&&(e.callback=function(){},setTimeout(function(){u(e)},s.RETRY_DELAY)),o(r)):o(null,t)}))}var h,g=t(4),m=t(5),v=t(8),w=t(10),y=w.XHR,b=w.ConnectionError,E=null;s.NOTIFIER_VERSION="1.9.1",s.DEFAULT_ENDPOINT="api.rollbar.com/api/1/",s.DEFAULT_SCRUB_FIELDS=["pw","pass","passwd","password","secret","confirm_password","confirmPassword","password_confirmation","passwordConfirmation","access_token","accessToken","secret_key","secretKey","secretToken"],s.DEFAULT_LOG_LEVEL="debug",s.DEFAULT_REPORT_LEVEL="debug",s.DEFAULT_UNCAUGHT_ERROR_LEVEL="error",s.DEFAULT_ITEMS_PER_MIN=60,s.DEFAULT_MAX_ITEMS=0,s.LEVELS={debug:0,info:1,warning:2,error:3,critical:4},s.RETRY_DELAY=1e4,window._rollbarPayloadQueue=window._rollbarPayloadQueue||[],window._globalRollbarOptions={startTime:(new Date).getTime(),maxItems:s.DEFAULT_MAX_ITEMS,itemsPerMinute:s.DEFAULT_ITEMS_PER_MIN};var _,x=s.prototype;x._getLogArgs=function(e){for(var r,t,n,i,a,u,c=this.options.logLevel||s.DEFAULT_LOG_LEVEL,l=[],p=0;p<e.length;++p)u=e[p],a=v.typeName(u),"string"===a?r?l.push(u):r=u:"function"===a?i=o(u,this):"date"===a?l.push(u):"error"===a||u instanceof Error||"undefined"!=typeof DOMException&&u instanceof DOMException?t?l.push(u):t=u:"object"!==a&&"array"!==a||(n?l.push(u):n=u);return l.length&&(n=n||{},n.extraArgs=l),{level:c,message:r,err:t,custom:n,callback:i}},x._route=function(e){var r=this.options.endpoint,t=/\/$/.test(r),n=/^\//.test(e);return t&&n?e=e.substring(1):t||n||(e="/"+e),r+e},x._processShimQueue=function(e){for(var r,t,n,o,i,a,u,c={};t=e.shift();)r=t.shim,n=t.method,o=t.args,i=r.parentShim,u=c[r.shimId],u||(i?(a=c[i.shimId],u=new s(a)):u=this,c[r.shimId]=u),u[n]&&v.isType(u[n],"function")&&u[n].apply(u,o)},x._buildPayload=function(e,r,t,n,o){var i=this.options.accessToken,a=this.options.environment,u=g(!0,{},this.options.payload),c=v.uuid4();if(void 0===s.LEVELS[r])throw new Error("Invalid level");if(!t&&!n&&!o)throw new Error("No message, stack info or custom data");var l={environment:a,endpoint:this.options.endpoint,uuid:c,level:r,platform:"browser",framework:"browser-js",language:"javascript",body:this._buildBody(t,n,o),request:{url:window.location.href,query_string:window.location.search,user_ip:"$remote_ip"},client:{runtime_ms:e.getTime()-window._globalRollbarOptions.startTime,timestamp:Math.round(e.getTime()/1e3),javascript:{browser:window.navigator.userAgent,language:window.navigator.language,cookie_enabled:window.navigator.cookieEnabled,screen:{width:window.screen.width,height:window.screen.height},plugins:this._getBrowserPlugins()}},server:{},notifier:{name:"rollbar-browser-js",version:s.NOTIFIER_VERSION}};u.body&&delete u.body;var p={access_token:i,data:g(!0,l,u)};return this._scrub(p.data),p},x._buildBody=function(e,r,t){var n;return n=r?p(e,r,t):l(e,t)},x._getBrowserPlugins=function(){if(!this._browserPlugins){var e,r,t=window.navigator.plugins||[],n=t.length,o=[];for(r=0;n>r;++r)e=t[r],o.push({name:e.name,description:e.description});this._browserPlugins=o}return this._browserPlugins},x._scrub=function(e){function r(e,r,t,n,o,i){return r+v.redact(i)}function t(e){var t;if(v.isType(e,"string"))for(t=0;t<s.length;++t)e=e.replace(s[t],r);return e}function n(e,r){var t;for(t=0;t<a.length;++t)if(a[t].test(e)){r=v.redact(r);break}return r}function o(e,r){var o=n(e,r);return o===r?t(o):o}var i=this.options.scrubFields,a=this._getScrubFieldRegexs(i),s=this._getScrubQueryParamRegexs(i);return v.traverse(e,o),e},x._getScrubFieldRegexs=function(e){for(var r,t=[],n=0;n<e.length;++n)r="\\[?(%5[bB])?"+e[n]+"\\[?(%5[bB])?\\]?(%5[dD])?",t.push(new RegExp(r,"i"));return t},x._getScrubQueryParamRegexs=function(e){for(var r,t=[],n=0;n<e.length;++n)r="\\[?(%5[bB])?"+e[n]+"\\[?(%5[bB])?\\]?(%5[dD])?",t.push(new RegExp("("+r+"=)([^&\\n]+)","igm"));return t},x._urlIsWhitelisted=function(e){var r,t,n,o,i,a,s,u,c,l;try{if(r=this.options.hostWhiteList,t=e&&e.data&&e.data.body&&e.data.body.trace,!r||0===r.length)return!0;if(!t)return!0;for(s=r.length,i=t.frames.length,c=0;i>c;c++){if(n=t.frames[c],o=n.filename,!v.isType(o,"string"))return!0;for(l=0;s>l;l++)if(a=r[l],u=new RegExp(a),u.test(o))return!0}}catch(p){return this.configure({hostWhiteList:null}),console.error("[Rollbar]: Error while reading your configuration's hostWhiteList option. Removing custom hostWhiteList.",p),!0}return!1},x._messageIsIgnored=function(e){var r,t,n,o,i,a,s,u,c;try{if(i=!1,n=this.options.ignoredMessages,!n||0===n.length)return!1;if(s=e&&e.data&&e.data.body,u=s&&s.trace&&s.trace.exception&&s.trace.exception.message,c=s&&s.message&&s.message.body,r=u||c,!r)return!1;for(o=n.length,t=0;o>t&&(a=new RegExp(n[t],"gi"),!(i=a.test(r)));t++);}catch(l){this.configure({ignoredMessages:null}),console.error("[Rollbar]: Error while reading your configuration's ignoredMessages option. Removing custom ignoredMessages.")}return i},x._enqueuePayload=function(e,r,t,n){var o={callback:n,accessToken:this.options.accessToken,endpointUrl:this._route("item/"),payload:e},i=function(){if(n){var e="This item was not sent to Rollbar because it was ignored. This can happen if a custom checkIgnore() function was used or if the item's level was less than the notifier' reportLevel. See https://rollbar.com/docs/notifier/rollbar.js/configuration for more details.";n(null,{err:0,result:{id:null,uuid:null,message:e}})}};if(this._internalCheckIgnore(r,t,e))return void i();try{if(v.isType(this.options.checkIgnore,"function")&&this.options.checkIgnore(r,t,e))return void i()}catch(a){this.configure({checkIgnore:null}),console.error("[Rollbar]: Error while calling custom checkIgnore() function. Removing custom checkIgnore().",a)}if(this._urlIsWhitelisted(e)&&!this._messageIsIgnored(e)){if(this.options.verbose){if(e.data&&e.data.body&&e.data.body.trace){var s=e.data.body.trace,c=s.exception.message;console.error("[Rollbar]: ",c)}console.info("[Rollbar]: ",o)}v.isType(this.options.logFunction,"function")&&this.options.logFunction(o);try{v.isType(this.options.transform,"function")&&this.options.transform(e)}catch(a){this.configure({transform:null}),console.error("[Rollbar]: Error while calling custom transform() function. Removing custom transform().",a)}this.options.enabled&&u(o)}},x._internalCheckIgnore=function(e,r,t){var n=r[0],o=s.LEVELS[n]||0,i=s.LEVELS[this.options.reportLevel]||0;if(i>o)return!0;var a=this.options?this.options.plugins:{};if(a&&a.jquery&&a.jquery.ignoreAjaxErrors)try{return!!t.data.body.message.extra.isAjax}catch(u){return!1}return!1},x._log=function(e,r,t,n,o,i,a){var s=null;if(t)try{if(s=t._savedStackTrace?t._savedStackTrace:m.parse(t),t===this.lastError)return;this.lastError=t}catch(u){console.error("[Rollbar]: Error while parsing the error object.",u),r=t.message||t.description||r||String(t),t=null}var c=this._buildPayload(new Date,e,r,s,n);a&&(c.ignoreRateLimit=!0),this._enqueuePayload(c,!!i,[e,r,t,n],o)},x.log=c(),x.debug=c("debug"),x.info=c("info"),x.warn=c("warning"),x.warning=c("warning"),x.error=c("error"),x.critical=c("critical"),x.uncaughtError=o(function(e,r,t,n,o,i){if(i=i||null,o&&v.isType(o,"error"))return void this._log(this.options.uncaughtErrorLevel,e,o,i,null,!0);if(r&&v.isType(r,"error"))return void this._log(this.options.uncaughtErrorLevel,e,r,i,null,!0);var a={url:r||"",line:t};a.func=m.guessFunctionName(a.url,a.line),a.context=m.gatherContext(a.url,a.line);var s={mode:"onerror",message:o?String(o):e||"uncaught exception",url:document.location.href,stack:[a],useragent:navigator.userAgent},u=this._buildPayload(new Date,this.options.uncaughtErrorLevel,e,s,i);this._enqueuePayload(u,!0,[this.options.uncaughtErrorLevel,e,r,t,n,o])}),x.unhandledRejection=o(function(e,r){if(null==e)return void _._log(_.options.uncaughtErrorLevel,"unhandled rejection was null or undefined!",null,{},null,!1,!1);var t=e.message||(e?String(e):"unhandled rejection"),n=e._rollbarContext||r._rollbarContext||null;if(e&&v.isType(e,"error"))return void this._log(this.options.uncaughtErrorLevel,t,e,n,null,!0);var o={url:"",line:0};o.func=m.guessFunctionName(o.url,o.line),o.context=m.gatherContext(o.url,o.line);var i={mode:"unhandledrejection",message:t,url:document.location.href,stack:[o],useragent:navigator.userAgent},a=this._buildPayload(new Date,this.options.uncaughtErrorLevel,t,i,n);this._enqueuePayload(a,!0,[this.options.uncaughtErrorLevel,t,o.url,o.line,0,e,r])}),x.global=o(function(e){e=e||{};var r={startTime:e.startTime,maxItems:e.maxItems,itemsPerMinute:e.itemsPerMinute};g(!0,window._globalRollbarOptions,r),void 0!==e.maxItems&&(T=0),void 0!==e.itemsPerMinute&&(R=0)}),x.configure=o(function(e,r){var t=g(!0,{},e);g(!r,this.options,t),this.global(t)}),x.scope=o(function(e){var r=new s(this);return g(!0,r.options.payload,e),r}),x.wrap=function(e,r){try{var t;if(t=v.isType(r,"function")?r:function(){return r||{}},!v.isType(e,"function"))return e;if(e._isWrap)return e;if(!e._wrapped){e._wrapped=function(){try{return e.apply(this,arguments)}catch(r){throw r.stack||(r._savedStackTrace=m.parse(r)),r._rollbarContext=t()||{},r._rollbarContext._wrappedSource=e.toString(),window._rollbarWrappedError=r,r}},e._wrapped._isWrap=!0;for(var n in e)e.hasOwnProperty(n)&&(e._wrapped[n]=e[n])}return e._wrapped}catch(o){return e}},x.loadFull=function(){console.error("[Rollbar]: Unexpected Rollbar.loadFull() called on a Notifier instance")},s.processPayloads=function(e){return e?void f():void i()};var L=(new Date).getTime(),T=0,R=0;e.exports={Notifier:s,setupJSON:n,topLevelNotifier:a}},function(e,r){"use strict";var t=Object.prototype.hasOwnProperty,n=Object.prototype.toString,o=function(e){return"function"==typeof Array.isArray?Array.isArray(e):"[object Array]"===n.call(e)},i=function(e){if(!e||"[object Object]"!==n.call(e))return!1;var r=t.call(e,"constructor"),o=e.constructor&&e.constructor.prototype&&t.call(e.constructor.prototype,"isPrototypeOf");if(e.constructor&&!r&&!o)return!1;var i;for(i in e);return"undefined"==typeof i||t.call(e,i)};e.exports=function a(){var e,r,t,n,s,u,c=arguments[0],l=1,p=arguments.length,f=!1;for("boolean"==typeof c?(f=c,c=arguments[1]||{},l=2):("object"!=typeof c&&"function"!=typeof c||null==c)&&(c={});p>l;++l)if(e=arguments[l],null!=e)for(r in e)t=c[r],n=e[r],c!==n&&(f&&n&&(i(n)||(s=o(n)))?(s?(s=!1,u=t&&o(t)?t:[]):u=t&&i(t)?t:{},c[r]=a(f,u,n)):"undefined"!=typeof n&&(c[r]=n));return c}},function(e,r,t){"use strict";function n(){return l}function o(){return null}function i(e){var r={};return r._stackFrame=e,r.url=e.fileName,r.line=e.lineNumber,r.func=e.functionName,r.column=e.columnNumber,r.args=e.args,r.context=o(r.url,r.line),r}function a(e){function r(){var r=[];try{r=c.parse(e)}catch(t){r=[]}for(var n=[],o=0;o<r.length;o++)n.push(new i(r[o]));return n}return{stack:r(),message:e.message,name:e.name}}function s(e){return new a(e)}function u(e){if(!e)return["Unknown error. There was no error message to display.",""];var r=e.match(p),t="(unknown)";return r&&(t=r[r.length-1],e=e.replace((r[r.length-2]||"")+t+":",""),e=e.replace(/(^[\s]+|[\s]+$)/g,"")),[t,e]}var c=t(6),l="?",p=new RegExp("^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ");e.exports={guessFunctionName:n,guessErrorClass:u,gatherContext:o,parse:s,Stack:a,Frame:i}},function(e,r,t){var n,o,i;!function(a,s){"use strict";o=[t(7)],n=s,i="function"==typeof n?n.apply(r,o):n,!(void 0!==i&&(e.exports=i))}(this,function(e){"use strict";function r(e,r,t){if("function"==typeof Array.prototype.map)return e.map(r,t);for(var n=new Array(e.length),o=0;o<e.length;o++)n[o]=r.call(t,e[o]);return n}function t(e,r,t){if("function"==typeof Array.prototype.filter)return e.filter(r,t);for(var n=[],o=0;o<e.length;o++)r.call(t,e[o])&&n.push(e[o]);return n}var n=/(^|@)\S+\:\d+/,o=/^\s*at .*(\S+\:\d+|\(native\))/m,i=/^(eval@)?(\[native code\])?$/;return{parse:function(e){if("undefined"!=typeof e.stacktrace||"undefined"!=typeof e["opera#sourceloc"])return this.parseOpera(e);if(e.stack&&e.stack.match(o))return this.parseV8OrIE(e);if(e.stack)return this.parseFFOrSafari(e);throw new Error("Cannot parse given Error object")},extractLocation:function(e){if(-1===e.indexOf(":"))return[e];var r=e.replace(/[\(\)\s]/g,"").split(":"),t=r.pop(),n=r[r.length-1];if(!isNaN(parseFloat(n))&&isFinite(n)){var o=r.pop();return[r.join(":"),o,t]}return[r.join(":"),t,void 0]},parseV8OrIE:function(n){var i=t(n.stack.split("\n"),function(e){return!!e.match(o)},this);return r(i,function(r){r.indexOf("(eval ")>-1&&(r=r.replace(/eval code/g,"eval").replace(/(\(eval at [^\()]*)|(\)\,.*$)/g,""));var t=r.replace(/^\s+/,"").replace(/\(eval code/g,"(").split(/\s+/).slice(1),n=this.extractLocation(t.pop()),o=t.join(" ")||void 0,i="eval"===n[0]?void 0:n[0];return new e(o,void 0,i,n[1],n[2],r)},this)},parseFFOrSafari:function(n){var o=t(n.stack.split("\n"),function(e){return!e.match(i)},this);return r(o,function(r){if(r.indexOf(" > eval")>-1&&(r=r.replace(/ line (\d+)(?: > eval line \d+)* > eval\:\d+\:\d+/g,":$1")),-1===r.indexOf("@")&&-1===r.indexOf(":"))return new e(r);var t=r.split("@"),n=this.extractLocation(t.pop()),o=t.shift()||void 0;return new e(o,void 0,n[0],n[1],n[2],r)},this)},parseOpera:function(e){return!e.stacktrace||e.message.indexOf("\n")>-1&&e.message.split("\n").length>e.stacktrace.split("\n").length?this.parseOpera9(e):e.stack?this.parseOpera11(e):this.parseOpera10(e)},parseOpera9:function(r){for(var t=/Line (\d+).*script (?:in )?(\S+)/i,n=r.message.split("\n"),o=[],i=2,a=n.length;a>i;i+=2){var s=t.exec(n[i]);s&&o.push(new e(void 0,void 0,s[2],s[1],void 0,n[i]))}return o},parseOpera10:function(r){for(var t=/Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,n=r.stacktrace.split("\n"),o=[],i=0,a=n.length;a>i;i+=2){var s=t.exec(n[i]);s&&o.push(new e(s[3]||void 0,void 0,s[2],s[1],void 0,n[i]))}return o},parseOpera11:function(o){var i=t(o.stack.split("\n"),function(e){return!!e.match(n)&&!e.match(/^Error created at/)},this);return r(i,function(r){var t,n=r.split("@"),o=this.extractLocation(n.pop()),i=n.shift()||"",a=i.replace(/<anonymous function(: (\w+))?>/,"$2").replace(/\([^\)]*\)/g,"")||void 0;i.match(/\(([^\)]*)\)/)&&(t=i.replace(/^[^\(]+\(([^\)]*)\)$/,"$1"));var s=void 0===t||"[arguments not available]"===t?void 0:t.split(",");return new e(a,s,o[0],o[1],o[2],r)},this)}}})},function(e,r,t){var n,o,i;!function(t,a){"use strict";o=[],n=a,i="function"==typeof n?n.apply(r,o):n,!(void 0!==i&&(e.exports=i))}(this,function(){"use strict";function e(e){return!isNaN(parseFloat(e))&&isFinite(e)}function r(e,r,t,n,o,i){void 0!==e&&this.setFunctionName(e),void 0!==r&&this.setArgs(r),void 0!==t&&this.setFileName(t),void 0!==n&&this.setLineNumber(n),void 0!==o&&this.setColumnNumber(o),void 0!==i&&this.setSource(i)}return r.prototype={getFunctionName:function(){return this.functionName},setFunctionName:function(e){this.functionName=String(e)},getArgs:function(){return this.args},setArgs:function(e){if("[object Array]"!==Object.prototype.toString.call(e))throw new TypeError("Args must be an Array");this.args=e},getFileName:function(){return this.fileName},setFileName:function(e){this.fileName=String(e)},getLineNumber:function(){return this.lineNumber},setLineNumber:function(r){if(!e(r))throw new TypeError("Line Number must be a Number");this.lineNumber=Number(r)},getColumnNumber:function(){return this.columnNumber},setColumnNumber:function(r){if(!e(r))throw new TypeError("Column Number must be a Number");this.columnNumber=Number(r)},getSource:function(){return this.source},setSource:function(e){this.source=String(e)},toString:function(){var r=this.getFunctionName()||"{anonymous}",t="("+(this.getArgs()||[]).join(",")+")",n=this.getFileName()?"@"+this.getFileName():"",o=e(this.getLineNumber())?":"+this.getLineNumber():"",i=e(this.getColumnNumber())?":"+this.getColumnNumber():"";return r+t+n+o+i}},r})},function(e,r,t){"use strict";function n(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()}function o(e,r){return n(e)===r}function i(e){if(!o(e,"string"))throw new Error("received invalid input");for(var r=l,t=r.parser[r.strictMode?"strict":"loose"].exec(e),n={},i=14;i--;)n[r.key[i]]=t[i]||"";return n[r.q.name]={},n[r.key[12]].replace(r.q.parser,function(e,t,o){t&&(n[r.q.name][t]=o)}),n}function a(e){var r=i(e);return""===r.anchor&&(r.source=r.source.replace("#","")),e=r.source.replace("?"+r.query,"")}function s(e,r){var t,n,i,a=o(e,"object"),u=o(e,"array"),c=[];if(a)for(t in e)e.hasOwnProperty(t)&&c.push(t);else if(u)for(i=0;i<e.length;++i)c.push(i);for(i=0;i<c.length;++i)t=c[i],n=e[t],a=o(n,"object"),u=o(n,"array"),a||u?e[t]=s(n,r):e[t]=r(t,n);return e}function u(e){return e=String(e),new Array(e.length+1).join("*")}function c(){var e=(new Date).getTime(),r="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(r){var t=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"===r?t:7&t|8).toString(16)});return r}t(9);var l={strictMode:!1,key:["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],q:{name:"queryKey",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,loose:/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/}},p={isType:o,parseUri:i,parseUriOptions:l,redact:u,sanitizeUrl:a,traverse:s,typeName:n,uuid4:c};e.exports=p},function(e,r){!function(e){"use strict";e.console=e.console||{};for(var r,t,n=e.console,o={},i=function(){},a="memory".split(","),s="assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn".split(",");r=a.pop();)n[r]||(n[r]=o);for(;t=s.pop();)n[t]||(n[t]=i)}("undefined"==typeof window?this:window)},function(e,r,t){"use strict";function n(e){a=e}function o(e){this.name="Connection Error",this.message=e,this.stack=(new Error).stack}var i=t(8),a=null;o.prototype=Object.create(Error.prototype),o.prototype.constructor=o;var s={XMLHttpFactories:[function(){return new XMLHttpRequest},function(){return new ActiveXObject("Msxml2.XMLHTTP")},function(){return new ActiveXObject("Msxml3.XMLHTTP")},function(){return new ActiveXObject("Microsoft.XMLHTTP")}],createXMLHTTPObject:function(){var e,r=!1,t=s.XMLHttpFactories,n=t.length;for(e=0;n>e;e++)try{r=t[e]();break}catch(o){}return r},post:function(e,r,t,n){if(!i.isType(t,"object"))throw new Error("Expected an object to POST");t=a.stringify(t),n=n||function(){};var u=s.createXMLHTTPObject();if(u)try{try{var c=function(){try{c&&4===u.readyState&&(c=void 0,200===u.status?n(null,a.parse(u.responseText)):n(i.isType(u.status,"number")&&u.status>=400&&u.status<600?new Error(String(u.status)):new o("XHR response had no status code (likely connection failure)")))}catch(e){var r;r=e&&e.stack?e:new Error(e),n(r)}};u.open("POST",e,!0),u.setRequestHeader&&(u.setRequestHeader("Content-Type","application/json"),u.setRequestHeader("X-Rollbar-Access-Token",r)),u.onreadystatechange=c,u.send(t)}catch(l){if("undefined"!=typeof XDomainRequest){"http:"===window.location.href.substring(0,5)&&"https"===e.substring(0,5)&&(e="http"+e.substring(5));var p=function(){n(new o("Request timed out"))},f=function(){n(new Error("Error during request"))},d=function(){n(null,a.parse(u.responseText))};u=new XDomainRequest,u.onprogress=function(){},u.ontimeout=p,u.onerror=f,u.onload=d,u.open("POST",e,!0),u.send(t)}}}catch(h){n(h)}}};e.exports={XHR:s,setupJSON:n,ConnectionError:o}}])});

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.toArbSelectorPropertyToken = exports.isFilterValid = exports.filterToArbSelectorString = exports.unitForDateRange = exports.relativeToAbsoluteDate = exports.parseDate = exports.normalizeDates = exports.formatDateISO = exports.formatDateDisplay = exports.MS_BY_UNIT = exports.MS_IN_DAY = exports.MS_IN_HOUR = exports.MOMENT_TIME_FORMATTING = exports.epochToFormattedDate = exports.finishLearn = exports.transitionLearn = exports.learnClasses = exports.getLearnStep = exports.isIncompleteInterval = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); // IRB-specific utils
	
	
	var _util = __webpack_require__(9);
	
	Object.keys(_util).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _util[key];
	    }
	  });
	});
	
	var _util2 = __webpack_require__(2);
	
	Object.keys(_util2).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _util2[key];
	    }
	  });
	});
	
	var _string = __webpack_require__(11);
	
	Object.keys(_string).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _string[key];
	    }
	  });
	});
	
	var _chart = __webpack_require__(12);
	
	Object.defineProperty(exports, 'isIncompleteInterval', {
	  enumerable: true,
	  get: function get() {
	    return _chart.isIncompleteInterval;
	  }
	});
	
	var _learn = __webpack_require__(13);
	
	Object.defineProperty(exports, 'getLearnStep', {
	  enumerable: true,
	  get: function get() {
	    return _learn.getLearnStep;
	  }
	});
	Object.defineProperty(exports, 'learnClasses', {
	  enumerable: true,
	  get: function get() {
	    return _learn.learnClasses;
	  }
	});
	Object.defineProperty(exports, 'transitionLearn', {
	  enumerable: true,
	  get: function get() {
	    return _learn.transitionLearn;
	  }
	});
	Object.defineProperty(exports, 'finishLearn', {
	  enumerable: true,
	  get: function get() {
	    return _learn.finishLearn;
	  }
	});
	
	var _time = __webpack_require__(118);
	
	Object.defineProperty(exports, 'epochToFormattedDate', {
	  enumerable: true,
	  get: function get() {
	    return _time.epochToFormattedDate;
	  }
	});
	Object.defineProperty(exports, 'MOMENT_TIME_FORMATTING', {
	  enumerable: true,
	  get: function get() {
	    return _time.MOMENT_TIME_FORMATTING;
	  }
	});
	Object.defineProperty(exports, 'MS_IN_HOUR', {
	  enumerable: true,
	  get: function get() {
	    return _time.MS_IN_HOUR;
	  }
	});
	Object.defineProperty(exports, 'MS_IN_DAY', {
	  enumerable: true,
	  get: function get() {
	    return _time.MS_IN_DAY;
	  }
	});
	Object.defineProperty(exports, 'MS_BY_UNIT', {
	  enumerable: true,
	  get: function get() {
	    return _time.MS_BY_UNIT;
	  }
	});
	Object.defineProperty(exports, 'formatDateDisplay', {
	  enumerable: true,
	  get: function get() {
	    return _time.formatDateDisplay;
	  }
	});
	Object.defineProperty(exports, 'formatDateISO', {
	  enumerable: true,
	  get: function get() {
	    return _time.formatDateISO;
	  }
	});
	Object.defineProperty(exports, 'normalizeDates', {
	  enumerable: true,
	  get: function get() {
	    return _time.normalizeDates;
	  }
	});
	Object.defineProperty(exports, 'parseDate', {
	  enumerable: true,
	  get: function get() {
	    return _time.parseDate;
	  }
	});
	Object.defineProperty(exports, 'relativeToAbsoluteDate', {
	  enumerable: true,
	  get: function get() {
	    return _time.relativeToAbsoluteDate;
	  }
	});
	Object.defineProperty(exports, 'unitForDateRange', {
	  enumerable: true,
	  get: function get() {
	    return _time.unitForDateRange;
	  }
	});
	
	var _queries = __webpack_require__(119);
	
	Object.defineProperty(exports, 'filterToArbSelectorString', {
	  enumerable: true,
	  get: function get() {
	    return _queries.filterToArbSelectorString;
	  }
	});
	Object.defineProperty(exports, 'isFilterValid', {
	  enumerable: true,
	  get: function get() {
	    return _queries.isFilterValid;
	  }
	});
	Object.defineProperty(exports, 'toArbSelectorPropertyToken', {
	  enumerable: true,
	  get: function get() {
	    return _queries.toArbSelectorPropertyToken;
	  }
	});
	exports.parseURLQueryParams = parseURLQueryParams;
	exports.getTextWidth = getTextWidth;
	exports.formatResourceType = formatResourceType;
	exports.isSpecialEvent = isSpecialEvent;
	exports.getIconForEvent = getIconForEvent;
	exports.getIconForPropertyType = getIconForPropertyType;
	exports.getIconForProperty = getIconForProperty;
	exports.mapObjectKeys = mapObjectKeys;
	exports.filterObject = filterObject;
	exports.isEqual = isEqual;
	exports.combineNestedObjKeys = combineNestedObjKeys;
	exports.nestedObjectSum = nestedObjectSum;
	exports.nestedObjectCumulative = nestedObjectCumulative;
	exports.uniqueObjKeysAtDepth = uniqueObjKeysAtDepth;
	exports.formatPercent = formatPercent;
	exports.flattenNestedObjectToPath = flattenNestedObjectToPath;
	exports.reachableNodesOfKey = reachableNodesOfKey;
	
	var _cloneDeep = __webpack_require__(120);
	
	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);
	
	var _clause = __webpack_require__(14);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	// TODO move to mixpanel-common
	function parseURLQueryParams() {
	  return window.location.search.slice(1).split('&').reduce(function (params, pairStr) {
	    var _pairStr$split = pairStr.split('='),
	        _pairStr$split2 = _slicedToArray(_pairStr$split, 2),
	        k = _pairStr$split2[0],
	        v = _pairStr$split2[1];
	
	    return Object.assign(params, _defineProperty({}, k, v));
	  }, {});
	}
	
	function getTextWidth(text, font) {
	  var canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement('canvas'));
	  var context = canvas.getContext('2d');
	  context.font = font;
	  return context.measureText(text).width;
	}
	
	function formatResourceType(type) {
	  return type === 'events' ? 'event' : type;
	}
	
	function isSpecialEvent(mpEvent) {
	  return [_clause.ShowClause.TOP_EVENTS.name, _clause.ShowClause.ALL_EVENTS.name].includes(mpEvent.name);
	}
	
	function getIconForEvent(mpEvent) {
	  if (isSpecialEvent(mpEvent)) {
	    return 'star-top-events';
	  } else if (mpEvent.is_collect_everything_event) {
	    return 'autotrack';
	  } else if (mpEvent.custom) {
	    return 'custom-events';
	  } else {
	    return 'event';
	  }
	}
	
	var PROPERTY_TYPE_ICON_MAP = {
	  boolean: 'type-boolean',
	  datetime: 'type-date',
	  list: 'type-list',
	  number: 'type-number',
	  string: 'type-text'
	};
	function getIconForPropertyType(propType) {
	  return PROPERTY_TYPE_ICON_MAP[propType];
	}
	function getIconForProperty(property) {
	  if (!property) {
	    return null;
	  } else if (property.name === _clause.ShowClause.ALL_PEOPLE.name) {
	    return 'profile';
	  } else if (property.name === _clause.GroupClause.EVENT_DATE.name) {
	    return 'star-top-events';
	  } else {
	    return getIconForPropertyType(property.type);
	  }
	}
	
	// TODO(chi): move to mixpanel-common
	function mapObjectKeys(obj, callback) {
	  var newObj = {};
	
	  Object.keys(obj).forEach(function (key) {
	    newObj[key] = callback(obj[key]);
	  });
	
	  return newObj;
	}
	
	function _filterIntoObject(obj, filter) {
	  var parentKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
	
	  var depth = (0, _util2.nestedObjectDepth)(obj);
	  Object.keys(obj).forEach(function (key) {
	    if (!filter(key, depth, parentKeys)) {
	      delete obj[key];
	    }
	  });
	  Object.keys(obj).forEach(function (key) {
	    if (typeof obj[key] === 'object') {
	      _filterIntoObject(obj[key], filter, parentKeys.concat(key));
	      if (!Object.keys(obj[key]).length) {
	        delete obj[key];
	      }
	    }
	  });
	}
	
	function filterObject(obj, filter) {
	  var newObject = (0, _cloneDeep2.default)(obj);
	  _filterIntoObject(newObject, filter);
	  return newObject;
	}
	
	/**
	 * Compare data likeness of two different objects. Does not handle circular references, functions, or regex.
	 * Sourced from: http://stackoverflow.com/a/16788517
	 */
	function isEqual(x, y) {
	  if (x === null || x === undefined || y === null || y === undefined) {
	    return x === y;
	  }
	  if (x.constructor !== y.constructor) {
	    return false;
	  }
	  if (x === y || x.valueOf() === y.valueOf()) {
	    return true;
	  }
	  if (Array.isArray(x) && x.length !== y.length) {
	    return false;
	  }
	
	  // if they are dates, they must have had equal valueOf
	  if (x instanceof Date || y instanceof Date) {
	    return false;
	  }
	
	  // if they are strictly equal, they both need to be objects
	  if (!(x instanceof Object) || !(y instanceof Object)) {
	    return false;
	  }
	
	  // recursive object equality check
	  var p = Object.keys(x);
	  return Object.keys(y).every(function (idx) {
	    return p.indexOf(idx) !== -1;
	  }) && p.every(function (idx) {
	    return isEqual(x[idx], y[idx]);
	  });
	}
	
	/**
	 * Combine nested objected into one object of keys and the sum of their numeric values
	 * @example
	 * combineNestedObjKeys({
	 *   first: {foo: 1, bar:2},
	 *   second: {foo: 4, bar:1, tab: 2},
	 * });
	 * // {foo: 5, bar: 3, tab: 2}
	 */
	function combineNestedObjKeys(obj) {
	  var accum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  if (Object.values(obj).some(function (k) {
	    return typeof k === 'number';
	  })) {
	    Object.keys(obj).forEach(function (k) {
	      return accum[k] = accum[k] ? accum[k] + obj[k] : obj[k];
	    });
	  } else {
	    Object.keys(obj).map(function (key) {
	      return combineNestedObjKeys(obj[key], accum);
	    });
	  }
	  return accum;
	}
	
	/**
	 * Sum the leaf values of a nested object, but filter out those whose value is 0.
	 * constructing a new object with depth 1 less than the original
	 */
	function nestedObjectSum(obj) {
	  var sum = Object.values(obj).reduce(function (accum, val) {
	    return accum + val;
	  }, 0);
	
	  if (typeof sum === 'number') {
	    return sum;
	  } else {
	    return (0, _util2.objectFromPairs)(Object.keys(obj).map(function (key) {
	      return [key, nestedObjectSum(obj[key])];
	    }).filter(function (key) {
	      return key[1] !== 0;
	    }));
	  }
	}
	
	/**
	 * Do a rolling sum of the leaf values of a nested object, in the order of their keys (which are
	 * dates).
	 * @example
	 * nestedObjectCumulative({
	 *   US: {'2016-06-01': 2, '2016-06-02': 7, '2016-06-03': 9},
	 *   UK: {'2016-05-02': 5, '2016-05-02': 8, '2016-05-03': 6},
	 * });
	 * // {
	 * //   US: {'2016-06-01': 2, '2016-06-02': 9, '2016-06-03': 20},
	 * //   UK: {'2016-05-02': 5, '2016-05-02': 13, '2016-05-03': 19},
	 * // }
	 */
	function nestedObjectCumulative(obj) {
	  if (Object.values(obj).every(function (value) {
	    return typeof value === 'number';
	  })) {
	    return Object.keys(obj).sort().reduce(function (accum, key) {
	      var reversedKeys = Object.keys(accum).sort().reverse();
	      accum[key] = (reversedKeys.length ? accum[reversedKeys[0]] : 0) + obj[key];
	      return accum;
	    }, {});
	  } else {
	    return mapObjectKeys(obj, function (value) {
	      return nestedObjectCumulative(value);
	    });
	  }
	}
	
	function _callbackIntoObject(obj, callback) {
	  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
	      _ref$minDepth = _ref.minDepth,
	      minDepth = _ref$minDepth === undefined ? 0 : _ref$minDepth,
	      _ref$depthFirst = _ref.depthFirst,
	      depthFirst = _ref$depthFirst === undefined ? false : _ref$depthFirst;
	
	  var depth = (0, _util2.nestedObjectDepth)(obj);
	  var shouldContinue = depth >= minDepth;
	  var objKeys = Object.keys(obj);
	
	  if (!depthFirst) {
	    objKeys.forEach(function (key) {
	      return shouldContinue && callback(key, obj, depth);
	    });
	  }
	  if (shouldContinue) {
	    objKeys.forEach(function (key) {
	      if (typeof obj[key] === 'object') {
	        _callbackIntoObject(obj[key], callback, { minDepth: minDepth, depthFirst: depthFirst });
	      }
	    });
	  }
	  if (depthFirst) {
	    objKeys.forEach(function (key) {
	      return shouldContinue && callback(key, obj, depth);
	    });
	  }
	}
	
	function uniqueObjKeysAtDepth(obj, depth) {
	  var keys = new Set();
	  _callbackIntoObject(obj, function (value, parentObj, d) {
	    if (d === depth) {
	      keys.add(value);
	    }
	  });
	  return Array.from(keys);
	}
	
	function formatPercent(decimal) {
	  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
	
	  return Math.round(decimal * Math.pow(10, precision + 2)) / Math.pow(10, precision) + '%';
	}
	
	/**
	 * Flatten a nested object to show all possible paths + corresponding values of that object
	 * @param {string} obj - nested object to be flattened
	 * @returns {object} with all nested keys seperated by spaces
	 * @example
	 * flattenNestedObjectToPath({'US': {'California': 1, 'New York' : 2}});
	 * // {'US California': 1, 'US New York': 2}
	 */
	function flattenNestedObjectToPath(obj) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  var parentKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
	  var results = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
	
	  results = results || { values: {}, paths: {} };
	  Object.keys(obj).forEach(function (key) {
	    var newParentKey = parentKeys.concat(key);
	    if (typeof obj[key] === 'object') {
	      results = flattenNestedObjectToPath(obj[key], options, newParentKey, results);
	    } else {
	      var resultName = options.transformKeyName ? options.transformKeyName(newParentKey) : newParentKey.join(' ');
	      results.values[resultName] = obj[key];
	      results.paths[resultName] = newParentKey;
	      return results;
	    }
	  });
	  return results;
	}
	
	/**
	  * Find all reachable nodes in an object from a starting key at a depth
	  * @param {Object} options
	  * @param {Object} options.series - The object searched
	  * @param {Object[]} options.keysToMatch - A list of keys that are considered descendents
	  * @param {String} options.depth - The depth at which keysToMatch exists
	  * @returns {object} returns a nested object of the matching ancestors set to true inside of
	  * the depth which they were found
	  * @example
	  * reachableNodesOfKey({
	  *   series: {'US': {'California': {'San Francisco': 2}, 'New York' : {'Buffalo': 1}}},
	  *   keysToMatch: ['California'],
	  *   depth: 1,
	  * });
	  * //{1: {'San Francisco': true}, 2: {'California': true}, 3: {'US': true}}
	  */
	function reachableNodesOfKey() {
	  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref2$series = _ref2.series,
	      series = _ref2$series === undefined ? {} : _ref2$series,
	      _ref2$keysToMatch = _ref2.keysToMatch,
	      keysToMatch = _ref2$keysToMatch === undefined ? [] : _ref2$keysToMatch,
	      _ref2$depth = _ref2.depth,
	      depth = _ref2$depth === undefined ? 1 : _ref2$depth;
	
	  var REACHABLE_NODES = _defineProperty({}, depth, keysToMatch.reduce(function (obj, key) {
	    obj[key] = true;
	    return obj;
	  }, {}));
	
	  var _addToFamily = function _addToFamily(depth, key) {
	    REACHABLE_NODES[depth] = REACHABLE_NODES[depth] || {};
	    REACHABLE_NODES[depth][key] = true;
	  };
	  _callbackIntoObject(series, function (value, objectHoldingValue, depthInSeries) {
	    if (depthInSeries > depth) {
	      (function () {
	        // create ancestor list
	        var valueChilden = Object.keys(objectHoldingValue[value]);
	        var keysToMatch = Object.keys(REACHABLE_NODES[depthInSeries - 1] || {});
	        var objectHasMatch = keysToMatch.some(function (matchKey) {
	          return valueChilden.includes(matchKey);
	        });
	        if (objectHasMatch) {
	          _addToFamily(depthInSeries, value);
	        }
	      })();
	    } else if (depthInSeries === depth && keysToMatch.includes(value)) {
	      // add descendents of matching keys
	      _callbackIntoObject(objectHoldingValue[value], function (childValue, _, childDepth) {
	        _addToFamily(childDepth, childValue);
	      }, { minDepth: 2 }); // remove time series data
	    }
	  }, {
	    minDepth: depth,
	    depthFirst: true
	  });
	
	  return REACHABLE_NODES;
	}

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.debug = undefined;
	exports.downloadData = downloadData;
	exports.renameEvent = renameEvent;
	exports.renameProperty = renameProperty;
	exports.renamePropertyType = renamePropertyType;
	exports.renamePropertyValue = renamePropertyValue;
	
	var _util = __webpack_require__(2);
	
	var _constants = __webpack_require__(10);
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /* global DEBUG_LOG */
	
	// mixpanel-specific report utils
	
	/*
	 * downloadData()
	 *
	 * Initiates a direct download to the browser for any HTTP method,
	 * using a terrible hack of submitting a hidden form to a hidden
	 * iframe target.
	 *
	 */
	var downloadIdCounter = 1;
	function downloadData(endpoint, params) {
	  var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'POST';
	
	  // prepare target iframe
	  var exportFrameID = 'download-frame-' + downloadIdCounter++;
	  var exportFrame = document.createElement('iframe');
	  exportFrame.id = exportFrameID;
	  exportFrame.name = exportFrameID;
	  exportFrame.src = '';
	  exportFrame.style.display = 'none';
	  document.body.appendChild(exportFrame);
	
	  // prepare source form
	  var postForm = document.createElement('form');
	  postForm.action = endpoint;
	  postForm.method = method;
	  postForm.style.display = 'none';
	  postForm.target = exportFrameID;
	  postForm.innerHTML = Object.keys(params).map(function (p) {
	    return '<input type="hidden" name="' + p + '" value="' + (0, _util.htmlEncodeString)(params[p]) + '"/>';
	  }).join('');
	
	  // submit request
	  document.body.appendChild(postForm);
	  postForm.submit();
	}
	
	// TODO epurcer - replace this with a more general-purpose tool like https://www.npmjs.com/package/debug
	function getLogger(level) {
	  if (false) {
	    /* eslint-disable no-console */
	    return function () {
	      var _console;
	
	      (_console = console)[level].apply(_console, arguments);
	    };
	    /* eslint-enable no-console */
	  } else {
	    return function () {};
	  }
	}
	var debug = exports.debug = ['log', 'info', 'warn', 'error', 'critical'].reduce(function (ret, level) {
	  return (0, _util.extend)(ret, _defineProperty({}, level, getLogger(level)));
	}, {});
	
	function renameEvent(event) {
	  if (_constants.EVENTS.hasOwnProperty(event)) {
	    return _constants.EVENTS[event];
	  }
	
	  return event;
	}
	
	function renameProperty(property) {
	  var remappedProperty = _constants.PROPERTIES[property];
	  if (remappedProperty) {
	    return remappedProperty;
	  }
	
	  // default conversion for all properties starting with '$'
	  if (property && property.length > 1 && property[0] === '$') {
	    return property.slice(1).split('_').map(_util.capitalize).join(' ');
	  }
	
	  return property;
	}
	
	function renamePropertyType(type) {
	  return {
	    number: 'Integer',
	    datetime: 'Date',
	    boolean: 'True/False'
	  }[type] || (0, _util.capitalize)(type);
	}
	
	function renamePropertyValue(value) {
	  var country = _constants.COUNTRIES[String(value).toUpperCase()];
	  if (country) {
	    return country;
	  }
	  return value;
	}

/***/ },
/* 10 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var COUNTRIES = exports.COUNTRIES = {
	  AD: "Andorra",
	  AE: "United Arab Emirates",
	  AF: "Afghanistan",
	  AG: "Antigua and Barbuda",
	  AI: "Anguilla",
	  AL: "Albania",
	  AM: "Armenia",
	  AO: "Angola",
	  AQ: "Antarctica",
	  AR: "Argentina",
	  AS: "American Samoa",
	  AT: "Austria",
	  AU: "Australia",
	  AW: "Aruba",
	  AX: "\xC5land Islands",
	  AZ: "Azerbaijan",
	  BA: "Bosnia and Herzegovina",
	  BB: "Barbados",
	  BD: "Bangladesh",
	  BE: "Belgium",
	  BF: "Burkina Faso",
	  BG: "Bulgaria",
	  BH: "Bahrain",
	  BI: "Burundi",
	  BJ: "Benin",
	  BL: "Saint Barth\xE9lemy",
	  BM: "Bermuda",
	  BN: "Brunei Darussalam",
	  BO: "Bolivia, Plurinational State of",
	  BQ: "Bonaire, Sint Eustatius and Saba",
	  BR: "Brazil",
	  BS: "Bahamas",
	  BT: "Bhutan",
	  BV: "Bouvet Island",
	  BW: "Botswana",
	  BY: "Belarus",
	  BZ: "Belize",
	  CA: "Canada",
	  CC: "Cocos (Keeling) Islands",
	  CD: "Congo, the Democratic Republic of the",
	  CF: "Central African Republic",
	  CG: "Congo",
	  CH: "Switzerland",
	  CI: "C\xF4te d'Ivoire",
	  CK: "Cook Islands",
	  CL: "Chile",
	  CM: "Cameroon",
	  CN: "China",
	  CO: "Colombia",
	  CR: "Costa Rica",
	  CU: "Cuba",
	  CV: "Cape Verde",
	  CW: "Cura\xE7ao",
	  CX: "Christmas Island",
	  CY: "Cyprus",
	  CZ: "Czech Republic",
	  DE: "Germany",
	  DJ: "Djibouti",
	  DK: "Denmark",
	  DM: "Dominica",
	  DO: "Dominican Republic",
	  DZ: "Algeria",
	  EC: "Ecuador",
	  EE: "Estonia",
	  EG: "Egypt",
	  EH: "Western Sahara",
	  ER: "Eritrea",
	  ES: "Spain",
	  ET: "Ethiopia",
	  FI: "Finland",
	  FJ: "Fiji",
	  FK: "Falkland Islands (Malvinas)",
	  FM: "Micronesia, Federated States of",
	  FO: "Faroe Islands",
	  FR: "France",
	  GA: "Gabon",
	  GB: "United Kingdom",
	  GD: "Grenada",
	  GE: "Georgia",
	  GF: "French Guiana",
	  GG: "Guernsey",
	  GH: "Ghana",
	  GI: "Gibraltar",
	  GL: "Greenland",
	  GM: "Gambia",
	  GN: "Guinea",
	  GP: "Guadeloupe",
	  GQ: "Equatorial Guinea",
	  GR: "Greece",
	  GS: "South Georgia and the South Sandwich Islands",
	  GT: "Guatemala",
	  GU: "Guam",
	  GW: "Guinea-Bissau",
	  GY: "Guyana",
	  HK: "Hong Kong",
	  HM: "Heard Island and McDonald Islands",
	  HN: "Honduras",
	  HR: "Croatia",
	  HT: "Haiti",
	  HU: "Hungary",
	  ID: "Indonesia",
	  IE: "Ireland",
	  IL: "Israel",
	  IM: "Isle of Man",
	  IN: "India",
	  IO: "British Indian Ocean Territory",
	  IQ: "Iraq",
	  IR: "Iran, Islamic Republic of",
	  IS: "Iceland",
	  IT: "Italy",
	  JE: "Jersey",
	  JM: "Jamaica",
	  JO: "Jordan",
	  JP: "Japan",
	  KE: "Kenya",
	  KG: "Kyrgyzstan",
	  KH: "Cambodia",
	  KI: "Kiribati",
	  KM: "Comoros",
	  KN: "Saint Kitts and Nevis",
	  KP: "Korea, Democratic People's Republic of",
	  KR: "Korea, Republic of",
	  KW: "Kuwait",
	  KY: "Cayman Islands",
	  KZ: "Kazakhstan",
	  LA: "Lao People's Democratic Republic",
	  LB: "Lebanon",
	  LC: "Saint Lucia",
	  LI: "Liechtenstein",
	  LK: "Sri Lanka",
	  LR: "Liberia",
	  LS: "Lesotho",
	  LT: "Lithuania",
	  LU: "Luxembourg",
	  LV: "Latvia",
	  LY: "Libya",
	  MA: "Morocco",
	  MC: "Monaco",
	  MD: "Moldova, Republic of",
	  ME: "Montenegro",
	  MF: "Saint Martin (French part)",
	  MG: "Madagascar",
	  MH: "Marshall Islands",
	  MK: "Macedonia, the Former Yugoslav Republic of",
	  ML: "Mali",
	  MM: "Myanmar",
	  MN: "Mongolia",
	  MO: "Macao",
	  MP: "Northern Mariana Islands",
	  MQ: "Martinique",
	  MR: "Mauritania",
	  MS: "Montserrat",
	  MT: "Malta",
	  MU: "Mauritius",
	  MV: "Maldives",
	  MW: "Malawi",
	  MX: "Mexico",
	  MY: "Malaysia",
	  MZ: "Mozambique",
	  NA: "Namibia",
	  NC: "New Caledonia",
	  NE: "Niger",
	  NF: "Norfolk Island",
	  NG: "Nigeria",
	  NI: "Nicaragua",
	  NL: "Netherlands",
	  NO: "Norway",
	  NP: "Nepal",
	  NR: "Nauru",
	  NU: "Niue",
	  NZ: "New Zealand",
	  OM: "Oman",
	  PA: "Panama",
	  PE: "Peru",
	  PF: "French Polynesia",
	  PG: "Papua New Guinea",
	  PH: "Philippines",
	  PK: "Pakistan",
	  PL: "Poland",
	  PM: "Saint Pierre and Miquelon",
	  PN: "Pitcairn",
	  PR: "Puerto Rico",
	  PS: "Palestine, State of",
	  PT: "Portugal",
	  PW: "Palau",
	  PY: "Paraguay",
	  QA: "Qatar",
	  RE: "R\xE9union",
	  RO: "Romania",
	  RS: "Serbia",
	  RU: "Russian Federation",
	  RW: "Rwanda",
	  SA: "Saudi Arabia",
	  SB: "Solomon Islands",
	  SC: "Seychelles",
	  SD: "Sudan",
	  SE: "Sweden",
	  SG: "Singapore",
	  SH: "Saint Helena, Ascension and Tristan da Cunha",
	  SI: "Slovenia",
	  SJ: "Svalbard and Jan Mayen",
	  SK: "Slovakia",
	  SL: "Sierra Leone",
	  SM: "San Marino",
	  SN: "Senegal",
	  SO: "Somalia",
	  SR: "Suriname",
	  SS: "South Sudan",
	  ST: "Sao Tome and Principe",
	  SV: "El Salvador",
	  SX: "Sint Maarten (Dutch part)",
	  SY: "Syrian Arab Republic",
	  SZ: "Swaziland",
	  TC: "Turks and Caicos Islands",
	  TD: "Chad",
	  TF: "French Southern Territories",
	  TG: "Togo",
	  TH: "Thailand",
	  TJ: "Tajikistan",
	  TK: "Tokelau",
	  TL: "Timor-Leste",
	  TM: "Turkmenistan",
	  TN: "Tunisia",
	  TO: "Tonga",
	  TR: "Turkey",
	  TT: "Trinidad and Tobago",
	  TV: "Tuvalu",
	  TW: "Taiwan, Province of China",
	  TZ: "Tanzania, United Republic of",
	  UA: "Ukraine",
	  UG: "Uganda",
	  UM: "United States Minor Outlying Islands",
	  US: "United States",
	  UY: "Uruguay",
	  UZ: "Uzbekistan",
	  VA: "Holy See (Vatican City State)",
	  VC: "Saint Vincent and the Grenadines",
	  VE: "Venezuela, Bolivarian Republic of",
	  VG: "Virgin Islands, British",
	  VI: "Virgin Islands, U.S.",
	  VN: "Viet Nam",
	  VU: "Vanuatu",
	  WF: "Wallis and Futuna",
	  WS: "Samoa",
	  YE: "Yemen",
	  YT: "Mayotte",
	  ZA: "South Africa",
	  ZM: "Zambia",
	  ZW: "Zimbabwe"
	};
	
	/* eslint-disable camelcase */
	var EVENTS = exports.EVENTS = {
	  $all_events: "All Events",
	  $campaign_delivery: "Notification Sent",
	  $campaign_open: "Notification Opened",
	  $campaign_bounced: "Notification Bounced",
	  $campaign_marked_spam: "Notification Marked Spam",
	  $experiment_started: "Experiment Started",
	  $show_survey: "Show Survey",
	  $top_events: "Your Top Events",
	  $signup: "Signup"
	};
	/* eslint-enable camelcase */
	
	/* eslint-disable camelcase */
	var PROPERTIES = exports.PROPERTIES = {
	  $answer_count: "Answer Count",
	  $app_build_number: "$app_build_number",
	  $app_release: "App Release",
	  $app_version: "App Version",
	  $app_version_string: "$app_version_string",
	  $bluetooth_enabled: "Bluetooth Enabled",
	  $bluetooth_version: "Bluetooth Version",
	  $brand: "Brand",
	  $browser: "Browser",
	  $browser_version: "Browser Version",
	  $carrier: "Carrier",
	  $city: "City",
	  $current_url: "Current URL",
	  $experiments: "Experiments",
	  $device: "Device",
	  $duration: "Duration",
	  $from_binding: "From Binding",
	  $google_play_services: "Google Play Services",
	  $has_nfc: "Has NFC",
	  $has_telephone: "Has Telephone",
	  $import: "Import",
	  $initial_referrer: "Initial Referrer",
	  $initial_referring_domain: "Initial Referring Domain",
	  $ios_ifa: "iOS IFA",
	  $lib_version: "Library Version",
	  $manufacturer: "Manufacturer",
	  $model: "Model",
	  $os: "Operating System",
	  $os_version: "OS Version",
	  $radio: "Radio",
	  $referrer: "Referrer",
	  $referring_domain: "Referring Domain",
	  $region: "Region",
	  $screen_dpi: "Screen DPI",
	  $screen_height: "Screen Height",
	  $screen_width: "Screen Width",
	  $search_engine: "Search Engine",
	  $survey_shown: "Survey Shown",
	  $watch_model: "Watch Model",
	  $wifi: "Wifi",
	  campaign_id: "Campaign",
	  collection_id: "Collection ID",
	  message_id: "Message ID",
	  message_subtype: "Message Subtype",
	  message_type: "Message Type",
	  mp_country_code: "Country",
	  mp_device_model: "Device Model",
	  mp_keyword: "Search Keyword",
	  mp_lib: "Mixpanel Library",
	  survey_id: "Survey ID",
	  utm_campaign: "UTM Campaign",
	  utm_content: "UTM Content",
	  utm_medium: "UTM Medium",
	  utm_source: "UTM Source",
	  utm_term: "UTM Term",
	
	  // the following are no longer used but
	  // should be included for historical reasons
	  mp_browser: "Browser",
	  mp_page: "Page View",
	  mp_platform: "Platform",
	  mp_referrer: "Referrer"
	};
	/* eslint-enable camelcase */

/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.stringFilterMatches = stringFilterMatches;
	exports.toSentenceCase = toSentenceCase;
	/**
	 * Split a string into match and non-match substrings based on finding
	 * all whitespace-separated terms in a given filter string (for UI search
	 * bars).
	 * @param {string} str - string to search
	 * @param {string} filterStr - string with filter/search terms
	 * @returns {Array} list of alternating matching and non-matching substrings
	 * in order of the original string; even = match, odd = no match
	 * @example
	 * stringFilterMatches('my example string', 'ex my');
	 * // ['my', ' ', 'ex', 'ample string']
	 */
	function stringFilterMatches(str, filterStr) {
	  // ensure there's a non-empty filter
	  filterStr = filterStr && filterStr.trim();
	  if (!filterStr) {
	    return ["", str];
	  }
	
	  // prepare string and filter for search conditions
	  var matchStr = str.toLowerCase();
	  var searchTerms = filterStr.toLowerCase().split(" ").filter(Boolean);
	
	  // find all matching positions
	  var matchPositions = Array(str.length).fill(false);
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;
	
	  try {
	    for (var _iterator = searchTerms[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var term = _step.value;
	
	      var matchIdx = matchStr.indexOf(term);
	      if (matchIdx === -1) {
	        return null; // short-circuit stop for non-match
	      }
	      for (var mi = matchIdx; mi < matchIdx + term.length; mi++) {
	        matchPositions[mi] = true;
	      }
	    }
	
	    // merge into match and non-match strings
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }
	
	  var matches = [];
	  var i = 0;
	  while (i < matchPositions.length) {
	    var _matchStr = "";
	    var nonMatchStr = "";
	
	    while (i < matchPositions.length && matchPositions[i]) {
	      _matchStr += str[i++];
	    }
	    while (i < matchPositions.length && !matchPositions[i]) {
	      nonMatchStr += str[i++];
	    }
	
	    matches.push(_matchStr);
	    matches.push(nonMatchStr);
	  }
	
	  return matches;
	}
	
	function toSentenceCase(string) {
	  var str = (string || "").toString();
	  return str.charAt(0).toUpperCase() + str.substr(1).toLowerCase();
	}

/***/ },
/* 12 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isIncompleteInterval = isIncompleteInterval;
	// From media/js/charts/chart.js.
	
	// TODO
	// Note that this just mirrors the existing segmentation logic, which both
	// requires a customized version of Highcharts and fails to account for
	// incomplete data in the past (e.g., 2016-12-01 through 2017-01-01 with
	// monthly time unit will show data for only one day of January but a solid
	// line).
	
	// For future reference, IMO the right way to handle this is for
	// isIncomplete to take a "to" date and a unit, and determine whether that
	// "to" date is at the end of a unit boundary.
	
	// For avoiding a customized Highcharts, we could remove the last data
	// point from an incomplete segment, and create a new segment with just the
	// last two data points, linked to the prior segment and with different
	// styling. This works right now in line chart, but fails in stacked line
	// (though of course it seems to work in stacked line in the latest
	// Highcharts).
	
	/**
	  * isIncompleteInterval -- Returns true if the last time-period has not been completed 
	  *
	  * @param {Hash} series A single series, in highcharts format
	  * @param {Hash} an options hash.
	  *      * (required) 'unit' interval in milliseconds
	  *        OR A string describing the interval ('hour', 'day', 'week', 'month')
	  *      * (required) 'utcOffset' timezone offset in minutes
	  *        OR A string describing the interval ('hour', 'day', 'week', 'month')
	  *      * "adjust_for_local_time" This adjusts the estimation for local time.
	  * @return {Boolean} true/false
	  */
	function isIncompleteInterval(data, options) {
	  options = options || {};
	  var unit = options.unit;
	  if (data && data.length > 0 && unit !== undefined) {
	    var timeInterval;
	    var lastPoint = data[data.length - 1];
	    var lastDate = Array.isArray(lastPoint) ? lastPoint[0] : lastPoint.x;
	    var date = new Date();
	    var currentDate = date.getTime();
	    var timezoneOffset = options.utcOffset;
	    if (options.adjust_for_local_time) {
	      // many dates passed in are in the local time of the browser.
	      timezoneOffset += date.getTimezoneOffset();
	    }
	    currentDate = currentDate + 60000 * timezoneOffset;
	
	    var currentInterval = currentDate - lastDate;
	
	    if (Number.isInteger(unit)) {
	      timeInterval = unit;
	    } else {
	      var hour = 60 * 60 * 1000; // milliseconds in an hour
	
	      switch (unit.toLowerCase()) {
	        case "hour":
	          timeInterval = hour;
	          break;
	        case "day":
	          timeInterval = 24 * hour;
	          break;
	        case "week":
	          timeInterval = 7 * 24 * hour;
	          break;
	        case "month":
	          date = new Date(currentDate); // change date to account for offset
	          var start = new Date(date.getYear(), date.getMonth());
	          var end = new Date(date.getYear(), date.getMonth() + 1);
	          timeInterval = end.getTime() - start.getTime();
	          break;
	        case "quarter":
	          var now = new Date(currentDate);
	          var last = new Date(lastDate);
	          var nowMonths = now.getUTCFullYear() * 12 + now.getUTCMonth();
	          var lastMonths = last.getUTCFullYear() * 12 + last.getUTCMonth();
	          return nowMonths - lastMonths < 3;
	        default:
	          console.error("Unknown interval: \"" + timeInterval + "\"");
	          return false;
	      }
	    }
	
	    return currentInterval < timeInterval;
	  } else {
	    return false;
	  }
	}

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getLearnStep = getLearnStep;
	exports.learnClasses = learnClasses;
	exports.transitionLearn = transitionLearn;
	exports.finishLearn = finishLearn;
	
	var _clause = __webpack_require__(14);
	
	var _ = __webpack_require__(8);
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function getShowClauseEvents(report) {
	  return report.sections[_clause.ShowClause.TYPE].clauses.map(function (clause) {
	    return clause.value.name;
	  }).filter(function (mpEvent) {
	    return mpEvent !== _clause.ShowClause.ALL_EVENTS.name && mpEvent !== _clause.ShowClause.TOP_EVENTS.name;
	  });
	}
	
	function getGroupClauseProperties(report) {
	  return report.sections[_clause.GroupClause.TYPE].clauses.map(function (clause) {
	    return clause.value.name;
	  });
	}
	
	var steps = [{
	  name: 'introduction',
	  condition: function condition() {
	    return true;
	  }
	}, {
	  name: 'choose-event',
	  cls: 'irb-learn-choose-event',
	  condition: function condition(index) {
	    return index === 1;
	  },
	  transitionOutMs: 0,
	  transitionInMs: 1200
	}, {
	  name: 'compare-event',
	  cls: 'irb-learn-compare-event',
	  condition: function condition(index, report) {
	    return getShowClauseEvents(report).length === 1;
	  },
	  transitionOutMs: 1200,
	  transitionInMs: 1200
	}, {
	  name: 'group-by',
	  cls: 'irb-learn-group-by',
	  condition: function condition(index, report) {
	    return getShowClauseEvents(report).length === 2;
	  },
	  transitionInMs: 1200
	}, {
	  name: 'manipulate-data',
	  cls: 'irb-learn-manipulate-data',
	  condition: function condition(index, report) {
	    return getGroupClauseProperties(report).length === 1;
	  },
	  transitionOutMs: 1200,
	  transitionInMs: 1200
	}, {
	  name: 'conclusion',
	  condition: function condition(index, report) {
	    return report.displayOptions.chartType !== 'bar' || report.displayOptions.plotStyle !== 'standard' || report.displayOptions.value !== 'absolute' || report.displayOptions.analysis !== 'linear';
	  },
	  transitionOutMs: 2000
	}];
	
	function getLearnStep(report, index) {
	  index = steps.length - 1 - [].concat(steps).reverse().findIndex(function (step) {
	    return step.condition(index, report);
	  });
	  return (0, _.extend)(steps[index], { index: index });
	}
	
	function learnClasses() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$disabled = _ref.disabled,
	      disabled = _ref$disabled === undefined ? false : _ref$disabled,
	      _ref$disabledSteps = _ref.disabledSteps,
	      disabledSteps = _ref$disabledSteps === undefined ? [] : _ref$disabledSteps,
	      _ref$disabledExceptCh = _ref.disabledExceptChildren,
	      disabledExceptChildren = _ref$disabledExceptCh === undefined ? [] : _ref$disabledExceptCh,
	      _ref$tooltipContainer = _ref.tooltipContainer,
	      tooltipContainer = _ref$tooltipContainer === undefined ? false : _ref$tooltipContainer,
	      _ref$transitioning = _ref.transitioning,
	      transitioning = _ref$transitioning === undefined ? false : _ref$transitioning,
	      _ref$reminding = _ref.reminding,
	      reminding = _ref$reminding === undefined ? false : _ref$reminding,
	      _ref$emphasize = _ref.emphasize,
	      emphasize = _ref$emphasize === undefined ? false : _ref$emphasize;
	
	  var childClasses = disabledExceptChildren.map(function (child) {
	    return {
	      first: '-except-first-child',
	      last: '-except-last-child'
	    }[child] || '';
	  });
	
	  var classes = [];
	
	  if (disabledSteps.length) {
	    classes = disabledSteps.map(function (step, i) {
	      var childClass = childClasses[i] || '';
	      return 'irb-learn-' + step + '-disabled' + childClass;
	    });
	  } else if (childClasses.length) {
	    classes = childClasses.map(function (cls) {
	      return 'irb-learn-disabled' + cls;
	    });
	  } else if (disabled) {
	    classes = ['irb-learn-disabled'];
	  }
	
	  if (tooltipContainer) {
	    classes.push('irb-learn-tooltip-container');
	  }
	
	  if (transitioning) {
	    classes.push('irb-learn-transitioning');
	  }
	
	  if (reminding) {
	    classes.push('irb-learn-reminding');
	  }
	
	  if (emphasize) {
	    classes.push('irb-learn-emphasize');
	  }
	
	  return Object.assign.apply(Object, _toConsumableArray(classes.map(function (cls) {
	    return _defineProperty({}, cls, true);
	  })));
	}
	
	var LEARN_REMINDER_INTERVAL_MS = 5000;
	var remindStartInterval = null;
	var remindEndInterval = null;
	
	function transitionLearn(report, index) {
	  var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
	      _ref3$start = _ref3.start,
	      start = _ref3$start === undefined ? function () {} : _ref3$start,
	      _ref3$middle = _ref3.middle,
	      middle = _ref3$middle === undefined ? function () {} : _ref3$middle,
	      _ref3$end = _ref3.end,
	      end = _ref3$end === undefined ? function () {} : _ref3$end,
	      _ref3$startReminder = _ref3.startReminder,
	      startReminder = _ref3$startReminder === undefined ? function () {} : _ref3$startReminder,
	      _ref3$endReminder = _ref3.endReminder,
	      endReminder = _ref3$endReminder === undefined ? function () {} : _ref3$endReminder;
	
	  var step = getLearnStep(report, index);
	  var outMs = step.transitionOutMs || 0;
	  var inMs = step.transitionInMs || 0;
	
	  setTimeout(start, 0);
	  setTimeout(middle, outMs);
	  setTimeout(end, outMs + inMs);
	
	  clearInterval(remindStartInterval);
	  clearInterval(remindEndInterval);
	
	  remindStartInterval = setInterval(startReminder, LEARN_REMINDER_INTERVAL_MS);
	  setTimeout(function () {
	    remindEndInterval = setInterval(endReminder, LEARN_REMINDER_INTERVAL_MS);
	  }, LEARN_REMINDER_INTERVAL_MS / 2);
	}
	
	function finishLearn() {
	  clearInterval(remindStartInterval);
	  clearInterval(remindEndInterval);
	}

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.FilterClause = exports.TimeClause = exports.GroupClause = exports.PROPERTY_TYPES = exports.ShowClause = exports.EventsPropertiesClause = exports.Clause = undefined;
	
	var _RANGE_TO_VALUE_AND_U;
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _moment = __webpack_require__(15);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _util = __webpack_require__(2);
	
	var _util2 = __webpack_require__(9);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var TYPE_FORMAT_NAME = {
	  'show': 'Compare',
	  'group': 'Group by',
	  'filter': 'Filter',
	  'time': 'Time'
	};
	
	var TIME_UNITS = {
	  HOUR: 'hour',
	  DAY: 'day',
	  WEEK: 'week',
	  MONTH: 'month',
	  QUARTER: 'quarter',
	  YEAR: 'year'
	};
	
	var TIME_UNIT_LIST = [TIME_UNITS.HOUR, TIME_UNITS.DAY, TIME_UNITS.WEEK, TIME_UNITS.MONTH, TIME_UNITS.QUARTER, TIME_UNITS.YEAR];
	
	var Clause = exports.Clause = function () {
	  function Clause() {
	    _classCallCheck(this, Clause);
	  }
	
	  _createClass(Clause, [{
	    key: 'extend',
	    value: function extend(attrs) {
	      return this.validate(Clause.create(this.TYPE, (0, _util.extend)(this.attrs, attrs)));
	    }
	  }, {
	    key: 'formattedType',
	    value: function formattedType() {
	      return TYPE_FORMAT_NAME[this.TYPE];
	    }
	  }, {
	    key: 'serialize',
	    value: function serialize() {
	      return this.attrs;
	    }
	  }, {
	    key: 'toUrlData',
	    value: function toUrlData() {
	      return this.attrs;
	    }
	  }, {
	    key: 'validate',
	    value: function validate(newClause) {
	      var valid = newClause.valid;
	
	      if (!valid) {
	        _util2.debug.warn(this.TYPE + ' clause invalid:', newClause);
	      }
	
	      return newClause;
	    }
	  }, {
	    key: 'attrs',
	    get: function get() {
	      return {};
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      return true;
	    }
	  }], [{
	    key: 'create',
	    value: function create(sectionType, attrs) {
	      switch (sectionType) {
	        case 'show':
	          return new ShowClause(attrs);
	        case 'group':
	          return new GroupClause(attrs);
	        case 'filter':
	          return new FilterClause(attrs);
	        case 'time':
	          return new TimeClause(attrs);
	      }
	    }
	  }]);
	
	  return Clause;
	}();
	
	Clause.RESOURCE_TYPE_ALL = Clause.prototype.RESOURCE_TYPES = 'all';
	Clause.RESOURCE_TYPE_EVENTS = Clause.prototype.RESOURCE_TYPES = 'events';
	Clause.RESOURCE_TYPE_PEOPLE = Clause.prototype.RESOURCE_TYPES = 'people';
	Clause.RESOURCE_TYPES = Clause.prototype.RESOURCE_TYPES = [Clause.RESOURCE_TYPE_ALL, Clause.RESOURCE_TYPE_EVENTS, Clause.RESOURCE_TYPE_PEOPLE];
	
	var EventsPropertiesClause = exports.EventsPropertiesClause = function (_Clause) {
	  _inherits(EventsPropertiesClause, _Clause);
	
	  function EventsPropertiesClause() {
	    var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, EventsPropertiesClause);
	
	    var _this = _possibleConstructorReturn(this, (EventsPropertiesClause.__proto__ || Object.getPrototypeOf(EventsPropertiesClause)).apply(this, arguments));
	
	    _this.value = attrs.value || null;
	    _this.resourceType = attrs.resourceType || Clause.RESOURCE_TYPES[0];
	    _this.search = attrs.search || '';
	    return _this;
	  }
	
	  _createClass(EventsPropertiesClause, [{
	    key: 'toUrlData',
	    value: function toUrlData() {
	      return (0, _util.pick)(this.attrs, ['value', 'resourceType']);
	    }
	  }, {
	    key: 'attrs',
	    get: function get() {
	      var value = this.value,
	          resourceType = this.resourceType,
	          search = this.search;
	
	      return (0, _util.extend)(_get(EventsPropertiesClause.prototype.__proto__ || Object.getPrototypeOf(EventsPropertiesClause.prototype), 'attrs', this), { value: value, resourceType: resourceType, search: search });
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      return _get(EventsPropertiesClause.prototype.__proto__ || Object.getPrototypeOf(EventsPropertiesClause.prototype), 'valid', this) && !!this.value && this.RESOURCE_TYPES.indexOf(this.resourceType) !== -1 && typeof this.search === 'string';
	    }
	  }]);
	
	  return EventsPropertiesClause;
	}(Clause);
	
	var ShowClause = exports.ShowClause = function (_EventsPropertiesClau) {
	  _inherits(ShowClause, _EventsPropertiesClau);
	
	  function ShowClause() {
	    var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, ShowClause);
	
	    var _this2 = _possibleConstructorReturn(this, (ShowClause.__proto__ || Object.getPrototypeOf(ShowClause)).apply(this, arguments));
	
	    _this2.math = attrs.math || 'total';
	    _this2.property = attrs.property || null;
	    _this2.value = _this2.value || null;
	    return _this2;
	  }
	
	  _createClass(ShowClause, [{
	    key: 'toUrlData',
	    value: function toUrlData() {
	      var conditionalAttrs = { math: this.math };
	      var valueWhitelist = ['name', 'resourceType'];
	      if (this.value && this.value.custom) {
	        valueWhitelist.push('custom');
	      }
	      conditionalAttrs['value'] = (0, _util.pick)(this.value || {}, valueWhitelist);
	      if (this.property) {
	        conditionalAttrs['property'] = this.property;
	      }
	
	      return (0, _util.extend)(_get(ShowClause.prototype.__proto__ || Object.getPrototypeOf(ShowClause.prototype), 'toUrlData', this).call(this), conditionalAttrs);
	    }
	  }, {
	    key: 'attrs',
	    get: function get() {
	      var math = this.math,
	          property = this.property;
	
	      return (0, _util.extend)(_get(ShowClause.prototype.__proto__ || Object.getPrototypeOf(ShowClause.prototype), 'attrs', this), { math: math, property: property });
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      return _get(ShowClause.prototype.__proto__ || Object.getPrototypeOf(ShowClause.prototype), 'valid', this) && this.MATH_TYPES.indexOf(this.math) !== -1;
	    }
	  }]);
	
	  return ShowClause;
	}(EventsPropertiesClause);
	
	ShowClause.TYPE = ShowClause.prototype.TYPE = 'show';
	ShowClause.TOP_EVENTS = ShowClause.prototype.TOP_EVENTS = {
	  name: '$top_events',
	  custom: false,
	  resourceType: 'events'
	};
	ShowClause.ALL_EVENTS = ShowClause.prototype.ALL_EVENTS = {
	  name: '$all_events',
	  custom: false,
	  resourceType: 'events'
	};
	ShowClause.ALL_PEOPLE = ShowClause.prototype.ALL_PEOPLE = {
	  name: '$all_people',
	  resourceType: 'people'
	};
	ShowClause.MATH_TYPE_TOTAL = ShowClause.prototype.MATH_TYPE_TOTAL = 'total';
	ShowClause.MATH_TYPE_UNIQUE = ShowClause.prototype.MATH_TYPE_UNIQUE = 'unique';
	ShowClause.MATH_TYPE_AVERAGE = ShowClause.prototype.MATH_TYPE_AVERAGE = 'average';
	ShowClause.MATH_TYPE_MEDIAN = ShowClause.prototype.MATH_TYPE_MEDIAN = 'median';
	ShowClause.MATH_TYPE_MIN = ShowClause.prototype.MATH_TYPE_MIN = 'min';
	ShowClause.MATH_TYPE_MAX = ShowClause.prototype.MATH_TYPE_MAX = 'max';
	ShowClause.MATH_TYPES = ShowClause.prototype.MATH_TYPES = [ShowClause.MATH_TYPE_TOTAL, ShowClause.MATH_TYPE_UNIQUE, ShowClause.MATH_TYPE_AVERAGE, ShowClause.MATH_TYPE_MEDIAN, ShowClause.MATH_TYPE_MIN, ShowClause.MATH_TYPE_MAX];
	
	var PROPERTY_TYPES = exports.PROPERTY_TYPES = ['string', 'number', 'datetime', 'boolean', 'list'];
	
	var GroupClause = exports.GroupClause = function (_EventsPropertiesClau2) {
	  _inherits(GroupClause, _EventsPropertiesClau2);
	
	  function GroupClause() {
	    var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, GroupClause);
	
	    var _this3 = _possibleConstructorReturn(this, (GroupClause.__proto__ || Object.getPrototypeOf(GroupClause)).apply(this, arguments));
	
	    _this3.filterType = attrs.filterType || GroupClause.FILTER_TYPES[0];
	    _this3.propertyType = attrs.propertyType || null;
	    _this3.typeCast = attrs.typeCast || null;
	    _this3.unit = attrs.unit || null;
	    _this3.editing = attrs.editing || null;
	    if (_this3.isDatetimeProperty && !_this3.editing && !_this3.unit) {
	      _this3.unit = TIME_UNITS.DAY;
	    }
	    return _this3;
	  }
	
	  _createClass(GroupClause, [{
	    key: 'toUrlData',
	    value: function toUrlData() {
	      var conditionalAttrs = { propertyType: this.propertyType };
	      if (this.isDatetimeProperty) {
	        conditionalAttrs.unit = this.unit || TIME_UNITS.DAY;
	      }
	      if (this.typeCast) {
	        conditionalAttrs.typeCast = this.typeCast;
	      }
	      return (0, _util.extend)(_get(GroupClause.prototype.__proto__ || Object.getPrototypeOf(GroupClause.prototype), 'toUrlData', this).call(this), conditionalAttrs);
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      var validIfDatetime = this.isDatetimeProperty ? TIME_UNIT_LIST.includes(this.unit) : true;
	      return _get(GroupClause.prototype.__proto__ || Object.getPrototypeOf(GroupClause.prototype), 'valid', this) && this.FILTER_TYPES.indexOf(this.filterType) !== -1 && this.PROPERTY_TYPES.includes(this.propertyType) && validIfDatetime;
	    }
	  }, {
	    key: 'attrs',
	    get: function get() {
	      return (0, _util.extend)(_get(GroupClause.prototype.__proto__ || Object.getPrototypeOf(GroupClause.prototype), 'attrs', this), {
	        filterType: this.filterType,
	        propertyType: this.propertyType,
	        typeCast: this.typeCast,
	        unit: this.unit
	      });
	    }
	  }, {
	    key: 'isDatetimeProperty',
	    get: function get() {
	      var realType = this.typeCast || this.propertyType;
	      return realType === 'datetime';
	    }
	  }]);
	
	  return GroupClause;
	}(EventsPropertiesClause);
	
	GroupClause.TYPE = GroupClause.prototype.TYPE = 'group';
	GroupClause.FILTER_TYPES = GroupClause.prototype.FILTER_TYPES = PROPERTY_TYPES;
	GroupClause.PROPERTY_TYPES = GroupClause.prototype.PROPERTY_TYPES = PROPERTY_TYPES;
	GroupClause.PROPERTY_TYPECASTS = GroupClause.prototype.PROPERTY_TYPECASTS = ['string', 'number', 'boolean'];
	GroupClause.EVENT_DATE = GroupClause.prototype.EVENT_DATE = {
	  name: '$date',
	  type: 'datetime',
	  resourceType: 'events'
	};
	
	// Time constants
	var RANGES = {
	  HOURS: 'Last 96 hours',
	  MONTH: 'Last 30 days',
	  WEEKS: 'Last 24 weeks',
	  QUARTER: 'Last 4 quarters',
	  YEAR: 'Last 12 months',
	  CUSTOM: 'Choose a date range...'
	};
	var RANGE_LIST = [RANGES.HOURS, RANGES.MONTH, RANGES.WEEKS, RANGES.QUARTER, RANGES.YEAR, RANGES.CUSTOM];
	var RANGE_TO_VALUE_AND_UNIT = (_RANGE_TO_VALUE_AND_U = {}, _defineProperty(_RANGE_TO_VALUE_AND_U, RANGES.HOURS, { value: 96, unit: TIME_UNITS.HOUR }), _defineProperty(_RANGE_TO_VALUE_AND_U, RANGES.MONTH, { value: 30, unit: TIME_UNITS.DAY }), _defineProperty(_RANGE_TO_VALUE_AND_U, RANGES.WEEKS, { value: 24, unit: TIME_UNITS.WEEK }), _defineProperty(_RANGE_TO_VALUE_AND_U, RANGES.QUARTER, { value: 4, unit: TIME_UNITS.QUARTER }), _defineProperty(_RANGE_TO_VALUE_AND_U, RANGES.YEAR, { value: 12, unit: TIME_UNITS.MONTH }), _RANGE_TO_VALUE_AND_U);
	var UNIT_AND_VALUE_TO_RANGE = {
	  hour: {
	    96: RANGES.HOURS
	  },
	  day: {
	    30: RANGES.MONTH
	  },
	  week: {
	    24: RANGES.WEEKS
	  },
	  quarter: {
	    4: RANGES.QUARTER
	  },
	  month: {
	    12: RANGES.YEAR
	  }
	};
	
	var TimeClause = exports.TimeClause = function (_Clause2) {
	  _inherits(TimeClause, _Clause2);
	
	  function TimeClause() {
	    var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, TimeClause);
	
	    var _this4 = _possibleConstructorReturn(this, (TimeClause.__proto__ || Object.getPrototypeOf(TimeClause)).apply(this, arguments));
	
	    if (attrs.range) {
	      var _TimeClause$rangeToUn = TimeClause.rangeToUnitValue(attrs.range),
	          unit = _TimeClause$rangeToUn.unit,
	          value = _TimeClause$rangeToUn.value;
	
	      _this4.unit = unit;
	      _this4.value = value;
	    } else {
	      _this4.unit = attrs.unit;
	      _this4.value = attrs.value;
	    }
	    return _this4;
	  }
	
	  _createClass(TimeClause, [{
	    key: 'attrs',
	    get: function get() {
	      var unit = this.unit,
	          value = this.value;
	
	      return { unit: unit, value: value };
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      /* conditions:
	       * - unit must be one of TimeClause.TIME_UNIT_LIST
	       * - value must exist
	       * - value must be either a single entry OR an array of entries
	       * - entries in value must be numbers OR Dates
	       * - numbers in value must be greater than 0
	       * - Dates in value must occur before now
	       */
	      return this.TIME_UNIT_LIST.indexOf(this.unit) !== -1 && this.value && (typeof this.value === 'number' && this.value > 0 || this.value instanceof Date && this.value < new Date() || Array.isArray(this.value) && this.value.length === 2 && (typeof this.value[0] === 'string' && _moment2.default.utc(this.value[0]).isBefore(_moment2.default.utc()) && typeof this.value[1] === 'string' && _moment2.default.utc(this.value[1]).isBefore(_moment2.default.utc()) || typeof this.value[0] === 'number' && this.value[0] > 0 && typeof this.value[1] === 'number' && this.value[1] > 0 || this.value instanceof Date && this.value < new Date() && this.value instanceof Date && this.value < new Date()));
	    }
	  }, {
	    key: 'range',
	    get: function get() {
	      return TimeClause.unitValueToRange(this.unit, this.value);
	    }
	  }], [{
	    key: 'rangeToUnitValue',
	    value: function rangeToUnitValue(range) {
	      return RANGE_TO_VALUE_AND_UNIT[range] || {};
	    }
	  }, {
	    key: 'unitValueToRange',
	    value: function unitValueToRange(unit, value) {
	      var unitVals = UNIT_AND_VALUE_TO_RANGE[unit];
	      return unitVals && unitVals[value] || null;
	    }
	  }]);
	
	  return TimeClause;
	}(Clause);
	
	TimeClause.TYPE = TimeClause.prototype.TYPE = 'time';
	TimeClause.RANGES = TimeClause.prototype.RANGES = RANGES;
	TimeClause.RANGE_LIST = TimeClause.prototype.RANGE_LIST = RANGE_LIST;
	TimeClause.TIME_UNITS = TimeClause.prototype.TIME_UNITS = TIME_UNITS;
	TimeClause.TIME_UNIT_LIST = TimeClause.prototype.TIME_UNIT_LIST = TIME_UNIT_LIST;
	TimeClause.RANGE_TO_VALUE_AND_UNIT = TimeClause.prototype.RANGE_TO_VALUE_AND_UNIT = RANGE_TO_VALUE_AND_UNIT;
	TimeClause.UNIT_AND_VALUE_TO_RANGE = TimeClause.prototype.UNIT_AND_VALUE_TO_RANGE = UNIT_AND_VALUE_TO_RANGE;
	
	var FilterClause = exports.FilterClause = function (_EventsPropertiesClau3) {
	  _inherits(FilterClause, _EventsPropertiesClau3);
	
	  function FilterClause() {
	    var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, FilterClause);
	
	    var _this5 = _possibleConstructorReturn(this, (FilterClause.__proto__ || Object.getPrototypeOf(FilterClause)).apply(this, arguments));
	
	    _this5.filterType = attrs.filterType || FilterClause.FILTER_TYPES[0];
	    _this5.filterValue = attrs.filterValue === 0 || attrs.filterValue ? attrs.filterValue : null;
	    _this5.filterSearch = attrs.filterSearch || null;
	    _this5.filterDateUnit = attrs.filterDateUnit || TimeClause.TIME_UNIT_LIST[0];
	
	    var filterOperators = FilterClause.FILTER_OPERATORS[_this5.filterType];
	    _this5.filterOperator = filterOperators.includes(attrs.filterOperator) ? attrs.filterOperator : filterOperators[0];
	
	    _this5.editing = attrs.editing || null;
	    return _this5;
	  }
	
	  _createClass(FilterClause, [{
	    key: 'toUrlData',
	    value: function toUrlData() {
	      var filterAttrs = (0, _util.pick)(this.attrs, ['filterType', 'filterOperator', 'filterValue', 'filterDateUnit']);
	      return (0, _util.extend)(_get(FilterClause.prototype.__proto__ || Object.getPrototypeOf(FilterClause.prototype), 'toUrlData', this).call(this), filterAttrs);
	    }
	  }, {
	    key: 'attrs',
	    get: function get() {
	      var filterType = this.filterType,
	          filterOperator = this.filterOperator,
	          filterValue = this.filterValue,
	          filterSearch = this.filterSearch,
	          filterDateUnit = this.filterDateUnit,
	          editing = this.editing;
	
	
	      return (0, _util.extend)(_get(FilterClause.prototype.__proto__ || Object.getPrototypeOf(FilterClause.prototype), 'attrs', this), {
	        filterType: filterType,
	        filterOperator: filterOperator,
	        filterValue: filterValue,
	        filterSearch: filterSearch,
	        filterDateUnit: filterDateUnit,
	        editing: editing
	      });
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      var isDatetime = this.filterType === 'datetime';
	      var isFilterTypeValid = this.FILTER_TYPES.includes(this.filterType);
	      var isFilterOperatorValid = this.FILTER_OPERATORS[this.filterType].includes(this.filterOperator);
	      var isFilterOperatorTimeRange = isDatetime && TimeClause.RANGE_LIST.includes(this.filterOperator);
	
	      return _get(FilterClause.prototype.__proto__ || Object.getPrototypeOf(FilterClause.prototype), 'valid', this) && isFilterTypeValid && (isFilterOperatorValid || isFilterOperatorTimeRange);
	    }
	  }, {
	    key: 'filterOperatorIsSetOrNotSet',
	    get: function get() {
	      return this.filterOperator === 'is set' || this.filterOperator === 'is not set';
	    }
	  }, {
	    key: 'isEditingFilterOperator',
	    get: function get() {
	      return this.editing === 'filterOperator';
	    }
	  }, {
	    key: 'isEditingFilterDateUnit',
	    get: function get() {
	      return this.editing === 'filterDateUnit';
	    }
	  }]);
	
	  return FilterClause;
	}(EventsPropertiesClause);
	
	FilterClause.TYPE = FilterClause.prototype.TYPE = 'filter';
	FilterClause.FILTER_OPERATORS = FilterClause.prototype.FILTER_OPERATORS = {
	  string: ['contains', 'does not contain', 'equals', 'does not equal', 'is set', 'is not set'],
	  number: ['is between', 'is greater than', 'is less than', 'is equal to'],
	  datetime: ['was on', 'was between', 'was less than', 'was more than', 'was before', 'was after', 'was in the'],
	  boolean: ['is true', 'is false'],
	  list: ['contains', 'does not contain']
	};
	FilterClause.FILTER_TYPES = FilterClause.prototype.FILTER_TYPES = PROPERTY_TYPES;

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
	//! version : 2.13.0
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com
	
	;(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    global.moment = factory()
	}(this, function () { 'use strict';
	
	    var hookCallback;
	
	    function utils_hooks__hooks () {
	        return hookCallback.apply(null, arguments);
	    }
	
	    // This is done to register the method called with moment()
	    // without creating circular dependencies.
	    function setHookCallback (callback) {
	        hookCallback = callback;
	    }
	
	    function isArray(input) {
	        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
	    }
	
	    function isDate(input) {
	        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
	    }
	
	    function map(arr, fn) {
	        var res = [], i;
	        for (i = 0; i < arr.length; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }
	
	    function hasOwnProp(a, b) {
	        return Object.prototype.hasOwnProperty.call(a, b);
	    }
	
	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }
	
	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }
	
	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }
	
	        return a;
	    }
	
	    function create_utc__createUTC (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, true).utc();
	    }
	
	    function defaultParsingFlags() {
	        // We need to deep clone this object.
	        return {
	            empty           : false,
	            unusedTokens    : [],
	            unusedInput     : [],
	            overflow        : -2,
	            charsLeftOver   : 0,
	            nullInput       : false,
	            invalidMonth    : null,
	            invalidFormat   : false,
	            userInvalidated : false,
	            iso             : false,
	            parsedDateParts : [],
	            meridiem        : null
	        };
	    }
	
	    function getParsingFlags(m) {
	        if (m._pf == null) {
	            m._pf = defaultParsingFlags();
	        }
	        return m._pf;
	    }
	
	    var some;
	    if (Array.prototype.some) {
	        some = Array.prototype.some;
	    } else {
	        some = function (fun) {
	            var t = Object(this);
	            var len = t.length >>> 0;
	
	            for (var i = 0; i < len; i++) {
	                if (i in t && fun.call(this, t[i], i, t)) {
	                    return true;
	                }
	            }
	
	            return false;
	        };
	    }
	
	    function valid__isValid(m) {
	        if (m._isValid == null) {
	            var flags = getParsingFlags(m);
	            var parsedParts = some.call(flags.parsedDateParts, function (i) {
	                return i != null;
	            });
	            m._isValid = !isNaN(m._d.getTime()) &&
	                flags.overflow < 0 &&
	                !flags.empty &&
	                !flags.invalidMonth &&
	                !flags.invalidWeekday &&
	                !flags.nullInput &&
	                !flags.invalidFormat &&
	                !flags.userInvalidated &&
	                (!flags.meridiem || (flags.meridiem && parsedParts));
	
	            if (m._strict) {
	                m._isValid = m._isValid &&
	                    flags.charsLeftOver === 0 &&
	                    flags.unusedTokens.length === 0 &&
	                    flags.bigHour === undefined;
	            }
	        }
	        return m._isValid;
	    }
	
	    function valid__createInvalid (flags) {
	        var m = create_utc__createUTC(NaN);
	        if (flags != null) {
	            extend(getParsingFlags(m), flags);
	        }
	        else {
	            getParsingFlags(m).userInvalidated = true;
	        }
	
	        return m;
	    }
	
	    function isUndefined(input) {
	        return input === void 0;
	    }
	
	    // Plugins that add properties should also add the key here (null value),
	    // so we can properly clone ourselves.
	    var momentProperties = utils_hooks__hooks.momentProperties = [];
	
	    function copyConfig(to, from) {
	        var i, prop, val;
	
	        if (!isUndefined(from._isAMomentObject)) {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (!isUndefined(from._i)) {
	            to._i = from._i;
	        }
	        if (!isUndefined(from._f)) {
	            to._f = from._f;
	        }
	        if (!isUndefined(from._l)) {
	            to._l = from._l;
	        }
	        if (!isUndefined(from._strict)) {
	            to._strict = from._strict;
	        }
	        if (!isUndefined(from._tzm)) {
	            to._tzm = from._tzm;
	        }
	        if (!isUndefined(from._isUTC)) {
	            to._isUTC = from._isUTC;
	        }
	        if (!isUndefined(from._offset)) {
	            to._offset = from._offset;
	        }
	        if (!isUndefined(from._pf)) {
	            to._pf = getParsingFlags(from);
	        }
	        if (!isUndefined(from._locale)) {
	            to._locale = from._locale;
	        }
	
	        if (momentProperties.length > 0) {
	            for (i in momentProperties) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (!isUndefined(val)) {
	                    to[prop] = val;
	                }
	            }
	        }
	
	        return to;
	    }
	
	    var updateInProgress = false;
	
	    // Moment prototype object
	    function Moment(config) {
	        copyConfig(this, config);
	        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            utils_hooks__hooks.updateOffset(this);
	            updateInProgress = false;
	        }
	    }
	
	    function isMoment (obj) {
	        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
	    }
	
	    function absFloor (number) {
	        if (number < 0) {
	            return Math.ceil(number);
	        } else {
	            return Math.floor(number);
	        }
	    }
	
	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;
	
	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            value = absFloor(coercedNumber);
	        }
	
	        return value;
	    }
	
	    // compare two arrays, return the number of differences
	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if ((dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }
	
	    function warn(msg) {
	        if (utils_hooks__hooks.suppressDeprecationWarnings === false &&
	                (typeof console !==  'undefined') && console.warn) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }
	
	    function deprecate(msg, fn) {
	        var firstTime = true;
	
	        return extend(function () {
	            if (utils_hooks__hooks.deprecationHandler != null) {
	                utils_hooks__hooks.deprecationHandler(null, msg);
	            }
	            if (firstTime) {
	                warn(msg + '\nArguments: ' + Array.prototype.slice.call(arguments).join(', ') + '\n' + (new Error()).stack);
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }
	
	    var deprecations = {};
	
	    function deprecateSimple(name, msg) {
	        if (utils_hooks__hooks.deprecationHandler != null) {
	            utils_hooks__hooks.deprecationHandler(name, msg);
	        }
	        if (!deprecations[name]) {
	            warn(msg);
	            deprecations[name] = true;
	        }
	    }
	
	    utils_hooks__hooks.suppressDeprecationWarnings = false;
	    utils_hooks__hooks.deprecationHandler = null;
	
	    function isFunction(input) {
	        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	    }
	
	    function isObject(input) {
	        return Object.prototype.toString.call(input) === '[object Object]';
	    }
	
	    function locale_set__set (config) {
	        var prop, i;
	        for (i in config) {
	            prop = config[i];
	            if (isFunction(prop)) {
	                this[i] = prop;
	            } else {
	                this['_' + i] = prop;
	            }
	        }
	        this._config = config;
	        // Lenient ordinal parsing accepts just a number in addition to
	        // number + (possibly) stuff coming from _ordinalParseLenient.
	        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
	    }
	
	    function mergeConfigs(parentConfig, childConfig) {
	        var res = extend({}, parentConfig), prop;
	        for (prop in childConfig) {
	            if (hasOwnProp(childConfig, prop)) {
	                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
	                    res[prop] = {};
	                    extend(res[prop], parentConfig[prop]);
	                    extend(res[prop], childConfig[prop]);
	                } else if (childConfig[prop] != null) {
	                    res[prop] = childConfig[prop];
	                } else {
	                    delete res[prop];
	                }
	            }
	        }
	        return res;
	    }
	
	    function Locale(config) {
	        if (config != null) {
	            this.set(config);
	        }
	    }
	
	    var keys;
	
	    if (Object.keys) {
	        keys = Object.keys;
	    } else {
	        keys = function (obj) {
	            var i, res = [];
	            for (i in obj) {
	                if (hasOwnProp(obj, i)) {
	                    res.push(i);
	                }
	            }
	            return res;
	        };
	    }
	
	    // internal storage for locale config files
	    var locales = {};
	    var globalLocale;
	
	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }
	
	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0, j, next, locale, split;
	
	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return null;
	    }
	
	    function loadLocale(name) {
	        var oldLocale = null;
	        // TODO: Find a better way to register and load all the locales in Node
	        if (!locales[name] && (typeof module !== 'undefined') &&
	                module && module.exports) {
	            try {
	                oldLocale = globalLocale._abbr;
	                __webpack_require__(17)("./" + name);
	                // because defineLocale currently also sets the global locale, we
	                // want to undo that for lazy loaded locales
	                locale_locales__getSetGlobalLocale(oldLocale);
	            } catch (e) { }
	        }
	        return locales[name];
	    }
	
	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    function locale_locales__getSetGlobalLocale (key, values) {
	        var data;
	        if (key) {
	            if (isUndefined(values)) {
	                data = locale_locales__getLocale(key);
	            }
	            else {
	                data = defineLocale(key, values);
	            }
	
	            if (data) {
	                // moment.duration._locale = moment._locale = data;
	                globalLocale = data;
	            }
	        }
	
	        return globalLocale._abbr;
	    }
	
	    function defineLocale (name, config) {
	        if (config !== null) {
	            config.abbr = name;
	            if (locales[name] != null) {
	                deprecateSimple('defineLocaleOverride',
	                        'use moment.updateLocale(localeName, config) to change ' +
	                        'an existing locale. moment.defineLocale(localeName, ' +
	                        'config) should only be used for creating a new locale');
	                config = mergeConfigs(locales[name]._config, config);
	            } else if (config.parentLocale != null) {
	                if (locales[config.parentLocale] != null) {
	                    config = mergeConfigs(locales[config.parentLocale]._config, config);
	                } else {
	                    // treat as if there is no base config
	                    deprecateSimple('parentLocaleUndefined',
	                            'specified parentLocale is not defined yet');
	                }
	            }
	            locales[name] = new Locale(config);
	
	            // backwards compat for now: also set the locale
	            locale_locales__getSetGlobalLocale(name);
	
	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    }
	
	    function updateLocale(name, config) {
	        if (config != null) {
	            var locale;
	            if (locales[name] != null) {
	                config = mergeConfigs(locales[name]._config, config);
	            }
	            locale = new Locale(config);
	            locale.parentLocale = locales[name];
	            locales[name] = locale;
	
	            // backwards compat for now: also set the locale
	            locale_locales__getSetGlobalLocale(name);
	        } else {
	            // pass null for config to unupdate, useful for tests
	            if (locales[name] != null) {
	                if (locales[name].parentLocale != null) {
	                    locales[name] = locales[name].parentLocale;
	                } else if (locales[name] != null) {
	                    delete locales[name];
	                }
	            }
	        }
	        return locales[name];
	    }
	
	    // returns locale data
	    function locale_locales__getLocale (key) {
	        var locale;
	
	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }
	
	        if (!key) {
	            return globalLocale;
	        }
	
	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }
	
	        return chooseLocale(key);
	    }
	
	    function locale_locales__listLocales() {
	        return keys(locales);
	    }
	
	    var aliases = {};
	
	    function addUnitAlias (unit, shorthand) {
	        var lowerCase = unit.toLowerCase();
	        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	    }
	
	    function normalizeUnits(units) {
	        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
	    }
	
	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;
	
	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }
	
	        return normalizedInput;
	    }
	
	    function makeGetSet (unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                get_set__set(this, unit, value);
	                utils_hooks__hooks.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return get_set__get(this, unit);
	            }
	        };
	    }
	
	    function get_set__get (mom, unit) {
	        return mom.isValid() ?
	            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
	    }
	
	    function get_set__set (mom, unit, value) {
	        if (mom.isValid()) {
	            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	        }
	    }
	
	    // MOMENTS
	
	    function getSet (units, value) {
	        var unit;
	        if (typeof units === 'object') {
	            for (unit in units) {
	                this.set(unit, units[unit]);
	            }
	        } else {
	            units = normalizeUnits(units);
	            if (isFunction(this[units])) {
	                return this[units](value);
	            }
	        }
	        return this;
	    }
	
	    function zeroFill(number, targetLength, forceSign) {
	        var absNumber = '' + Math.abs(number),
	            zerosToFill = targetLength - absNumber.length,
	            sign = number >= 0;
	        return (sign ? (forceSign ? '+' : '') : '-') +
	            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
	    }
	
	    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
	
	    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
	
	    var formatFunctions = {};
	
	    var formatTokenFunctions = {};
	
	    // token:    'M'
	    // padded:   ['MM', 2]
	    // ordinal:  'Mo'
	    // callback: function () { this.month() + 1 }
	    function addFormatToken (token, padded, ordinal, callback) {
	        var func = callback;
	        if (typeof callback === 'string') {
	            func = function () {
	                return this[callback]();
	            };
	        }
	        if (token) {
	            formatTokenFunctions[token] = func;
	        }
	        if (padded) {
	            formatTokenFunctions[padded[0]] = function () {
	                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	            };
	        }
	        if (ordinal) {
	            formatTokenFunctions[ordinal] = function () {
	                return this.localeData().ordinal(func.apply(this, arguments), token);
	            };
	        }
	    }
	
	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }
	
	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens), i, length;
	
	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }
	
	        return function (mom) {
	            var output = '', i;
	            for (i = 0; i < length; i++) {
	                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
	            }
	            return output;
	        };
	    }
	
	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }
	
	        format = expandFormat(format, m.localeData());
	        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);
	
	        return formatFunctions[format](m);
	    }
	
	    function expandFormat(format, locale) {
	        var i = 5;
	
	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }
	
	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }
	
	        return format;
	    }
	
	    var match1         = /\d/;            //       0 - 9
	    var match2         = /\d\d/;          //      00 - 99
	    var match3         = /\d{3}/;         //     000 - 999
	    var match4         = /\d{4}/;         //    0000 - 9999
	    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
	    var match1to2      = /\d\d?/;         //       0 - 99
	    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
	    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
	    var match1to3      = /\d{1,3}/;       //       0 - 999
	    var match1to4      = /\d{1,4}/;       //       0 - 9999
	    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999
	
	    var matchUnsigned  = /\d+/;           //       0 - inf
	    var matchSigned    = /[+-]?\d+/;      //    -inf - inf
	
	    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
	    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z
	
	    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123
	
	    // any word (or two) characters or numbers including two/three word month in arabic.
	    // includes scottish gaelic two word and hyphenated months
	    var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;
	
	
	    var regexes = {};
	
	    function addRegexToken (token, regex, strictRegex) {
	        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
	            return (isStrict && strictRegex) ? strictRegex : regex;
	        };
	    }
	
	    function getParseRegexForToken (token, config) {
	        if (!hasOwnProp(regexes, token)) {
	            return new RegExp(unescapeFormat(token));
	        }
	
	        return regexes[token](config._strict, config._locale);
	    }
	
	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function unescapeFormat(s) {
	        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	            return p1 || p2 || p3 || p4;
	        }));
	    }
	
	    function regexEscape(s) {
	        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }
	
	    var tokens = {};
	
	    function addParseToken (token, callback) {
	        var i, func = callback;
	        if (typeof token === 'string') {
	            token = [token];
	        }
	        if (typeof callback === 'number') {
	            func = function (input, array) {
	                array[callback] = toInt(input);
	            };
	        }
	        for (i = 0; i < token.length; i++) {
	            tokens[token[i]] = func;
	        }
	    }
	
	    function addWeekParseToken (token, callback) {
	        addParseToken(token, function (input, array, config, token) {
	            config._w = config._w || {};
	            callback(input, config._w, config, token);
	        });
	    }
	
	    function addTimeToArrayFromToken(token, input, config) {
	        if (input != null && hasOwnProp(tokens, token)) {
	            tokens[token](input, config._a, config, token);
	        }
	    }
	
	    var YEAR = 0;
	    var MONTH = 1;
	    var DATE = 2;
	    var HOUR = 3;
	    var MINUTE = 4;
	    var SECOND = 5;
	    var MILLISECOND = 6;
	    var WEEK = 7;
	    var WEEKDAY = 8;
	
	    var indexOf;
	
	    if (Array.prototype.indexOf) {
	        indexOf = Array.prototype.indexOf;
	    } else {
	        indexOf = function (o) {
	            // I know
	            var i;
	            for (i = 0; i < this.length; ++i) {
	                if (this[i] === o) {
	                    return i;
	                }
	            }
	            return -1;
	        };
	    }
	
	    function daysInMonth(year, month) {
	        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
	    }
	
	    // FORMATTING
	
	    addFormatToken('M', ['MM', 2], 'Mo', function () {
	        return this.month() + 1;
	    });
	
	    addFormatToken('MMM', 0, 0, function (format) {
	        return this.localeData().monthsShort(this, format);
	    });
	
	    addFormatToken('MMMM', 0, 0, function (format) {
	        return this.localeData().months(this, format);
	    });
	
	    // ALIASES
	
	    addUnitAlias('month', 'M');
	
	    // PARSING
	
	    addRegexToken('M',    match1to2);
	    addRegexToken('MM',   match1to2, match2);
	    addRegexToken('MMM',  function (isStrict, locale) {
	        return locale.monthsShortRegex(isStrict);
	    });
	    addRegexToken('MMMM', function (isStrict, locale) {
	        return locale.monthsRegex(isStrict);
	    });
	
	    addParseToken(['M', 'MM'], function (input, array) {
	        array[MONTH] = toInt(input) - 1;
	    });
	
	    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	        var month = config._locale.monthsParse(input, token, config._strict);
	        // if we didn't find a month name, mark the date as invalid.
	        if (month != null) {
	            array[MONTH] = month;
	        } else {
	            getParsingFlags(config).invalidMonth = input;
	        }
	    });
	
	    // LOCALES
	
	    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/;
	    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
	    function localeMonths (m, format) {
	        return isArray(this._months) ? this._months[m.month()] :
	            this._months[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
	    }
	
	    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
	    function localeMonthsShort (m, format) {
	        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
	            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
	    }
	
	    function units_month__handleStrictParse(monthName, format, strict) {
	        var i, ii, mom, llc = monthName.toLocaleLowerCase();
	        if (!this._monthsParse) {
	            // this is not used
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	            for (i = 0; i < 12; ++i) {
	                mom = create_utc__createUTC([2000, i]);
	                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
	                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
	            }
	        }
	
	        if (strict) {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }
	
	    function localeMonthsParse (monthName, format, strict) {
	        var i, mom, regex;
	
	        if (this._monthsParseExact) {
	            return units_month__handleStrictParse.call(this, monthName, format, strict);
	        }
	
	        if (!this._monthsParse) {
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	        }
	
	        // TODO: add sorting
	        // Sorting makes sure if one month (or abbr) is a prefix of another
	        // see sorting in computeMonthsParse
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, i]);
	            if (strict && !this._longMonthsParse[i]) {
	                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	            }
	            if (!strict && !this._monthsParse[i]) {
	                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (!strict && this._monthsParse[i].test(monthName)) {
	                return i;
	            }
	        }
	    }
	
	    // MOMENTS
	
	    function setMonth (mom, value) {
	        var dayOfMonth;
	
	        if (!mom.isValid()) {
	            // No op
	            return mom;
	        }
	
	        if (typeof value === 'string') {
	            if (/^\d+$/.test(value)) {
	                value = toInt(value);
	            } else {
	                value = mom.localeData().monthsParse(value);
	                // TODO: Another silent failure?
	                if (typeof value !== 'number') {
	                    return mom;
	                }
	            }
	        }
	
	        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }
	
	    function getSetMonth (value) {
	        if (value != null) {
	            setMonth(this, value);
	            utils_hooks__hooks.updateOffset(this, true);
	            return this;
	        } else {
	            return get_set__get(this, 'Month');
	        }
	    }
	
	    function getDaysInMonth () {
	        return daysInMonth(this.year(), this.month());
	    }
	
	    var defaultMonthsShortRegex = matchWord;
	    function monthsShortRegex (isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsShortStrictRegex;
	            } else {
	                return this._monthsShortRegex;
	            }
	        } else {
	            return this._monthsShortStrictRegex && isStrict ?
	                this._monthsShortStrictRegex : this._monthsShortRegex;
	        }
	    }
	
	    var defaultMonthsRegex = matchWord;
	    function monthsRegex (isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsStrictRegex;
	            } else {
	                return this._monthsRegex;
	            }
	        } else {
	            return this._monthsStrictRegex && isStrict ?
	                this._monthsStrictRegex : this._monthsRegex;
	        }
	    }
	
	    function computeMonthsParse () {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }
	
	        var shortPieces = [], longPieces = [], mixedPieces = [],
	            i, mom;
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, i]);
	            shortPieces.push(this.monthsShort(mom, ''));
	            longPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.monthsShort(mom, ''));
	        }
	        // Sorting makes sure if one month (or abbr) is a prefix of another it
	        // will match the longer piece.
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 12; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }
	
	        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._monthsShortRegex = this._monthsRegex;
	        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	    }
	
	    function checkOverflow (m) {
	        var overflow;
	        var a = m._a;
	
	        if (a && getParsingFlags(m).overflow === -2) {
	            overflow =
	                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
	                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
	                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
	                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
	                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
	                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
	                -1;
	
	            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	                overflow = DATE;
	            }
	            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
	                overflow = WEEK;
	            }
	            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
	                overflow = WEEKDAY;
	            }
	
	            getParsingFlags(m).overflow = overflow;
	        }
	
	        return m;
	    }
	
	    // iso 8601 regex
	    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;
	    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;
	
	    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
	
	    var isoDates = [
	        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
	        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
	        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
	        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
	        ['YYYY-DDD', /\d{4}-\d{3}/],
	        ['YYYY-MM', /\d{4}-\d\d/, false],
	        ['YYYYYYMMDD', /[+-]\d{10}/],
	        ['YYYYMMDD', /\d{8}/],
	        // YYYYMM is NOT allowed by the standard
	        ['GGGG[W]WWE', /\d{4}W\d{3}/],
	        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
	        ['YYYYDDD', /\d{7}/]
	    ];
	
	    // iso time formats and regexes
	    var isoTimes = [
	        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
	        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
	        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
	        ['HH:mm', /\d\d:\d\d/],
	        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
	        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
	        ['HHmmss', /\d\d\d\d\d\d/],
	        ['HHmm', /\d\d\d\d/],
	        ['HH', /\d\d/]
	    ];
	
	    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;
	
	    // date from iso format
	    function configFromISO(config) {
	        var i, l,
	            string = config._i,
	            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
	            allowTime, dateFormat, timeFormat, tzFormat;
	
	        if (match) {
	            getParsingFlags(config).iso = true;
	
	            for (i = 0, l = isoDates.length; i < l; i++) {
	                if (isoDates[i][1].exec(match[1])) {
	                    dateFormat = isoDates[i][0];
	                    allowTime = isoDates[i][2] !== false;
	                    break;
	                }
	            }
	            if (dateFormat == null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[3]) {
	                for (i = 0, l = isoTimes.length; i < l; i++) {
	                    if (isoTimes[i][1].exec(match[3])) {
	                        // match[2] should be 'T' or space
	                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
	                        break;
	                    }
	                }
	                if (timeFormat == null) {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            if (!allowTime && timeFormat != null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[4]) {
	                if (tzRegex.exec(match[4])) {
	                    tzFormat = 'Z';
	                } else {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
	            configFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }
	
	    // date from iso format or fallback
	    function configFromString(config) {
	        var matched = aspNetJsonRegex.exec(config._i);
	
	        if (matched !== null) {
	            config._d = new Date(+matched[1]);
	            return;
	        }
	
	        configFromISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }
	
	    utils_hooks__hooks.createFromInputFallback = deprecate(
	        'moment construction falls back to js Date. This is ' +
	        'discouraged and will be removed in upcoming major ' +
	        'release. Please refer to ' +
	        'https://github.com/moment/moment/issues/1407 for more info.',
	        function (config) {
	            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	        }
	    );
	
	    function createDate (y, m, d, h, M, s, ms) {
	        //can't just apply() to create a date:
	        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
	        var date = new Date(y, m, d, h, M, s, ms);
	
	        //the date constructor remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
	            date.setFullYear(y);
	        }
	        return date;
	    }
	
	    function createUTCDate (y) {
	        var date = new Date(Date.UTC.apply(null, arguments));
	
	        //the Date.UTC function remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
	            date.setUTCFullYear(y);
	        }
	        return date;
	    }
	
	    // FORMATTING
	
	    addFormatToken('Y', 0, 0, function () {
	        var y = this.year();
	        return y <= 9999 ? '' + y : '+' + y;
	    });
	
	    addFormatToken(0, ['YY', 2], 0, function () {
	        return this.year() % 100;
	    });
	
	    addFormatToken(0, ['YYYY',   4],       0, 'year');
	    addFormatToken(0, ['YYYYY',  5],       0, 'year');
	    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');
	
	    // ALIASES
	
	    addUnitAlias('year', 'y');
	
	    // PARSING
	
	    addRegexToken('Y',      matchSigned);
	    addRegexToken('YY',     match1to2, match2);
	    addRegexToken('YYYY',   match1to4, match4);
	    addRegexToken('YYYYY',  match1to6, match6);
	    addRegexToken('YYYYYY', match1to6, match6);
	
	    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	    addParseToken('YYYY', function (input, array) {
	        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);
	    });
	    addParseToken('YY', function (input, array) {
	        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });
	    addParseToken('Y', function (input, array) {
	        array[YEAR] = parseInt(input, 10);
	    });
	
	    // HELPERS
	
	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }
	
	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }
	
	    // HOOKS
	
	    utils_hooks__hooks.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };
	
	    // MOMENTS
	
	    var getSetYear = makeGetSet('FullYear', true);
	
	    function getIsLeapYear () {
	        return isLeapYear(this.year());
	    }
	
	    // start-of-first-week - start-of-year
	    function firstWeekOffset(year, dow, doy) {
	        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
	            fwd = 7 + dow - doy,
	            // first-week day local weekday -- which local weekday is fwd
	            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
	
	        return -fwdlw + fwd - 1;
	    }
	
	    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
	        var localWeekday = (7 + weekday - dow) % 7,
	            weekOffset = firstWeekOffset(year, dow, doy),
	            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
	            resYear, resDayOfYear;
	
	        if (dayOfYear <= 0) {
	            resYear = year - 1;
	            resDayOfYear = daysInYear(resYear) + dayOfYear;
	        } else if (dayOfYear > daysInYear(year)) {
	            resYear = year + 1;
	            resDayOfYear = dayOfYear - daysInYear(year);
	        } else {
	            resYear = year;
	            resDayOfYear = dayOfYear;
	        }
	
	        return {
	            year: resYear,
	            dayOfYear: resDayOfYear
	        };
	    }
	
	    function weekOfYear(mom, dow, doy) {
	        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
	            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
	            resWeek, resYear;
	
	        if (week < 1) {
	            resYear = mom.year() - 1;
	            resWeek = week + weeksInYear(resYear, dow, doy);
	        } else if (week > weeksInYear(mom.year(), dow, doy)) {
	            resWeek = week - weeksInYear(mom.year(), dow, doy);
	            resYear = mom.year() + 1;
	        } else {
	            resYear = mom.year();
	            resWeek = week;
	        }
	
	        return {
	            week: resWeek,
	            year: resYear
	        };
	    }
	
	    function weeksInYear(year, dow, doy) {
	        var weekOffset = firstWeekOffset(year, dow, doy),
	            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
	        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
	    }
	
	    // Pick the first defined of two or three arguments.
	    function defaults(a, b, c) {
	        if (a != null) {
	            return a;
	        }
	        if (b != null) {
	            return b;
	        }
	        return c;
	    }
	
	    function currentDateArray(config) {
	        // hooks is actually the exported moment object
	        var nowValue = new Date(utils_hooks__hooks.now());
	        if (config._useUTC) {
	            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
	        }
	        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
	    }
	
	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function configFromArray (config) {
	        var i, date, input = [], currentDate, yearToUse;
	
	        if (config._d) {
	            return;
	        }
	
	        currentDate = currentDateArray(config);
	
	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }
	
	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear) {
	            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
	
	            if (config._dayOfYear > daysInYear(yearToUse)) {
	                getParsingFlags(config)._overflowDayOfYear = true;
	            }
	
	            date = createUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }
	
	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }
	
	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	        }
	
	        // Check for 24:00:00.000
	        if (config._a[HOUR] === 24 &&
	                config._a[MINUTE] === 0 &&
	                config._a[SECOND] === 0 &&
	                config._a[MILLISECOND] === 0) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }
	
	        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }
	
	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }
	    }
	
	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;
	
	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;
	
	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);
	            week = defaults(w.W, 1);
	            weekday = defaults(w.E, 1);
	            if (weekday < 1 || weekday > 7) {
	                weekdayOverflow = true;
	            }
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;
	
	            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);
	            week = defaults(w.w, 1);
	
	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < 0 || weekday > 6) {
	                    weekdayOverflow = true;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from begining of week
	                weekday = w.e + dow;
	                if (w.e < 0 || w.e > 6) {
	                    weekdayOverflow = true;
	                }
	            } else {
	                // default to begining of week
	                weekday = dow;
	            }
	        }
	        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
	            getParsingFlags(config)._overflowWeeks = true;
	        } else if (weekdayOverflow != null) {
	            getParsingFlags(config)._overflowWeekday = true;
	        } else {
	            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
	            config._a[YEAR] = temp.year;
	            config._dayOfYear = temp.dayOfYear;
	        }
	    }
	
	    // constant that refers to the ISO standard
	    utils_hooks__hooks.ISO_8601 = function () {};
	
	    // date from string and format string
	    function configFromStringAndFormat(config) {
	        // TODO: Move this to another part of the creation flow to prevent circular deps
	        if (config._f === utils_hooks__hooks.ISO_8601) {
	            configFromISO(config);
	            return;
	        }
	
	        config._a = [];
	        getParsingFlags(config).empty = true;
	
	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i, parsedInput, tokens, token, skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0;
	
	        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];
	
	        for (i = 0; i < tokens.length; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	            // console.log('token', token, 'parsedInput', parsedInput,
	            //         'regex', getParseRegexForToken(token, config));
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    getParsingFlags(config).unusedInput.push(skipped);
	                }
	                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    getParsingFlags(config).empty = false;
	                }
	                else {
	                    getParsingFlags(config).unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            }
	            else if (config._strict && !parsedInput) {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	        }
	
	        // add remaining unparsed input length to the string
	        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            getParsingFlags(config).unusedInput.push(string);
	        }
	
	        // clear _12h flag if hour is <= 12
	        if (getParsingFlags(config).bigHour === true &&
	                config._a[HOUR] <= 12 &&
	                config._a[HOUR] > 0) {
	            getParsingFlags(config).bigHour = undefined;
	        }
	
	        getParsingFlags(config).parsedDateParts = config._a.slice(0);
	        getParsingFlags(config).meridiem = config._meridiem;
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
	
	        configFromArray(config);
	        checkOverflow(config);
	    }
	
	
	    function meridiemFixWrap (locale, hour, meridiem) {
	        var isPm;
	
	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // this is not supposed to happen
	            return hour;
	        }
	    }
	
	    // date from string and array of format strings
	    function configFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,
	
	            scoreToBeat,
	            i,
	            currentScore;
	
	        if (config._f.length === 0) {
	            getParsingFlags(config).invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }
	
	        for (i = 0; i < config._f.length; i++) {
	            currentScore = 0;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._f = config._f[i];
	            configFromStringAndFormat(tempConfig);
	
	            if (!valid__isValid(tempConfig)) {
	                continue;
	            }
	
	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += getParsingFlags(tempConfig).charsLeftOver;
	
	            //or tokens
	            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
	
	            getParsingFlags(tempConfig).score = currentScore;
	
	            if (scoreToBeat == null || currentScore < scoreToBeat) {
	                scoreToBeat = currentScore;
	                bestMoment = tempConfig;
	            }
	        }
	
	        extend(config, bestMoment || tempConfig);
	    }
	
	    function configFromObject(config) {
	        if (config._d) {
	            return;
	        }
	
	        var i = normalizeObjectUnits(config._i);
	        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
	            return obj && parseInt(obj, 10);
	        });
	
	        configFromArray(config);
	    }
	
	    function createFromConfig (config) {
	        var res = new Moment(checkOverflow(prepareConfig(config)));
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }
	
	        return res;
	    }
	
	    function prepareConfig (config) {
	        var input = config._i,
	            format = config._f;
	
	        config._locale = config._locale || locale_locales__getLocale(config._l);
	
	        if (input === null || (format === undefined && input === '')) {
	            return valid__createInvalid({nullInput: true});
	        }
	
	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }
	
	        if (isMoment(input)) {
	            return new Moment(checkOverflow(input));
	        } else if (isArray(format)) {
	            configFromStringAndArray(config);
	        } else if (format) {
	            configFromStringAndFormat(config);
	        } else if (isDate(input)) {
	            config._d = input;
	        } else {
	            configFromInput(config);
	        }
	
	        if (!valid__isValid(config)) {
	            config._d = null;
	        }
	
	        return config;
	    }
	
	    function configFromInput(config) {
	        var input = config._i;
	        if (input === undefined) {
	            config._d = new Date(utils_hooks__hooks.now());
	        } else if (isDate(input)) {
	            config._d = new Date(input.valueOf());
	        } else if (typeof input === 'string') {
	            configFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            configFromArray(config);
	        } else if (typeof(input) === 'object') {
	            configFromObject(config);
	        } else if (typeof(input) === 'number') {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }
	
	    function createLocalOrUTC (input, format, locale, strict, isUTC) {
	        var c = {};
	
	        if (typeof(locale) === 'boolean') {
	            strict = locale;
	            locale = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c._isAMomentObject = true;
	        c._useUTC = c._isUTC = isUTC;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;
	
	        return createFromConfig(c);
	    }
	
	    function local__createLocal (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, false);
	    }
	
	    var prototypeMin = deprecate(
	         'moment().min is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
	         function () {
	             var other = local__createLocal.apply(null, arguments);
	             if (this.isValid() && other.isValid()) {
	                 return other < this ? this : other;
	             } else {
	                 return valid__createInvalid();
	             }
	         }
	     );
	
	    var prototypeMax = deprecate(
	        'moment().max is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
	        function () {
	            var other = local__createLocal.apply(null, arguments);
	            if (this.isValid() && other.isValid()) {
	                return other > this ? this : other;
	            } else {
	                return valid__createInvalid();
	            }
	        }
	    );
	
	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return local__createLocal();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (!moments[i].isValid() || moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }
	
	    // TODO: Use [].sort instead?
	    function min () {
	        var args = [].slice.call(arguments, 0);
	
	        return pickBy('isBefore', args);
	    }
	
	    function max () {
	        var args = [].slice.call(arguments, 0);
	
	        return pickBy('isAfter', args);
	    }
	
	    var now = function () {
	        return Date.now ? Date.now() : +(new Date());
	    };
	
	    function Duration (duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;
	
	        // representation for dateAddRemove
	        this._milliseconds = +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days +
	            weeks * 7;
	        // It is impossible translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months +
	            quarters * 3 +
	            years * 12;
	
	        this._data = {};
	
	        this._locale = locale_locales__getLocale();
	
	        this._bubble();
	    }
	
	    function isDuration (obj) {
	        return obj instanceof Duration;
	    }
	
	    // FORMATTING
	
	    function offset (token, separator) {
	        addFormatToken(token, 0, 0, function () {
	            var offset = this.utcOffset();
	            var sign = '+';
	            if (offset < 0) {
	                offset = -offset;
	                sign = '-';
	            }
	            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
	        });
	    }
	
	    offset('Z', ':');
	    offset('ZZ', '');
	
	    // PARSING
	
	    addRegexToken('Z',  matchShortOffset);
	    addRegexToken('ZZ', matchShortOffset);
	    addParseToken(['Z', 'ZZ'], function (input, array, config) {
	        config._useUTC = true;
	        config._tzm = offsetFromString(matchShortOffset, input);
	    });
	
	    // HELPERS
	
	    // timezone chunker
	    // '+10:00' > ['10',  '00']
	    // '-1530'  > ['-15', '30']
	    var chunkOffset = /([\+\-]|\d\d)/gi;
	
	    function offsetFromString(matcher, string) {
	        var matches = ((string || '').match(matcher) || []);
	        var chunk   = matches[matches.length - 1] || [];
	        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	        var minutes = +(parts[1] * 60) + toInt(parts[2]);
	
	        return parts[0] === '+' ? minutes : -minutes;
	    }
	
	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function cloneWithOffset(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff = (isMoment(input) || isDate(input) ? input.valueOf() : local__createLocal(input).valueOf()) - res.valueOf();
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(res._d.valueOf() + diff);
	            utils_hooks__hooks.updateOffset(res, false);
	            return res;
	        } else {
	            return local__createLocal(input).local();
	        }
	    }
	
	    function getDateOffset (m) {
	        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	        // https://github.com/moment/moment/pull/1871
	        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
	    }
	
	    // HOOKS
	
	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    utils_hooks__hooks.updateOffset = function () {};
	
	    // MOMENTS
	
	    // keepLocalTime = true means only change the timezone, without
	    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	    // +0200, so we adjust the time as needed, to be valid.
	    //
	    // Keeping the time actually adds/subtracts (one hour)
	    // from the actual represented time. That is why we call updateOffset
	    // a second time. In case it wants us to change the offset again
	    // _changeInProgress == true case, then we have to adjust, because
	    // there is no such time in the given timezone.
	    function getSetOffset (input, keepLocalTime) {
	        var offset = this._offset || 0,
	            localAdjust;
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        if (input != null) {
	            if (typeof input === 'string') {
	                input = offsetFromString(matchShortOffset, input);
	            } else if (Math.abs(input) < 16) {
	                input = input * 60;
	            }
	            if (!this._isUTC && keepLocalTime) {
	                localAdjust = getDateOffset(this);
	            }
	            this._offset = input;
	            this._isUTC = true;
	            if (localAdjust != null) {
	                this.add(localAdjust, 'm');
	            }
	            if (offset !== input) {
	                if (!keepLocalTime || this._changeInProgress) {
	                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);
	                } else if (!this._changeInProgress) {
	                    this._changeInProgress = true;
	                    utils_hooks__hooks.updateOffset(this, true);
	                    this._changeInProgress = null;
	                }
	            }
	            return this;
	        } else {
	            return this._isUTC ? offset : getDateOffset(this);
	        }
	    }
	
	    function getSetZone (input, keepLocalTime) {
	        if (input != null) {
	            if (typeof input !== 'string') {
	                input = -input;
	            }
	
	            this.utcOffset(input, keepLocalTime);
	
	            return this;
	        } else {
	            return -this.utcOffset();
	        }
	    }
	
	    function setOffsetToUTC (keepLocalTime) {
	        return this.utcOffset(0, keepLocalTime);
	    }
	
	    function setOffsetToLocal (keepLocalTime) {
	        if (this._isUTC) {
	            this.utcOffset(0, keepLocalTime);
	            this._isUTC = false;
	
	            if (keepLocalTime) {
	                this.subtract(getDateOffset(this), 'm');
	            }
	        }
	        return this;
	    }
	
	    function setOffsetToParsedOffset () {
	        if (this._tzm) {
	            this.utcOffset(this._tzm);
	        } else if (typeof this._i === 'string') {
	            this.utcOffset(offsetFromString(matchOffset, this._i));
	        }
	        return this;
	    }
	
	    function hasAlignedHourOffset (input) {
	        if (!this.isValid()) {
	            return false;
	        }
	        input = input ? local__createLocal(input).utcOffset() : 0;
	
	        return (this.utcOffset() - input) % 60 === 0;
	    }
	
	    function isDaylightSavingTime () {
	        return (
	            this.utcOffset() > this.clone().month(0).utcOffset() ||
	            this.utcOffset() > this.clone().month(5).utcOffset()
	        );
	    }
	
	    function isDaylightSavingTimeShifted () {
	        if (!isUndefined(this._isDSTShifted)) {
	            return this._isDSTShifted;
	        }
	
	        var c = {};
	
	        copyConfig(c, this);
	        c = prepareConfig(c);
	
	        if (c._a) {
	            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);
	            this._isDSTShifted = this.isValid() &&
	                compareArrays(c._a, other.toArray()) > 0;
	        } else {
	            this._isDSTShifted = false;
	        }
	
	        return this._isDSTShifted;
	    }
	
	    function isLocal () {
	        return this.isValid() ? !this._isUTC : false;
	    }
	
	    function isUtcOffset () {
	        return this.isValid() ? this._isUTC : false;
	    }
	
	    function isUtc () {
	        return this.isValid() ? this._isUTC && this._offset === 0 : false;
	    }
	
	    // ASP.NET json date format regex
	    var aspNetRegex = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?\d*)?$/;
	
	    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	    // and further modified to allow for strings containing both week and day
	    var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;
	
	    function create__createDuration (input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            diffRes;
	
	        if (isDuration(input)) {
	            duration = {
	                ms : input._milliseconds,
	                d  : input._days,
	                M  : input._months
	            };
	        } else if (typeof input === 'number') {
	            duration = {};
	            if (key) {
	                duration[key] = input;
	            } else {
	                duration.milliseconds = input;
	            }
	        } else if (!!(match = aspNetRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y  : 0,
	                d  : toInt(match[DATE])        * sign,
	                h  : toInt(match[HOUR])        * sign,
	                m  : toInt(match[MINUTE])      * sign,
	                s  : toInt(match[SECOND])      * sign,
	                ms : toInt(match[MILLISECOND]) * sign
	            };
	        } else if (!!(match = isoRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y : parseIso(match[2], sign),
	                M : parseIso(match[3], sign),
	                w : parseIso(match[4], sign),
	                d : parseIso(match[5], sign),
	                h : parseIso(match[6], sign),
	                m : parseIso(match[7], sign),
	                s : parseIso(match[8], sign)
	            };
	        } else if (duration == null) {// checks for null or undefined
	            duration = {};
	        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));
	
	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }
	
	        ret = new Duration(duration);
	
	        if (isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }
	
	        return ret;
	    }
	
	    create__createDuration.fn = Duration.prototype;
	
	    function parseIso (inp, sign) {
	        // We'd normally use ~~inp for this, but unfortunately it also
	        // converts floats to ints.
	        // inp may be undefined, so careful calling replace on it.
	        var res = inp && parseFloat(inp.replace(',', '.'));
	        // apply sign while we're at it
	        return (isNaN(res) ? 0 : res) * sign;
	    }
	
	    function positiveMomentsDifference(base, other) {
	        var res = {milliseconds: 0, months: 0};
	
	        res.months = other.month() - base.month() +
	            (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }
	
	        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));
	
	        return res;
	    }
	
	    function momentsDifference(base, other) {
	        var res;
	        if (!(base.isValid() && other.isValid())) {
	            return {milliseconds: 0, months: 0};
	        }
	
	        other = cloneWithOffset(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }
	
	        return res;
	    }
	
	    function absRound (number) {
	        if (number < 0) {
	            return Math.round(-1 * number) * -1;
	        } else {
	            return Math.round(number);
	        }
	    }
	
	    // TODO: remove 'name' arg after deprecation is removed
	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
	                tmp = val; val = period; period = tmp;
	            }
	
	            val = typeof val === 'string' ? +val : val;
	            dur = create__createDuration(val, period);
	            add_subtract__addSubtract(this, dur, direction);
	            return this;
	        };
	    }
	
	    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = absRound(duration._days),
	            months = absRound(duration._months);
	
	        if (!mom.isValid()) {
	            // No op
	            return;
	        }
	
	        updateOffset = updateOffset == null ? true : updateOffset;
	
	        if (milliseconds) {
	            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
	        }
	        if (days) {
	            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);
	        }
	        if (months) {
	            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
	        }
	        if (updateOffset) {
	            utils_hooks__hooks.updateOffset(mom, days || months);
	        }
	    }
	
	    var add_subtract__add      = createAdder(1, 'add');
	    var add_subtract__subtract = createAdder(-1, 'subtract');
	
	    function moment_calendar__calendar (time, formats) {
	        // We want to compare the start of today, vs this.
	        // Getting start-of-today depends on whether we're local/utc/offset or not.
	        var now = time || local__createLocal(),
	            sod = cloneWithOffset(now, this).startOf('day'),
	            diff = this.diff(sod, 'days', true),
	            format = diff < -6 ? 'sameElse' :
	                diff < -1 ? 'lastWeek' :
	                diff < 0 ? 'lastDay' :
	                diff < 1 ? 'sameDay' :
	                diff < 2 ? 'nextDay' :
	                diff < 7 ? 'nextWeek' : 'sameElse';
	
	        var output = formats && (isFunction(formats[format]) ? formats[format]() : formats[format]);
	
	        return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));
	    }
	
	    function clone () {
	        return new Moment(this);
	    }
	
	    function isAfter (input, units) {
	        var localInput = isMoment(input) ? input : local__createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	        if (units === 'millisecond') {
	            return this.valueOf() > localInput.valueOf();
	        } else {
	            return localInput.valueOf() < this.clone().startOf(units).valueOf();
	        }
	    }
	
	    function isBefore (input, units) {
	        var localInput = isMoment(input) ? input : local__createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	        if (units === 'millisecond') {
	            return this.valueOf() < localInput.valueOf();
	        } else {
	            return this.clone().endOf(units).valueOf() < localInput.valueOf();
	        }
	    }
	
	    function isBetween (from, to, units, inclusivity) {
	        inclusivity = inclusivity || '()';
	        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
	            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
	    }
	
	    function isSame (input, units) {
	        var localInput = isMoment(input) ? input : local__createLocal(input),
	            inputMs;
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units || 'millisecond');
	        if (units === 'millisecond') {
	            return this.valueOf() === localInput.valueOf();
	        } else {
	            inputMs = localInput.valueOf();
	            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
	        }
	    }
	
	    function isSameOrAfter (input, units) {
	        return this.isSame(input, units) || this.isAfter(input,units);
	    }
	
	    function isSameOrBefore (input, units) {
	        return this.isSame(input, units) || this.isBefore(input,units);
	    }
	
	    function diff (input, units, asFloat) {
	        var that,
	            zoneDelta,
	            delta, output;
	
	        if (!this.isValid()) {
	            return NaN;
	        }
	
	        that = cloneWithOffset(input, this);
	
	        if (!that.isValid()) {
	            return NaN;
	        }
	
	        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
	
	        units = normalizeUnits(units);
	
	        if (units === 'year' || units === 'month' || units === 'quarter') {
	            output = monthDiff(this, that);
	            if (units === 'quarter') {
	                output = output / 3;
	            } else if (units === 'year') {
	                output = output / 12;
	            }
	        } else {
	            delta = this - that;
	            output = units === 'second' ? delta / 1e3 : // 1000
	                units === 'minute' ? delta / 6e4 : // 1000 * 60
	                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
	                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
	                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
	                delta;
	        }
	        return asFloat ? output : absFloor(output);
	    }
	
	    function monthDiff (a, b) {
	        // difference in months
	        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
	            // b is in (anchor - 1 month, anchor + 1 month)
	            anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2, adjust;
	
	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }
	
	        //check for negative zero, return zero if negative zero
	        return -(wholeMonthDiff + adjust) || 0;
	    }
	
	    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
	    utils_hooks__hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';
	
	    function toString () {
	        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	    }
	
	    function moment_format__toISOString () {
	        var m = this.clone().utc();
	        if (0 < m.year() && m.year() <= 9999) {
	            if (isFunction(Date.prototype.toISOString)) {
	                // native implementation is ~50x faster, use it when we can
	                return this.toDate().toISOString();
	            } else {
	                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	            }
	        } else {
	            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	        }
	    }
	
	    function format (inputString) {
	        if (!inputString) {
	            inputString = this.isUtc() ? utils_hooks__hooks.defaultFormatUtc : utils_hooks__hooks.defaultFormat;
	        }
	        var output = formatMoment(this, inputString);
	        return this.localeData().postformat(output);
	    }
	
	    function from (time, withoutSuffix) {
	        if (this.isValid() &&
	                ((isMoment(time) && time.isValid()) ||
	                 local__createLocal(time).isValid())) {
	            return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }
	
	    function fromNow (withoutSuffix) {
	        return this.from(local__createLocal(), withoutSuffix);
	    }
	
	    function to (time, withoutSuffix) {
	        if (this.isValid() &&
	                ((isMoment(time) && time.isValid()) ||
	                 local__createLocal(time).isValid())) {
	            return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }
	
	    function toNow (withoutSuffix) {
	        return this.to(local__createLocal(), withoutSuffix);
	    }
	
	    // If passed a locale key, it will set the locale for this
	    // instance.  Otherwise, it will return the locale configuration
	    // variables for this instance.
	    function locale (key) {
	        var newLocaleData;
	
	        if (key === undefined) {
	            return this._locale._abbr;
	        } else {
	            newLocaleData = locale_locales__getLocale(key);
	            if (newLocaleData != null) {
	                this._locale = newLocaleData;
	            }
	            return this;
	        }
	    }
	
	    var lang = deprecate(
	        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	        function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }
	    );
	
	    function localeData () {
	        return this._locale;
	    }
	
	    function startOf (units) {
	        units = normalizeUnits(units);
	        // the following switch intentionally omits break keywords
	        // to utilize falling through the cases.
	        switch (units) {
	        case 'year':
	            this.month(0);
	            /* falls through */
	        case 'quarter':
	        case 'month':
	            this.date(1);
	            /* falls through */
	        case 'week':
	        case 'isoWeek':
	        case 'day':
	        case 'date':
	            this.hours(0);
	            /* falls through */
	        case 'hour':
	            this.minutes(0);
	            /* falls through */
	        case 'minute':
	            this.seconds(0);
	            /* falls through */
	        case 'second':
	            this.milliseconds(0);
	        }
	
	        // weeks are a special case
	        if (units === 'week') {
	            this.weekday(0);
	        }
	        if (units === 'isoWeek') {
	            this.isoWeekday(1);
	        }
	
	        // quarters are also special
	        if (units === 'quarter') {
	            this.month(Math.floor(this.month() / 3) * 3);
	        }
	
	        return this;
	    }
	
	    function endOf (units) {
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond') {
	            return this;
	        }
	
	        // 'date' is an alias for 'day', so it should be considered as such.
	        if (units === 'date') {
	            units = 'day';
	        }
	
	        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
	    }
	
	    function to_type__valueOf () {
	        return this._d.valueOf() - ((this._offset || 0) * 60000);
	    }
	
	    function unix () {
	        return Math.floor(this.valueOf() / 1000);
	    }
	
	    function toDate () {
	        return this._offset ? new Date(this.valueOf()) : this._d;
	    }
	
	    function toArray () {
	        var m = this;
	        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
	    }
	
	    function toObject () {
	        var m = this;
	        return {
	            years: m.year(),
	            months: m.month(),
	            date: m.date(),
	            hours: m.hours(),
	            minutes: m.minutes(),
	            seconds: m.seconds(),
	            milliseconds: m.milliseconds()
	        };
	    }
	
	    function toJSON () {
	        // new Date(NaN).toJSON() === null
	        return this.isValid() ? this.toISOString() : null;
	    }
	
	    function moment_valid__isValid () {
	        return valid__isValid(this);
	    }
	
	    function parsingFlags () {
	        return extend({}, getParsingFlags(this));
	    }
	
	    function invalidAt () {
	        return getParsingFlags(this).overflow;
	    }
	
	    function creationData() {
	        return {
	            input: this._i,
	            format: this._f,
	            locale: this._locale,
	            isUTC: this._isUTC,
	            strict: this._strict
	        };
	    }
	
	    // FORMATTING
	
	    addFormatToken(0, ['gg', 2], 0, function () {
	        return this.weekYear() % 100;
	    });
	
	    addFormatToken(0, ['GG', 2], 0, function () {
	        return this.isoWeekYear() % 100;
	    });
	
	    function addWeekYearFormatToken (token, getter) {
	        addFormatToken(0, [token, token.length], 0, getter);
	    }
	
	    addWeekYearFormatToken('gggg',     'weekYear');
	    addWeekYearFormatToken('ggggg',    'weekYear');
	    addWeekYearFormatToken('GGGG',  'isoWeekYear');
	    addWeekYearFormatToken('GGGGG', 'isoWeekYear');
	
	    // ALIASES
	
	    addUnitAlias('weekYear', 'gg');
	    addUnitAlias('isoWeekYear', 'GG');
	
	    // PARSING
	
	    addRegexToken('G',      matchSigned);
	    addRegexToken('g',      matchSigned);
	    addRegexToken('GG',     match1to2, match2);
	    addRegexToken('gg',     match1to2, match2);
	    addRegexToken('GGGG',   match1to4, match4);
	    addRegexToken('gggg',   match1to4, match4);
	    addRegexToken('GGGGG',  match1to6, match6);
	    addRegexToken('ggggg',  match1to6, match6);
	
	    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
	        week[token.substr(0, 2)] = toInt(input);
	    });
	
	    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });
	
	    // MOMENTS
	
	    function getSetWeekYear (input) {
	        return getSetWeekYearHelper.call(this,
	                input,
	                this.week(),
	                this.weekday(),
	                this.localeData()._week.dow,
	                this.localeData()._week.doy);
	    }
	
	    function getSetISOWeekYear (input) {
	        return getSetWeekYearHelper.call(this,
	                input, this.isoWeek(), this.isoWeekday(), 1, 4);
	    }
	
	    function getISOWeeksInYear () {
	        return weeksInYear(this.year(), 1, 4);
	    }
	
	    function getWeeksInYear () {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	    }
	
	    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
	        var weeksTarget;
	        if (input == null) {
	            return weekOfYear(this, dow, doy).year;
	        } else {
	            weeksTarget = weeksInYear(input, dow, doy);
	            if (week > weeksTarget) {
	                week = weeksTarget;
	            }
	            return setWeekAll.call(this, input, week, weekday, dow, doy);
	        }
	    }
	
	    function setWeekAll(weekYear, week, weekday, dow, doy) {
	        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
	            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
	
	        this.year(date.getUTCFullYear());
	        this.month(date.getUTCMonth());
	        this.date(date.getUTCDate());
	        return this;
	    }
	
	    // FORMATTING
	
	    addFormatToken('Q', 0, 'Qo', 'quarter');
	
	    // ALIASES
	
	    addUnitAlias('quarter', 'Q');
	
	    // PARSING
	
	    addRegexToken('Q', match1);
	    addParseToken('Q', function (input, array) {
	        array[MONTH] = (toInt(input) - 1) * 3;
	    });
	
	    // MOMENTS
	
	    function getSetQuarter (input) {
	        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	    }
	
	    // FORMATTING
	
	    addFormatToken('w', ['ww', 2], 'wo', 'week');
	    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');
	
	    // ALIASES
	
	    addUnitAlias('week', 'w');
	    addUnitAlias('isoWeek', 'W');
	
	    // PARSING
	
	    addRegexToken('w',  match1to2);
	    addRegexToken('ww', match1to2, match2);
	    addRegexToken('W',  match1to2);
	    addRegexToken('WW', match1to2, match2);
	
	    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
	        week[token.substr(0, 1)] = toInt(input);
	    });
	
	    // HELPERS
	
	    // LOCALES
	
	    function localeWeek (mom) {
	        return weekOfYear(mom, this._week.dow, this._week.doy).week;
	    }
	
	    var defaultLocaleWeek = {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    };
	
	    function localeFirstDayOfWeek () {
	        return this._week.dow;
	    }
	
	    function localeFirstDayOfYear () {
	        return this._week.doy;
	    }
	
	    // MOMENTS
	
	    function getSetWeek (input) {
	        var week = this.localeData().week(this);
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }
	
	    function getSetISOWeek (input) {
	        var week = weekOfYear(this, 1, 4).week;
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }
	
	    // FORMATTING
	
	    addFormatToken('D', ['DD', 2], 'Do', 'date');
	
	    // ALIASES
	
	    addUnitAlias('date', 'D');
	
	    // PARSING
	
	    addRegexToken('D',  match1to2);
	    addRegexToken('DD', match1to2, match2);
	    addRegexToken('Do', function (isStrict, locale) {
	        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
	    });
	
	    addParseToken(['D', 'DD'], DATE);
	    addParseToken('Do', function (input, array) {
	        array[DATE] = toInt(input.match(match1to2)[0], 10);
	    });
	
	    // MOMENTS
	
	    var getSetDayOfMonth = makeGetSet('Date', true);
	
	    // FORMATTING
	
	    addFormatToken('d', 0, 'do', 'day');
	
	    addFormatToken('dd', 0, 0, function (format) {
	        return this.localeData().weekdaysMin(this, format);
	    });
	
	    addFormatToken('ddd', 0, 0, function (format) {
	        return this.localeData().weekdaysShort(this, format);
	    });
	
	    addFormatToken('dddd', 0, 0, function (format) {
	        return this.localeData().weekdays(this, format);
	    });
	
	    addFormatToken('e', 0, 0, 'weekday');
	    addFormatToken('E', 0, 0, 'isoWeekday');
	
	    // ALIASES
	
	    addUnitAlias('day', 'd');
	    addUnitAlias('weekday', 'e');
	    addUnitAlias('isoWeekday', 'E');
	
	    // PARSING
	
	    addRegexToken('d',    match1to2);
	    addRegexToken('e',    match1to2);
	    addRegexToken('E',    match1to2);
	    addRegexToken('dd',   function (isStrict, locale) {
	        return locale.weekdaysMinRegex(isStrict);
	    });
	    addRegexToken('ddd',   function (isStrict, locale) {
	        return locale.weekdaysShortRegex(isStrict);
	    });
	    addRegexToken('dddd',   function (isStrict, locale) {
	        return locale.weekdaysRegex(isStrict);
	    });
	
	    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
	        var weekday = config._locale.weekdaysParse(input, token, config._strict);
	        // if we didn't get a weekday name, mark the date as invalid
	        if (weekday != null) {
	            week.d = weekday;
	        } else {
	            getParsingFlags(config).invalidWeekday = input;
	        }
	    });
	
	    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	        week[token] = toInt(input);
	    });
	
	    // HELPERS
	
	    function parseWeekday(input, locale) {
	        if (typeof input !== 'string') {
	            return input;
	        }
	
	        if (!isNaN(input)) {
	            return parseInt(input, 10);
	        }
	
	        input = locale.weekdaysParse(input);
	        if (typeof input === 'number') {
	            return input;
	        }
	
	        return null;
	    }
	
	    // LOCALES
	
	    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
	    function localeWeekdays (m, format) {
	        return isArray(this._weekdays) ? this._weekdays[m.day()] :
	            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
	    }
	
	    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
	    function localeWeekdaysShort (m) {
	        return this._weekdaysShort[m.day()];
	    }
	
	    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
	    function localeWeekdaysMin (m) {
	        return this._weekdaysMin[m.day()];
	    }
	
	    function day_of_week__handleStrictParse(weekdayName, format, strict) {
	        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._minWeekdaysParse = [];
	
	            for (i = 0; i < 7; ++i) {
	                mom = create_utc__createUTC([2000, 1]).day(i);
	                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
	                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
	                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
	            }
	        }
	
	        if (strict) {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }
	
	    function localeWeekdaysParse (weekdayName, format, strict) {
	        var i, mom, regex;
	
	        if (this._weekdaysParseExact) {
	            return day_of_week__handleStrictParse.call(this, weekdayName, format, strict);
	        }
	
	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._minWeekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._fullWeekdaysParse = [];
	        }
	
	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	
	            mom = create_utc__createUTC([2000, 1]).day(i);
	            if (strict && !this._fullWeekdaysParse[i]) {
	                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
	                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
	                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
	            }
	            if (!this._weekdaysParse[i]) {
	                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
	                return i;
	            }
	        }
	    }
	
	    // MOMENTS
	
	    function getSetDayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	        if (input != null) {
	            input = parseWeekday(input, this.localeData());
	            return this.add(input - day, 'd');
	        } else {
	            return day;
	        }
	    }
	
	    function getSetLocaleDayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	        return input == null ? weekday : this.add(input - weekday, 'd');
	    }
	
	    function getSetISODayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        // behaves the same as moment#day except
	        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	        // as a setter, sunday should belong to the previous week.
	        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
	    }
	
	    var defaultWeekdaysRegex = matchWord;
	    function weekdaysRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysStrictRegex;
	            } else {
	                return this._weekdaysRegex;
	            }
	        } else {
	            return this._weekdaysStrictRegex && isStrict ?
	                this._weekdaysStrictRegex : this._weekdaysRegex;
	        }
	    }
	
	    var defaultWeekdaysShortRegex = matchWord;
	    function weekdaysShortRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysShortStrictRegex;
	            } else {
	                return this._weekdaysShortRegex;
	            }
	        } else {
	            return this._weekdaysShortStrictRegex && isStrict ?
	                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
	        }
	    }
	
	    var defaultWeekdaysMinRegex = matchWord;
	    function weekdaysMinRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysMinStrictRegex;
	            } else {
	                return this._weekdaysMinRegex;
	            }
	        } else {
	            return this._weekdaysMinStrictRegex && isStrict ?
	                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
	        }
	    }
	
	
	    function computeWeekdaysParse () {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }
	
	        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
	            i, mom, minp, shortp, longp;
	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, 1]).day(i);
	            minp = this.weekdaysMin(mom, '');
	            shortp = this.weekdaysShort(mom, '');
	            longp = this.weekdays(mom, '');
	            minPieces.push(minp);
	            shortPieces.push(shortp);
	            longPieces.push(longp);
	            mixedPieces.push(minp);
	            mixedPieces.push(shortp);
	            mixedPieces.push(longp);
	        }
	        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
	        // will match the longer piece.
	        minPieces.sort(cmpLenRev);
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 7; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }
	
	        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._weekdaysShortRegex = this._weekdaysRegex;
	        this._weekdaysMinRegex = this._weekdaysRegex;
	
	        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
	    }
	
	    // FORMATTING
	
	    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');
	
	    // ALIASES
	
	    addUnitAlias('dayOfYear', 'DDD');
	
	    // PARSING
	
	    addRegexToken('DDD',  match1to3);
	    addRegexToken('DDDD', match3);
	    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	        config._dayOfYear = toInt(input);
	    });
	
	    // HELPERS
	
	    // MOMENTS
	
	    function getSetDayOfYear (input) {
	        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
	        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
	    }
	
	    // FORMATTING
	
	    function hFormat() {
	        return this.hours() % 12 || 12;
	    }
	
	    function kFormat() {
	        return this.hours() || 24;
	    }
	
	    addFormatToken('H', ['HH', 2], 0, 'hour');
	    addFormatToken('h', ['hh', 2], 0, hFormat);
	    addFormatToken('k', ['kk', 2], 0, kFormat);
	
	    addFormatToken('hmm', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
	    });
	
	    addFormatToken('hmmss', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2);
	    });
	
	    addFormatToken('Hmm', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2);
	    });
	
	    addFormatToken('Hmmss', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2);
	    });
	
	    function meridiem (token, lowercase) {
	        addFormatToken(token, 0, 0, function () {
	            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
	        });
	    }
	
	    meridiem('a', true);
	    meridiem('A', false);
	
	    // ALIASES
	
	    addUnitAlias('hour', 'h');
	
	    // PARSING
	
	    function matchMeridiem (isStrict, locale) {
	        return locale._meridiemParse;
	    }
	
	    addRegexToken('a',  matchMeridiem);
	    addRegexToken('A',  matchMeridiem);
	    addRegexToken('H',  match1to2);
	    addRegexToken('h',  match1to2);
	    addRegexToken('HH', match1to2, match2);
	    addRegexToken('hh', match1to2, match2);
	
	    addRegexToken('hmm', match3to4);
	    addRegexToken('hmmss', match5to6);
	    addRegexToken('Hmm', match3to4);
	    addRegexToken('Hmmss', match5to6);
	
	    addParseToken(['H', 'HH'], HOUR);
	    addParseToken(['a', 'A'], function (input, array, config) {
	        config._isPm = config._locale.isPM(input);
	        config._meridiem = input;
	    });
	    addParseToken(['h', 'hh'], function (input, array, config) {
	        array[HOUR] = toInt(input);
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmmss', function (input, array, config) {
	        var pos1 = input.length - 4;
	        var pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('Hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	    });
	    addParseToken('Hmmss', function (input, array, config) {
	        var pos1 = input.length - 4;
	        var pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	    });
	
	    // LOCALES
	
	    function localeIsPM (input) {
	        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	        // Using charAt should be more compatible.
	        return ((input + '').toLowerCase().charAt(0) === 'p');
	    }
	
	    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
	    function localeMeridiem (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'pm' : 'PM';
	        } else {
	            return isLower ? 'am' : 'AM';
	        }
	    }
	
	
	    // MOMENTS
	
	    // Setting the hour should keep the time, because the user explicitly
	    // specified which hour he wants. So trying to maintain the same hour (in
	    // a new timezone) makes sense. Adding/subtracting hours does not follow
	    // this rule.
	    var getSetHour = makeGetSet('Hours', true);
	
	    // FORMATTING
	
	    addFormatToken('m', ['mm', 2], 0, 'minute');
	
	    // ALIASES
	
	    addUnitAlias('minute', 'm');
	
	    // PARSING
	
	    addRegexToken('m',  match1to2);
	    addRegexToken('mm', match1to2, match2);
	    addParseToken(['m', 'mm'], MINUTE);
	
	    // MOMENTS
	
	    var getSetMinute = makeGetSet('Minutes', false);
	
	    // FORMATTING
	
	    addFormatToken('s', ['ss', 2], 0, 'second');
	
	    // ALIASES
	
	    addUnitAlias('second', 's');
	
	    // PARSING
	
	    addRegexToken('s',  match1to2);
	    addRegexToken('ss', match1to2, match2);
	    addParseToken(['s', 'ss'], SECOND);
	
	    // MOMENTS
	
	    var getSetSecond = makeGetSet('Seconds', false);
	
	    // FORMATTING
	
	    addFormatToken('S', 0, 0, function () {
	        return ~~(this.millisecond() / 100);
	    });
	
	    addFormatToken(0, ['SS', 2], 0, function () {
	        return ~~(this.millisecond() / 10);
	    });
	
	    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	    addFormatToken(0, ['SSSS', 4], 0, function () {
	        return this.millisecond() * 10;
	    });
	    addFormatToken(0, ['SSSSS', 5], 0, function () {
	        return this.millisecond() * 100;
	    });
	    addFormatToken(0, ['SSSSSS', 6], 0, function () {
	        return this.millisecond() * 1000;
	    });
	    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	        return this.millisecond() * 10000;
	    });
	    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	        return this.millisecond() * 100000;
	    });
	    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	        return this.millisecond() * 1000000;
	    });
	
	
	    // ALIASES
	
	    addUnitAlias('millisecond', 'ms');
	
	    // PARSING
	
	    addRegexToken('S',    match1to3, match1);
	    addRegexToken('SS',   match1to3, match2);
	    addRegexToken('SSS',  match1to3, match3);
	
	    var token;
	    for (token = 'SSSS'; token.length <= 9; token += 'S') {
	        addRegexToken(token, matchUnsigned);
	    }
	
	    function parseMs(input, array) {
	        array[MILLISECOND] = toInt(('0.' + input) * 1000);
	    }
	
	    for (token = 'S'; token.length <= 9; token += 'S') {
	        addParseToken(token, parseMs);
	    }
	    // MOMENTS
	
	    var getSetMillisecond = makeGetSet('Milliseconds', false);
	
	    // FORMATTING
	
	    addFormatToken('z',  0, 0, 'zoneAbbr');
	    addFormatToken('zz', 0, 0, 'zoneName');
	
	    // MOMENTS
	
	    function getZoneAbbr () {
	        return this._isUTC ? 'UTC' : '';
	    }
	
	    function getZoneName () {
	        return this._isUTC ? 'Coordinated Universal Time' : '';
	    }
	
	    var momentPrototype__proto = Moment.prototype;
	
	    momentPrototype__proto.add               = add_subtract__add;
	    momentPrototype__proto.calendar          = moment_calendar__calendar;
	    momentPrototype__proto.clone             = clone;
	    momentPrototype__proto.diff              = diff;
	    momentPrototype__proto.endOf             = endOf;
	    momentPrototype__proto.format            = format;
	    momentPrototype__proto.from              = from;
	    momentPrototype__proto.fromNow           = fromNow;
	    momentPrototype__proto.to                = to;
	    momentPrototype__proto.toNow             = toNow;
	    momentPrototype__proto.get               = getSet;
	    momentPrototype__proto.invalidAt         = invalidAt;
	    momentPrototype__proto.isAfter           = isAfter;
	    momentPrototype__proto.isBefore          = isBefore;
	    momentPrototype__proto.isBetween         = isBetween;
	    momentPrototype__proto.isSame            = isSame;
	    momentPrototype__proto.isSameOrAfter     = isSameOrAfter;
	    momentPrototype__proto.isSameOrBefore    = isSameOrBefore;
	    momentPrototype__proto.isValid           = moment_valid__isValid;
	    momentPrototype__proto.lang              = lang;
	    momentPrototype__proto.locale            = locale;
	    momentPrototype__proto.localeData        = localeData;
	    momentPrototype__proto.max               = prototypeMax;
	    momentPrototype__proto.min               = prototypeMin;
	    momentPrototype__proto.parsingFlags      = parsingFlags;
	    momentPrototype__proto.set               = getSet;
	    momentPrototype__proto.startOf           = startOf;
	    momentPrototype__proto.subtract          = add_subtract__subtract;
	    momentPrototype__proto.toArray           = toArray;
	    momentPrototype__proto.toObject          = toObject;
	    momentPrototype__proto.toDate            = toDate;
	    momentPrototype__proto.toISOString       = moment_format__toISOString;
	    momentPrototype__proto.toJSON            = toJSON;
	    momentPrototype__proto.toString          = toString;
	    momentPrototype__proto.unix              = unix;
	    momentPrototype__proto.valueOf           = to_type__valueOf;
	    momentPrototype__proto.creationData      = creationData;
	
	    // Year
	    momentPrototype__proto.year       = getSetYear;
	    momentPrototype__proto.isLeapYear = getIsLeapYear;
	
	    // Week Year
	    momentPrototype__proto.weekYear    = getSetWeekYear;
	    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;
	
	    // Quarter
	    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;
	
	    // Month
	    momentPrototype__proto.month       = getSetMonth;
	    momentPrototype__proto.daysInMonth = getDaysInMonth;
	
	    // Week
	    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;
	    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;
	    momentPrototype__proto.weeksInYear    = getWeeksInYear;
	    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;
	
	    // Day
	    momentPrototype__proto.date       = getSetDayOfMonth;
	    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;
	    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;
	    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
	    momentPrototype__proto.dayOfYear  = getSetDayOfYear;
	
	    // Hour
	    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;
	
	    // Minute
	    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;
	
	    // Second
	    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;
	
	    // Millisecond
	    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;
	
	    // Offset
	    momentPrototype__proto.utcOffset            = getSetOffset;
	    momentPrototype__proto.utc                  = setOffsetToUTC;
	    momentPrototype__proto.local                = setOffsetToLocal;
	    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;
	    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
	    momentPrototype__proto.isDST                = isDaylightSavingTime;
	    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;
	    momentPrototype__proto.isLocal              = isLocal;
	    momentPrototype__proto.isUtcOffset          = isUtcOffset;
	    momentPrototype__proto.isUtc                = isUtc;
	    momentPrototype__proto.isUTC                = isUtc;
	
	    // Timezone
	    momentPrototype__proto.zoneAbbr = getZoneAbbr;
	    momentPrototype__proto.zoneName = getZoneName;
	
	    // Deprecations
	    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
	    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
	    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
	    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);
	
	    var momentPrototype = momentPrototype__proto;
	
	    function moment__createUnix (input) {
	        return local__createLocal(input * 1000);
	    }
	
	    function moment__createInZone () {
	        return local__createLocal.apply(null, arguments).parseZone();
	    }
	
	    var defaultCalendar = {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    };
	
	    function locale_calendar__calendar (key, mom, now) {
	        var output = this._calendar[key];
	        return isFunction(output) ? output.call(mom, now) : output;
	    }
	
	    var defaultLongDateFormat = {
	        LTS  : 'h:mm:ss A',
	        LT   : 'h:mm A',
	        L    : 'MM/DD/YYYY',
	        LL   : 'MMMM D, YYYY',
	        LLL  : 'MMMM D, YYYY h:mm A',
	        LLLL : 'dddd, MMMM D, YYYY h:mm A'
	    };
	
	    function longDateFormat (key) {
	        var format = this._longDateFormat[key],
	            formatUpper = this._longDateFormat[key.toUpperCase()];
	
	        if (format || !formatUpper) {
	            return format;
	        }
	
	        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
	            return val.slice(1);
	        });
	
	        return this._longDateFormat[key];
	    }
	
	    var defaultInvalidDate = 'Invalid date';
	
	    function invalidDate () {
	        return this._invalidDate;
	    }
	
	    var defaultOrdinal = '%d';
	    var defaultOrdinalParse = /\d{1,2}/;
	
	    function ordinal (number) {
	        return this._ordinal.replace('%d', number);
	    }
	
	    function preParsePostFormat (string) {
	        return string;
	    }
	
	    var defaultRelativeTime = {
	        future : 'in %s',
	        past   : '%s ago',
	        s  : 'a few seconds',
	        m  : 'a minute',
	        mm : '%d minutes',
	        h  : 'an hour',
	        hh : '%d hours',
	        d  : 'a day',
	        dd : '%d days',
	        M  : 'a month',
	        MM : '%d months',
	        y  : 'a year',
	        yy : '%d years'
	    };
	
	    function relative__relativeTime (number, withoutSuffix, string, isFuture) {
	        var output = this._relativeTime[string];
	        return (isFunction(output)) ?
	            output(number, withoutSuffix, string, isFuture) :
	            output.replace(/%d/i, number);
	    }
	
	    function pastFuture (diff, output) {
	        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
	    }
	
	    var prototype__proto = Locale.prototype;
	
	    prototype__proto._calendar       = defaultCalendar;
	    prototype__proto.calendar        = locale_calendar__calendar;
	    prototype__proto._longDateFormat = defaultLongDateFormat;
	    prototype__proto.longDateFormat  = longDateFormat;
	    prototype__proto._invalidDate    = defaultInvalidDate;
	    prototype__proto.invalidDate     = invalidDate;
	    prototype__proto._ordinal        = defaultOrdinal;
	    prototype__proto.ordinal         = ordinal;
	    prototype__proto._ordinalParse   = defaultOrdinalParse;
	    prototype__proto.preparse        = preParsePostFormat;
	    prototype__proto.postformat      = preParsePostFormat;
	    prototype__proto._relativeTime   = defaultRelativeTime;
	    prototype__proto.relativeTime    = relative__relativeTime;
	    prototype__proto.pastFuture      = pastFuture;
	    prototype__proto.set             = locale_set__set;
	
	    // Month
	    prototype__proto.months            =        localeMonths;
	    prototype__proto._months           = defaultLocaleMonths;
	    prototype__proto.monthsShort       =        localeMonthsShort;
	    prototype__proto._monthsShort      = defaultLocaleMonthsShort;
	    prototype__proto.monthsParse       =        localeMonthsParse;
	    prototype__proto._monthsRegex      = defaultMonthsRegex;
	    prototype__proto.monthsRegex       = monthsRegex;
	    prototype__proto._monthsShortRegex = defaultMonthsShortRegex;
	    prototype__proto.monthsShortRegex  = monthsShortRegex;
	
	    // Week
	    prototype__proto.week = localeWeek;
	    prototype__proto._week = defaultLocaleWeek;
	    prototype__proto.firstDayOfYear = localeFirstDayOfYear;
	    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;
	
	    // Day of Week
	    prototype__proto.weekdays       =        localeWeekdays;
	    prototype__proto._weekdays      = defaultLocaleWeekdays;
	    prototype__proto.weekdaysMin    =        localeWeekdaysMin;
	    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;
	    prototype__proto.weekdaysShort  =        localeWeekdaysShort;
	    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;
	    prototype__proto.weekdaysParse  =        localeWeekdaysParse;
	
	    prototype__proto._weekdaysRegex      = defaultWeekdaysRegex;
	    prototype__proto.weekdaysRegex       =        weekdaysRegex;
	    prototype__proto._weekdaysShortRegex = defaultWeekdaysShortRegex;
	    prototype__proto.weekdaysShortRegex  =        weekdaysShortRegex;
	    prototype__proto._weekdaysMinRegex   = defaultWeekdaysMinRegex;
	    prototype__proto.weekdaysMinRegex    =        weekdaysMinRegex;
	
	    // Hours
	    prototype__proto.isPM = localeIsPM;
	    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;
	    prototype__proto.meridiem = localeMeridiem;
	
	    function lists__get (format, index, field, setter) {
	        var locale = locale_locales__getLocale();
	        var utc = create_utc__createUTC().set(setter, index);
	        return locale[field](utc, format);
	    }
	
	    function listMonthsImpl (format, index, field) {
	        if (typeof format === 'number') {
	            index = format;
	            format = undefined;
	        }
	
	        format = format || '';
	
	        if (index != null) {
	            return lists__get(format, index, field, 'month');
	        }
	
	        var i;
	        var out = [];
	        for (i = 0; i < 12; i++) {
	            out[i] = lists__get(format, i, field, 'month');
	        }
	        return out;
	    }
	
	    // ()
	    // (5)
	    // (fmt, 5)
	    // (fmt)
	    // (true)
	    // (true, 5)
	    // (true, fmt, 5)
	    // (true, fmt)
	    function listWeekdaysImpl (localeSorted, format, index, field) {
	        if (typeof localeSorted === 'boolean') {
	            if (typeof format === 'number') {
	                index = format;
	                format = undefined;
	            }
	
	            format = format || '';
	        } else {
	            format = localeSorted;
	            index = format;
	            localeSorted = false;
	
	            if (typeof format === 'number') {
	                index = format;
	                format = undefined;
	            }
	
	            format = format || '';
	        }
	
	        var locale = locale_locales__getLocale(),
	            shift = localeSorted ? locale._week.dow : 0;
	
	        if (index != null) {
	            return lists__get(format, (index + shift) % 7, field, 'day');
	        }
	
	        var i;
	        var out = [];
	        for (i = 0; i < 7; i++) {
	            out[i] = lists__get(format, (i + shift) % 7, field, 'day');
	        }
	        return out;
	    }
	
	    function lists__listMonths (format, index) {
	        return listMonthsImpl(format, index, 'months');
	    }
	
	    function lists__listMonthsShort (format, index) {
	        return listMonthsImpl(format, index, 'monthsShort');
	    }
	
	    function lists__listWeekdays (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
	    }
	
	    function lists__listWeekdaysShort (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
	    }
	
	    function lists__listWeekdaysMin (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
	    }
	
	    locale_locales__getSetGlobalLocale('en', {
	        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (toInt(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });
	
	    // Side effect imports
	    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);
	    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);
	
	    var mathAbs = Math.abs;
	
	    function duration_abs__abs () {
	        var data           = this._data;
	
	        this._milliseconds = mathAbs(this._milliseconds);
	        this._days         = mathAbs(this._days);
	        this._months       = mathAbs(this._months);
	
	        data.milliseconds  = mathAbs(data.milliseconds);
	        data.seconds       = mathAbs(data.seconds);
	        data.minutes       = mathAbs(data.minutes);
	        data.hours         = mathAbs(data.hours);
	        data.months        = mathAbs(data.months);
	        data.years         = mathAbs(data.years);
	
	        return this;
	    }
	
	    function duration_add_subtract__addSubtract (duration, input, value, direction) {
	        var other = create__createDuration(input, value);
	
	        duration._milliseconds += direction * other._milliseconds;
	        duration._days         += direction * other._days;
	        duration._months       += direction * other._months;
	
	        return duration._bubble();
	    }
	
	    // supports only 2.0-style add(1, 's') or add(duration)
	    function duration_add_subtract__add (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, 1);
	    }
	
	    // supports only 2.0-style subtract(1, 's') or subtract(duration)
	    function duration_add_subtract__subtract (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, -1);
	    }
	
	    function absCeil (number) {
	        if (number < 0) {
	            return Math.floor(number);
	        } else {
	            return Math.ceil(number);
	        }
	    }
	
	    function bubble () {
	        var milliseconds = this._milliseconds;
	        var days         = this._days;
	        var months       = this._months;
	        var data         = this._data;
	        var seconds, minutes, hours, years, monthsFromDays;
	
	        // if we have a mix of positive and negative values, bubble down first
	        // check: https://github.com/moment/moment/issues/2166
	        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
	                (milliseconds <= 0 && days <= 0 && months <= 0))) {
	            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	            days = 0;
	            months = 0;
	        }
	
	        // The following code bubbles up values, see the tests for
	        // examples of what that means.
	        data.milliseconds = milliseconds % 1000;
	
	        seconds           = absFloor(milliseconds / 1000);
	        data.seconds      = seconds % 60;
	
	        minutes           = absFloor(seconds / 60);
	        data.minutes      = minutes % 60;
	
	        hours             = absFloor(minutes / 60);
	        data.hours        = hours % 24;
	
	        days += absFloor(hours / 24);
	
	        // convert days to months
	        monthsFromDays = absFloor(daysToMonths(days));
	        months += monthsFromDays;
	        days -= absCeil(monthsToDays(monthsFromDays));
	
	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;
	
	        data.days   = days;
	        data.months = months;
	        data.years  = years;
	
	        return this;
	    }
	
	    function daysToMonths (days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        // 400 years have 12 months === 4800
	        return days * 4800 / 146097;
	    }
	
	    function monthsToDays (months) {
	        // the reverse of daysToMonths
	        return months * 146097 / 4800;
	    }
	
	    function as (units) {
	        var days;
	        var months;
	        var milliseconds = this._milliseconds;
	
	        units = normalizeUnits(units);
	
	        if (units === 'month' || units === 'year') {
	            days   = this._days   + milliseconds / 864e5;
	            months = this._months + daysToMonths(days);
	            return units === 'month' ? months : months / 12;
	        } else {
	            // handle milliseconds separately because of floating point math errors (issue #1867)
	            days = this._days + Math.round(monthsToDays(this._months));
	            switch (units) {
	                case 'week'   : return days / 7     + milliseconds / 6048e5;
	                case 'day'    : return days         + milliseconds / 864e5;
	                case 'hour'   : return days * 24    + milliseconds / 36e5;
	                case 'minute' : return days * 1440  + milliseconds / 6e4;
	                case 'second' : return days * 86400 + milliseconds / 1000;
	                // Math.floor prevents floating point math errors here
	                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
	                default: throw new Error('Unknown unit ' + units);
	            }
	        }
	    }
	
	    // TODO: Use this.as('ms')?
	    function duration_as__valueOf () {
	        return (
	            this._milliseconds +
	            this._days * 864e5 +
	            (this._months % 12) * 2592e6 +
	            toInt(this._months / 12) * 31536e6
	        );
	    }
	
	    function makeAs (alias) {
	        return function () {
	            return this.as(alias);
	        };
	    }
	
	    var asMilliseconds = makeAs('ms');
	    var asSeconds      = makeAs('s');
	    var asMinutes      = makeAs('m');
	    var asHours        = makeAs('h');
	    var asDays         = makeAs('d');
	    var asWeeks        = makeAs('w');
	    var asMonths       = makeAs('M');
	    var asYears        = makeAs('y');
	
	    function duration_get__get (units) {
	        units = normalizeUnits(units);
	        return this[units + 's']();
	    }
	
	    function makeGetter(name) {
	        return function () {
	            return this._data[name];
	        };
	    }
	
	    var milliseconds = makeGetter('milliseconds');
	    var seconds      = makeGetter('seconds');
	    var minutes      = makeGetter('minutes');
	    var hours        = makeGetter('hours');
	    var days         = makeGetter('days');
	    var months       = makeGetter('months');
	    var years        = makeGetter('years');
	
	    function weeks () {
	        return absFloor(this.days() / 7);
	    }
	
	    var round = Math.round;
	    var thresholds = {
	        s: 45,  // seconds to minute
	        m: 45,  // minutes to hour
	        h: 22,  // hours to day
	        d: 26,  // days to month
	        M: 11   // months to year
	    };
	
	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }
	
	    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {
	        var duration = create__createDuration(posNegDuration).abs();
	        var seconds  = round(duration.as('s'));
	        var minutes  = round(duration.as('m'));
	        var hours    = round(duration.as('h'));
	        var days     = round(duration.as('d'));
	        var months   = round(duration.as('M'));
	        var years    = round(duration.as('y'));
	
	        var a = seconds < thresholds.s && ['s', seconds]  ||
	                minutes <= 1           && ['m']           ||
	                minutes < thresholds.m && ['mm', minutes] ||
	                hours   <= 1           && ['h']           ||
	                hours   < thresholds.h && ['hh', hours]   ||
	                days    <= 1           && ['d']           ||
	                days    < thresholds.d && ['dd', days]    ||
	                months  <= 1           && ['M']           ||
	                months  < thresholds.M && ['MM', months]  ||
	                years   <= 1           && ['y']           || ['yy', years];
	
	        a[2] = withoutSuffix;
	        a[3] = +posNegDuration > 0;
	        a[4] = locale;
	        return substituteTimeAgo.apply(null, a);
	    }
	
	    // This function allows you to set a threshold for relative time strings
	    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {
	        if (thresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return thresholds[threshold];
	        }
	        thresholds[threshold] = limit;
	        return true;
	    }
	
	    function humanize (withSuffix) {
	        var locale = this.localeData();
	        var output = duration_humanize__relativeTime(this, !withSuffix, locale);
	
	        if (withSuffix) {
	            output = locale.pastFuture(+this, output);
	        }
	
	        return locale.postformat(output);
	    }
	
	    var iso_string__abs = Math.abs;
	
	    function iso_string__toISOString() {
	        // for ISO strings we do not use the normal bubbling rules:
	        //  * milliseconds bubble up until they become hours
	        //  * days do not bubble at all
	        //  * months bubble up until they become years
	        // This is because there is no context-free conversion between hours and days
	        // (think of clock changes)
	        // and also not between days and months (28-31 days per month)
	        var seconds = iso_string__abs(this._milliseconds) / 1000;
	        var days         = iso_string__abs(this._days);
	        var months       = iso_string__abs(this._months);
	        var minutes, hours, years;
	
	        // 3600 seconds -> 60 minutes -> 1 hour
	        minutes           = absFloor(seconds / 60);
	        hours             = absFloor(minutes / 60);
	        seconds %= 60;
	        minutes %= 60;
	
	        // 12 months -> 1 year
	        years  = absFloor(months / 12);
	        months %= 12;
	
	
	        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	        var Y = years;
	        var M = months;
	        var D = days;
	        var h = hours;
	        var m = minutes;
	        var s = seconds;
	        var total = this.asSeconds();
	
	        if (!total) {
	            // this is the same as C#'s (Noda) and python (isodate)...
	            // but not other JS (goog.date)
	            return 'P0D';
	        }
	
	        return (total < 0 ? '-' : '') +
	            'P' +
	            (Y ? Y + 'Y' : '') +
	            (M ? M + 'M' : '') +
	            (D ? D + 'D' : '') +
	            ((h || m || s) ? 'T' : '') +
	            (h ? h + 'H' : '') +
	            (m ? m + 'M' : '') +
	            (s ? s + 'S' : '');
	    }
	
	    var duration_prototype__proto = Duration.prototype;
	
	    duration_prototype__proto.abs            = duration_abs__abs;
	    duration_prototype__proto.add            = duration_add_subtract__add;
	    duration_prototype__proto.subtract       = duration_add_subtract__subtract;
	    duration_prototype__proto.as             = as;
	    duration_prototype__proto.asMilliseconds = asMilliseconds;
	    duration_prototype__proto.asSeconds      = asSeconds;
	    duration_prototype__proto.asMinutes      = asMinutes;
	    duration_prototype__proto.asHours        = asHours;
	    duration_prototype__proto.asDays         = asDays;
	    duration_prototype__proto.asWeeks        = asWeeks;
	    duration_prototype__proto.asMonths       = asMonths;
	    duration_prototype__proto.asYears        = asYears;
	    duration_prototype__proto.valueOf        = duration_as__valueOf;
	    duration_prototype__proto._bubble        = bubble;
	    duration_prototype__proto.get            = duration_get__get;
	    duration_prototype__proto.milliseconds   = milliseconds;
	    duration_prototype__proto.seconds        = seconds;
	    duration_prototype__proto.minutes        = minutes;
	    duration_prototype__proto.hours          = hours;
	    duration_prototype__proto.days           = days;
	    duration_prototype__proto.weeks          = weeks;
	    duration_prototype__proto.months         = months;
	    duration_prototype__proto.years          = years;
	    duration_prototype__proto.humanize       = humanize;
	    duration_prototype__proto.toISOString    = iso_string__toISOString;
	    duration_prototype__proto.toString       = iso_string__toISOString;
	    duration_prototype__proto.toJSON         = iso_string__toISOString;
	    duration_prototype__proto.locale         = locale;
	    duration_prototype__proto.localeData     = localeData;
	
	    // Deprecations
	    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);
	    duration_prototype__proto.lang = lang;
	
	    // Side effect imports
	
	    // FORMATTING
	
	    addFormatToken('X', 0, 0, 'unix');
	    addFormatToken('x', 0, 0, 'valueOf');
	
	    // PARSING
	
	    addRegexToken('x', matchSigned);
	    addRegexToken('X', matchTimestamp);
	    addParseToken('X', function (input, array, config) {
	        config._d = new Date(parseFloat(input, 10) * 1000);
	    });
	    addParseToken('x', function (input, array, config) {
	        config._d = new Date(toInt(input));
	    });
	
	    // Side effect imports
	
	
	    utils_hooks__hooks.version = '2.13.0';
	
	    setHookCallback(local__createLocal);
	
	    utils_hooks__hooks.fn                    = momentPrototype;
	    utils_hooks__hooks.min                   = min;
	    utils_hooks__hooks.max                   = max;
	    utils_hooks__hooks.now                   = now;
	    utils_hooks__hooks.utc                   = create_utc__createUTC;
	    utils_hooks__hooks.unix                  = moment__createUnix;
	    utils_hooks__hooks.months                = lists__listMonths;
	    utils_hooks__hooks.isDate                = isDate;
	    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;
	    utils_hooks__hooks.invalid               = valid__createInvalid;
	    utils_hooks__hooks.duration              = create__createDuration;
	    utils_hooks__hooks.isMoment              = isMoment;
	    utils_hooks__hooks.weekdays              = lists__listWeekdays;
	    utils_hooks__hooks.parseZone             = moment__createInZone;
	    utils_hooks__hooks.localeData            = locale_locales__getLocale;
	    utils_hooks__hooks.isDuration            = isDuration;
	    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;
	    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;
	    utils_hooks__hooks.defineLocale          = defineLocale;
	    utils_hooks__hooks.updateLocale          = updateLocale;
	    utils_hooks__hooks.locales               = locale_locales__listLocales;
	    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;
	    utils_hooks__hooks.normalizeUnits        = normalizeUnits;
	    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;
	    utils_hooks__hooks.prototype             = momentPrototype;
	
	    var _moment = utils_hooks__hooks;
	
	    return _moment;
	
	}));
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)(module)))

/***/ },
/* 16 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./af": 18,
		"./af.js": 18,
		"./ar": 19,
		"./ar-ma": 20,
		"./ar-ma.js": 20,
		"./ar-sa": 21,
		"./ar-sa.js": 21,
		"./ar-tn": 22,
		"./ar-tn.js": 22,
		"./ar.js": 19,
		"./az": 23,
		"./az.js": 23,
		"./be": 24,
		"./be.js": 24,
		"./bg": 25,
		"./bg.js": 25,
		"./bn": 26,
		"./bn.js": 26,
		"./bo": 27,
		"./bo.js": 27,
		"./br": 28,
		"./br.js": 28,
		"./bs": 29,
		"./bs.js": 29,
		"./ca": 30,
		"./ca.js": 30,
		"./cs": 31,
		"./cs.js": 31,
		"./cv": 32,
		"./cv.js": 32,
		"./cy": 33,
		"./cy.js": 33,
		"./da": 34,
		"./da.js": 34,
		"./de": 35,
		"./de-at": 36,
		"./de-at.js": 36,
		"./de.js": 35,
		"./dv": 37,
		"./dv.js": 37,
		"./el": 38,
		"./el.js": 38,
		"./en-au": 39,
		"./en-au.js": 39,
		"./en-ca": 40,
		"./en-ca.js": 40,
		"./en-gb": 41,
		"./en-gb.js": 41,
		"./en-ie": 42,
		"./en-ie.js": 42,
		"./en-nz": 43,
		"./en-nz.js": 43,
		"./eo": 44,
		"./eo.js": 44,
		"./es": 45,
		"./es.js": 45,
		"./et": 46,
		"./et.js": 46,
		"./eu": 47,
		"./eu.js": 47,
		"./fa": 48,
		"./fa.js": 48,
		"./fi": 49,
		"./fi.js": 49,
		"./fo": 50,
		"./fo.js": 50,
		"./fr": 51,
		"./fr-ca": 52,
		"./fr-ca.js": 52,
		"./fr-ch": 53,
		"./fr-ch.js": 53,
		"./fr.js": 51,
		"./fy": 54,
		"./fy.js": 54,
		"./gd": 55,
		"./gd.js": 55,
		"./gl": 56,
		"./gl.js": 56,
		"./he": 57,
		"./he.js": 57,
		"./hi": 58,
		"./hi.js": 58,
		"./hr": 59,
		"./hr.js": 59,
		"./hu": 60,
		"./hu.js": 60,
		"./hy-am": 61,
		"./hy-am.js": 61,
		"./id": 62,
		"./id.js": 62,
		"./is": 63,
		"./is.js": 63,
		"./it": 64,
		"./it.js": 64,
		"./ja": 65,
		"./ja.js": 65,
		"./jv": 66,
		"./jv.js": 66,
		"./ka": 67,
		"./ka.js": 67,
		"./kk": 68,
		"./kk.js": 68,
		"./km": 69,
		"./km.js": 69,
		"./ko": 70,
		"./ko.js": 70,
		"./ky": 71,
		"./ky.js": 71,
		"./lb": 72,
		"./lb.js": 72,
		"./lo": 73,
		"./lo.js": 73,
		"./lt": 74,
		"./lt.js": 74,
		"./lv": 75,
		"./lv.js": 75,
		"./me": 76,
		"./me.js": 76,
		"./mk": 77,
		"./mk.js": 77,
		"./ml": 78,
		"./ml.js": 78,
		"./mr": 79,
		"./mr.js": 79,
		"./ms": 80,
		"./ms-my": 81,
		"./ms-my.js": 81,
		"./ms.js": 80,
		"./my": 82,
		"./my.js": 82,
		"./nb": 83,
		"./nb.js": 83,
		"./ne": 84,
		"./ne.js": 84,
		"./nl": 85,
		"./nl.js": 85,
		"./nn": 86,
		"./nn.js": 86,
		"./pa-in": 87,
		"./pa-in.js": 87,
		"./pl": 88,
		"./pl.js": 88,
		"./pt": 89,
		"./pt-br": 90,
		"./pt-br.js": 90,
		"./pt.js": 89,
		"./ro": 91,
		"./ro.js": 91,
		"./ru": 92,
		"./ru.js": 92,
		"./se": 93,
		"./se.js": 93,
		"./si": 94,
		"./si.js": 94,
		"./sk": 95,
		"./sk.js": 95,
		"./sl": 96,
		"./sl.js": 96,
		"./sq": 97,
		"./sq.js": 97,
		"./sr": 98,
		"./sr-cyrl": 99,
		"./sr-cyrl.js": 99,
		"./sr.js": 98,
		"./ss": 100,
		"./ss.js": 100,
		"./sv": 101,
		"./sv.js": 101,
		"./sw": 102,
		"./sw.js": 102,
		"./ta": 103,
		"./ta.js": 103,
		"./te": 104,
		"./te.js": 104,
		"./th": 105,
		"./th.js": 105,
		"./tl-ph": 106,
		"./tl-ph.js": 106,
		"./tlh": 107,
		"./tlh.js": 107,
		"./tr": 108,
		"./tr.js": 108,
		"./tzl": 109,
		"./tzl.js": 109,
		"./tzm": 110,
		"./tzm-latn": 111,
		"./tzm-latn.js": 111,
		"./tzm.js": 110,
		"./uk": 112,
		"./uk.js": 112,
		"./uz": 113,
		"./uz.js": 113,
		"./vi": 114,
		"./vi.js": 114,
		"./x-pseudo": 115,
		"./x-pseudo.js": 115,
		"./zh-cn": 116,
		"./zh-cn.js": 116,
		"./zh-tw": 117,
		"./zh-tw.js": 117
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 17;


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : afrikaans (af)
	//! author : Werner Mollentze : https://github.com/wernerm
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var af = moment.defineLocale('af', {
	        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
	        meridiemParse: /vm|nm/i,
	        isPM : function (input) {
	            return /^nm$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'vm' : 'VM';
	            } else {
	                return isLower ? 'nm' : 'NM';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Vandag om] LT',
	            nextDay : '[Môre om] LT',
	            nextWeek : 'dddd [om] LT',
	            lastDay : '[Gister om] LT',
	            lastWeek : '[Laas] dddd [om] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'oor %s',
	            past : '%s gelede',
	            s : '\'n paar sekondes',
	            m : '\'n minuut',
	            mm : '%d minute',
	            h : '\'n uur',
	            hh : '%d ure',
	            d : '\'n dag',
	            dd : '%d dae',
	            M : '\'n maand',
	            MM : '%d maande',
	            y : '\'n jaar',
	            yy : '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
	        },
	        week : {
	            dow : 1, // Maandag is die eerste dag van die week.
	            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
	        }
	    });
	
	    return af;
	
	}));

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! Locale: Arabic (ar)
	//! Author: Abdel Said: https://github.com/abdelsaid
	//! Changes in months, weekdays: Ahmed Elkhatib
	//! Native plural forms: forabi https://github.com/forabi
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    }, pluralForm = function (n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    }, plurals = {
	        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    }, pluralize = function (u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    }, months = [
	        'كانون الثاني يناير',
	        'شباط فبراير',
	        'آذار مارس',
	        'نيسان أبريل',
	        'أيار مايو',
	        'حزيران يونيو',
	        'تموز يوليو',
	        'آب أغسطس',
	        'أيلول سبتمبر',
	        'تشرين الأول أكتوبر',
	        'تشرين الثاني نوفمبر',
	        'كانون الأول ديسمبر'
	    ];
	
	    var ar = moment.defineLocale('ar', {
	        months : months,
	        monthsShort : months,
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/\u200FM/\u200FYYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'بعد %s',
	            past : 'منذ %s',
	            s : pluralize('s'),
	            m : pluralize('m'),
	            mm : pluralize('m'),
	            h : pluralize('h'),
	            hh : pluralize('h'),
	            d : pluralize('d'),
	            dd : pluralize('d'),
	            M : pluralize('M'),
	            MM : pluralize('M'),
	            y : pluralize('y'),
	            yy : pluralize('y')
	        },
	        preparse: function (string) {
	            return string.replace(/\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ar;
	
	}));

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Moroccan Arabic (ar-ma)
	//! author : ElFadili Yassine : https://github.com/ElFadiliY
	//! author : Abdel Said : https://github.com/abdelsaid
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var ar_ma = moment.defineLocale('ar-ma', {
	        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ar_ma;
	
	}));

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic Saudi Arabia (ar-sa)
	//! author : Suhail Alkowaileet : https://github.com/xsoh
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    };
	
	    var ar_sa = moment.defineLocale('ar-sa', {
	        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        preparse: function (string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ar_sa;
	
	}));

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale  : Tunisian Arabic (ar-tn)
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var ar_tn = moment.defineLocale('ar-tn', {
	        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return ar_tn;
	
	}));

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : azerbaijani (az)
	//! author : topchiyev : https://github.com/topchiyev
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var suffixes = {
	        1: '-inci',
	        5: '-inci',
	        8: '-inci',
	        70: '-inci',
	        80: '-inci',
	        2: '-nci',
	        7: '-nci',
	        20: '-nci',
	        50: '-nci',
	        3: '-üncü',
	        4: '-üncü',
	        100: '-üncü',
	        6: '-ncı',
	        9: '-uncu',
	        10: '-uncu',
	        30: '-uncu',
	        60: '-ıncı',
	        90: '-ıncı'
	    };
	
	    var az = moment.defineLocale('az', {
	        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
	        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
	        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
	        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
	        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[sabah saat] LT',
	            nextWeek : '[gələn həftə] dddd [saat] LT',
	            lastDay : '[dünən] LT',
	            lastWeek : '[keçən həftə] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s əvvəl',
	            s : 'birneçə saniyyə',
	            m : 'bir dəqiqə',
	            mm : '%d dəqiqə',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir il',
	            yy : '%d il'
	        },
	        meridiemParse: /gecə|səhər|gündüz|axşam/,
	        isPM : function (input) {
	            return /^(gündüz|axşam)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'gecə';
	            } else if (hour < 12) {
	                return 'səhər';
	            } else if (hour < 17) {
	                return 'gündüz';
	            } else {
	                return 'axşam';
	            }
	        },
	        ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '-ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return az;
	
	}));

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : belarusian (be)
	//! author : Dmitry Demidov : https://github.com/demidov91
	//! author: Praleska: http://praleska.pro/
	//! Author : Menelion Elensúle : https://github.com/Oire
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
	            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
	            'dd': 'дзень_дні_дзён',
	            'MM': 'месяц_месяцы_месяцаў',
	            'yy': 'год_гады_гадоў'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвіліна' : 'хвіліну';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'гадзіна' : 'гадзіну';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	
	    var be = moment.defineLocale('be', {
	        months : {
	            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
	            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
	        },
	        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	        weekdays : {
	            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
	            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	            isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
	        },
	        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сёння ў] LT',
	            nextDay: '[Заўтра ў] LT',
	            lastDay: '[Учора ў] LT',
	            nextWeek: function () {
	                return '[У] dddd [ў] LT';
	            },
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return '[У мінулую] dddd [ў] LT';
	                case 1:
	                case 2:
	                case 4:
	                    return '[У мінулы] dddd [ў] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'праз %s',
	            past : '%s таму',
	            s : 'некалькі секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithPlural,
	            hh : relativeTimeWithPlural,
	            d : 'дзень',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночы|раніцы|дня|вечара/,
	        isPM : function (input) {
	            return /^(дня|вечара)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночы';
	            } else if (hour < 12) {
	                return 'раніцы';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечара';
	            }
	        },
	        ordinalParse: /\d{1,2}-(і|ы|га)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
	            case 'D':
	                return number + '-га';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return be;
	
	}));

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : bulgarian (bg)
	//! author : Krasen Borisov : https://github.com/kraz
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var bg = moment.defineLocale('bg', {
	        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Днес в] LT',
	            nextDay : '[Утре в] LT',
	            nextWeek : 'dddd [в] LT',
	            lastDay : '[Вчера в] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[В изминалата] dddd [в] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[В изминалия] dddd [в] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'след %s',
	            past : 'преди %s',
	            s : 'няколко секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дни',
	            M : 'месец',
	            MM : '%d месеца',
	            y : 'година',
	            yy : '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return bg;
	
	}));

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bengali (bn)
	//! author : Kaushik Gandhi : https://github.com/kaushikgandhi
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '১',
	        '2': '২',
	        '3': '৩',
	        '4': '৪',
	        '5': '৫',
	        '6': '৬',
	        '7': '৭',
	        '8': '৮',
	        '9': '৯',
	        '0': '০'
	    },
	    numberMap = {
	        '১': '1',
	        '২': '2',
	        '৩': '3',
	        '৪': '4',
	        '৫': '5',
	        '৬': '6',
	        '৭': '7',
	        '৮': '8',
	        '৯': '9',
	        '০': '0'
	    };
	
	    var bn = moment.defineLocale('bn', {
	        months : 'জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	        monthsShort : 'জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্'.split('_'),
	        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রবার_শনিবার'.split('_'),
	        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্র_শনি'.split('_'),
	        weekdaysMin : 'রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm সময়',
	            LTS : 'A h:mm:ss সময়',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm সময়',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
	        },
	        calendar : {
	            sameDay : '[আজ] LT',
	            nextDay : '[আগামীকাল] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[গতকাল] LT',
	            lastWeek : '[গত] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s পরে',
	            past : '%s আগে',
	            s : 'কয়েক সেকেন্ড',
	            m : 'এক মিনিট',
	            mm : '%d মিনিট',
	            h : 'এক ঘন্টা',
	            hh : '%d ঘন্টা',
	            d : 'এক দিন',
	            dd : '%d দিন',
	            M : 'এক মাস',
	            MM : '%d মাস',
	            y : 'এক বছর',
	            yy : '%d বছর'
	        },
	        preparse: function (string) {
	            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'রাত' && hour >= 4) ||
	                    (meridiem === 'দুপুর' && hour < 5) ||
	                    meridiem === 'বিকাল') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'রাত';
	            } else if (hour < 10) {
	                return 'সকাল';
	            } else if (hour < 17) {
	                return 'দুপুর';
	            } else if (hour < 20) {
	                return 'বিকাল';
	            } else {
	                return 'রাত';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return bn;
	
	}));

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : tibetan (bo)
	//! author : Thupten N. Chakrishar : https://github.com/vajradog
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '༡',
	        '2': '༢',
	        '3': '༣',
	        '4': '༤',
	        '5': '༥',
	        '6': '༦',
	        '7': '༧',
	        '8': '༨',
	        '9': '༩',
	        '0': '༠'
	    },
	    numberMap = {
	        '༡': '1',
	        '༢': '2',
	        '༣': '3',
	        '༤': '4',
	        '༥': '5',
	        '༦': '6',
	        '༧': '7',
	        '༨': '8',
	        '༩': '9',
	        '༠': '0'
	    };
	
	    var bo = moment.defineLocale('bo', {
	        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[དི་རིང] LT',
	            nextDay : '[སང་ཉིན] LT',
	            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
	            lastDay : '[ཁ་སང] LT',
	            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ལ་',
	            past : '%s སྔན་ལ',
	            s : 'ལམ་སང',
	            m : 'སྐར་མ་གཅིག',
	            mm : '%d སྐར་མ',
	            h : 'ཆུ་ཚོད་གཅིག',
	            hh : '%d ཆུ་ཚོད',
	            d : 'ཉིན་གཅིག',
	            dd : '%d ཉིན་',
	            M : 'ཟླ་བ་གཅིག',
	            MM : '%d ཟླ་བ',
	            y : 'ལོ་གཅིག',
	            yy : '%d ལོ'
	        },
	        preparse: function (string) {
	            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
	                    (meridiem === 'ཉིན་གུང' && hour < 5) ||
	                    meridiem === 'དགོང་དག') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'མཚན་མོ';
	            } else if (hour < 10) {
	                return 'ཞོགས་ཀས';
	            } else if (hour < 17) {
	                return 'ཉིན་གུང';
	            } else if (hour < 20) {
	                return 'དགོང་དག';
	            } else {
	                return 'མཚན་མོ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return bo;
	
	}));

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : breton (br)
	//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function relativeTimeWithMutation(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'munutenn',
	            'MM': 'miz',
	            'dd': 'devezh'
	        };
	        return number + ' ' + mutation(format[key], number);
	    }
	    function specialMutationForYears(number) {
	        switch (lastNumber(number)) {
	        case 1:
	        case 3:
	        case 4:
	        case 5:
	        case 9:
	            return number + ' bloaz';
	        default:
	            return number + ' vloaz';
	        }
	    }
	    function lastNumber(number) {
	        if (number > 9) {
	            return lastNumber(number % 10);
	        }
	        return number;
	    }
	    function mutation(text, number) {
	        if (number === 2) {
	            return softMutation(text);
	        }
	        return text;
	    }
	    function softMutation(text) {
	        var mutationTable = {
	            'm': 'v',
	            'b': 'v',
	            'd': 'z'
	        };
	        if (mutationTable[text.charAt(0)] === undefined) {
	            return text;
	        }
	        return mutationTable[text.charAt(0)] + text.substring(1);
	    }
	
	    var br = moment.defineLocale('br', {
	        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h[e]mm A',
	            LTS : 'h[e]mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D [a viz] MMMM YYYY',
	            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
	            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
	        },
	        calendar : {
	            sameDay : '[Hiziv da] LT',
	            nextDay : '[Warc\'hoazh da] LT',
	            nextWeek : 'dddd [da] LT',
	            lastDay : '[Dec\'h da] LT',
	            lastWeek : 'dddd [paset da] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'a-benn %s',
	            past : '%s \'zo',
	            s : 'un nebeud segondennoù',
	            m : 'ur vunutenn',
	            mm : relativeTimeWithMutation,
	            h : 'un eur',
	            hh : '%d eur',
	            d : 'un devezh',
	            dd : relativeTimeWithMutation,
	            M : 'ur miz',
	            MM : relativeTimeWithMutation,
	            y : 'ur bloaz',
	            yy : specialMutationForYears
	        },
	        ordinalParse: /\d{1,2}(añ|vet)/,
	        ordinal : function (number) {
	            var output = (number === 1) ? 'añ' : 'vet';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return br;
	
	}));

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : bosnian (bs)
	//! author : Nedim Cholich : https://github.com/frontyard
	//! based on (hr) translation by Bojan Marković
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }
	
	    var bs = moment.defineLocale('bs', {
	        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return bs;
	
	}));

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : catalan (ca)
	//! author : Juan G. Hurtado : https://github.com/juanghurtado
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var ca = moment.defineLocale('ca', {
	        months : 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	        monthsShort : 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	        weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextDay : function () {
	                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastDay : function () {
	                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'fa %s',
	            s : 'uns segons',
	            m : 'un minut',
	            mm : '%d minuts',
	            h : 'una hora',
	            hh : '%d hores',
	            d : 'un dia',
	            dd : '%d dies',
	            M : 'un mes',
	            MM : '%d mesos',
	            y : 'un any',
	            yy : '%d anys'
	        },
	        ordinalParse: /\d{1,2}(r|n|t|è|a)/,
	        ordinal : function (number, period) {
	            var output = (number === 1) ? 'r' :
	                (number === 2) ? 'n' :
	                (number === 3) ? 'r' :
	                (number === 4) ? 't' : 'è';
	            if (period === 'w' || period === 'W') {
	                output = 'a';
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return ca;
	
	}));

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : czech (cs)
	//! author : petrbela : https://github.com/petrbela
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
	        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minuty' : 'minut');
	            } else {
	                return result + 'minutami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodin');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'den' : 'dnem';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dny' : 'dní');
	            } else {
	                return result + 'dny';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'měsíce' : 'měsíců');
	            } else {
	                return result + 'měsíci';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'let');
	            } else {
	                return result + 'lety';
	            }
	            break;
	        }
	    }
	
	    var cs = moment.defineLocale('cs', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParse : (function (months, monthsShort) {
	            var i, _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort)),
	        shortMonthsParse : (function (monthsShort) {
	            var i, _shortMonthsParse = [];
	            for (i = 0; i < 12; i++) {
	                _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
	            }
	            return _shortMonthsParse;
	        }(monthsShort)),
	        longMonthsParse : (function (months) {
	            var i, _longMonthsParse = [];
	            for (i = 0; i < 12; i++) {
	                _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
	            }
	            return _longMonthsParse;
	        }(months)),
	        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
	        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
	        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes v] LT',
	            nextDay: '[zítra v] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v neděli v] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [v] LT';
	                case 3:
	                    return '[ve středu v] LT';
	                case 4:
	                    return '[ve čtvrtek v] LT';
	                case 5:
	                    return '[v pátek v] LT';
	                case 6:
	                    return '[v sobotu v] LT';
	                }
	            },
	            lastDay: '[včera v] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulou neděli v] LT';
	                case 1:
	                case 2:
	                    return '[minulé] dddd [v] LT';
	                case 3:
	                    return '[minulou středu v] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [v] LT';
	                case 6:
	                    return '[minulou sobotu v] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'před %s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse : /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return cs;
	
	}));

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : chuvash (cv)
	//! author : Anatoly Mironov : https://github.com/mirontoli
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var cv = moment.defineLocale('cv', {
	        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
	        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
	        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
	        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
	        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
	            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
	            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
	        },
	        calendar : {
	            sameDay: '[Паян] LT [сехетре]',
	            nextDay: '[Ыран] LT [сехетре]',
	            lastDay: '[Ӗнер] LT [сехетре]',
	            nextWeek: '[Ҫитес] dddd LT [сехетре]',
	            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (output) {
	                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
	                return output + affix;
	            },
	            past : '%s каялла',
	            s : 'пӗр-ик ҫеккунт',
	            m : 'пӗр минут',
	            mm : '%d минут',
	            h : 'пӗр сехет',
	            hh : '%d сехет',
	            d : 'пӗр кун',
	            dd : '%d кун',
	            M : 'пӗр уйӑх',
	            MM : '%d уйӑх',
	            y : 'пӗр ҫул',
	            yy : '%d ҫул'
	        },
	        ordinalParse: /\d{1,2}-мӗш/,
	        ordinal : '%d-мӗш',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return cv;
	
	}));

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Welsh (cy)
	//! author : Robert Allen
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var cy = moment.defineLocale('cy', {
	        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
	        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
	        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
	        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
	        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
	        weekdaysParseExact : true,
	        // time formats are the same as en-gb
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Heddiw am] LT',
	            nextDay: '[Yfory am] LT',
	            nextWeek: 'dddd [am] LT',
	            lastDay: '[Ddoe am] LT',
	            lastWeek: 'dddd [diwethaf am] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'mewn %s',
	            past: '%s yn ôl',
	            s: 'ychydig eiliadau',
	            m: 'munud',
	            mm: '%d munud',
	            h: 'awr',
	            hh: '%d awr',
	            d: 'diwrnod',
	            dd: '%d diwrnod',
	            M: 'mis',
	            MM: '%d mis',
	            y: 'blwyddyn',
	            yy: '%d flynedd'
	        },
	        ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
	        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	        ordinal: function (number) {
	            var b = number,
	                output = '',
	                lookup = [
	                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	                ];
	            if (b > 20) {
	                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                    output = 'fed'; // not 30ain, 70ain or 90ain
	                } else {
	                    output = 'ain';
	                }
	            } else if (b > 0) {
	                output = lookup[b];
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return cy;
	
	}));

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : danish (da)
	//! author : Ulrik Nielsen : https://github.com/mrbase
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var da = moment.defineLocale('da', {
	        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd [d.] D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[I dag kl.] LT',
	            nextDay : '[I morgen kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[I går kl.] LT',
	            lastWeek : '[sidste] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'få sekunder',
	            m : 'et minut',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dage',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'et år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return da;
	
	}));

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : german (de)
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Mikolaj Dadela : https://github.com/mik01aj
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	
	    var de = moment.defineLocale('de', {
	        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return de;
	
	}));

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : austrian german (de-at)
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Martin Groller : https://github.com/MadMG
	//! author : Mikolaj Dadela : https://github.com/mik01aj
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	
	    var de_at = moment.defineLocale('de-at', {
	        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return de_at;
	
	}));

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : dhivehi (dv)
	//! author : Jawish Hameed : https://github.com/jawish
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var months = [
	        'ޖެނުއަރީ',
	        'ފެބްރުއަރީ',
	        'މާރިޗު',
	        'އޭޕްރީލު',
	        'މޭ',
	        'ޖޫން',
	        'ޖުލައި',
	        'އޯގަސްޓު',
	        'ސެޕްޓެމްބަރު',
	        'އޮކްޓޯބަރު',
	        'ނޮވެމްބަރު',
	        'ޑިސެމްބަރު'
	    ], weekdays = [
	        'އާދިއްތަ',
	        'ހޯމަ',
	        'އަންގާރަ',
	        'ބުދަ',
	        'ބުރާސްފަތި',
	        'ހުކުރު',
	        'ހޮނިހިރު'
	    ];
	
	    var dv = moment.defineLocale('dv', {
	        months : months,
	        monthsShort : months,
	        weekdays : weekdays,
	        weekdaysShort : weekdays,
	        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
	        longDateFormat : {
	
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/M/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /މކ|މފ/,
	        isPM : function (input) {
	            return 'މފ' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'މކ';
	            } else {
	                return 'މފ';
	            }
	        },
	        calendar : {
	            sameDay : '[މިއަދު] LT',
	            nextDay : '[މާދަމާ] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[އިއްޔެ] LT',
	            lastWeek : '[ފާއިތުވި] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ތެރޭގައި %s',
	            past : 'ކުރިން %s',
	            s : 'ސިކުންތުކޮޅެއް',
	            m : 'މިނިޓެއް',
	            mm : 'މިނިޓު %d',
	            h : 'ގަޑިއިރެއް',
	            hh : 'ގަޑިއިރު %d',
	            d : 'ދުވަހެއް',
	            dd : 'ދުވަސް %d',
	            M : 'މަހެއް',
	            MM : 'މަސް %d',
	            y : 'އަހަރެއް',
	            yy : 'އަހަރު %d'
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/,/g, '،');
	        },
	        week : {
	            dow : 7,  // Sunday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return dv;
	
	}));

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : modern greek (el)
	//! author : Aggelos Karalias : https://github.com/mehiel
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	    function isFunction(input) {
	        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	    }
	
	
	    var el = moment.defineLocale('el', {
	        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
	        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
	        months : function (momentToFormat, format) {
	            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
	                return this._monthsGenitiveEl[momentToFormat.month()];
	            } else {
	                return this._monthsNominativeEl[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
	        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
	        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
	        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'μμ' : 'ΜΜ';
	            } else {
	                return isLower ? 'πμ' : 'ΠΜ';
	            }
	        },
	        isPM : function (input) {
	            return ((input + '').toLowerCase()[0] === 'μ');
	        },
	        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendarEl : {
	            sameDay : '[Σήμερα {}] LT',
	            nextDay : '[Αύριο {}] LT',
	            nextWeek : 'dddd [{}] LT',
	            lastDay : '[Χθες {}] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 6:
	                        return '[το προηγούμενο] dddd [{}] LT';
	                    default:
	                        return '[την προηγούμενη] dddd [{}] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        calendar : function (key, mom) {
	            var output = this._calendarEl[key],
	                hours = mom && mom.hours();
	            if (isFunction(output)) {
	                output = output.apply(mom);
	            }
	            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
	        },
	        relativeTime : {
	            future : 'σε %s',
	            past : '%s πριν',
	            s : 'λίγα δευτερόλεπτα',
	            m : 'ένα λεπτό',
	            mm : '%d λεπτά',
	            h : 'μία ώρα',
	            hh : '%d ώρες',
	            d : 'μία μέρα',
	            dd : '%d μέρες',
	            M : 'ένας μήνας',
	            MM : '%d μήνες',
	            y : 'ένας χρόνος',
	            yy : '%d χρόνια'
	        },
	        ordinalParse: /\d{1,2}η/,
	        ordinal: '%dη',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4st is the first week of the year.
	        }
	    });
	
	    return el;
	
	}));

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : australian english (en-au)
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var en_au = moment.defineLocale('en-au', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return en_au;
	
	}));

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : canadian english (en-ca)
	//! author : Jonathan Abourbih : https://github.com/jonbca
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var en_ca = moment.defineLocale('en-ca', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'YYYY-MM-DD',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY h:mm A',
	            LLLL : 'dddd, MMMM D, YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });
	
	    return en_ca;
	
	}));

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : great britain english (en-gb)
	//! author : Chris Gedrim : https://github.com/chrisgedrim
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var en_gb = moment.defineLocale('en-gb', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return en_gb;
	
	}));

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Irish english (en-ie)
	//! author : Chris Cartlidge : https://github.com/chriscartlidge
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var en_ie = moment.defineLocale('en-ie', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return en_ie;
	
	}));

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : New Zealand english (en-nz)
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var en_nz = moment.defineLocale('en-nz', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return en_nz;
	
	}));

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : esperanto (eo)
	//! author : Colin Dean : https://github.com/colindean
	//! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
	//!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var eo = moment.defineLocale('eo', {
	        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
	        weekdays : 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),
	        weekdaysShort : 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D[-an de] MMMM, YYYY',
	            LLL : 'D[-an de] MMMM, YYYY HH:mm',
	            LLLL : 'dddd, [la] D[-an de] MMMM, YYYY HH:mm'
	        },
	        meridiemParse: /[ap]\.t\.m/i,
	        isPM: function (input) {
	            return input.charAt(0).toLowerCase() === 'p';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'p.t.m.' : 'P.T.M.';
	            } else {
	                return isLower ? 'a.t.m.' : 'A.T.M.';
	            }
	        },
	        calendar : {
	            sameDay : '[Hodiaŭ je] LT',
	            nextDay : '[Morgaŭ je] LT',
	            nextWeek : 'dddd [je] LT',
	            lastDay : '[Hieraŭ je] LT',
	            lastWeek : '[pasinta] dddd [je] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'je %s',
	            past : 'antaŭ %s',
	            s : 'sekundoj',
	            m : 'minuto',
	            mm : '%d minutoj',
	            h : 'horo',
	            hh : '%d horoj',
	            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
	            dd : '%d tagoj',
	            M : 'monato',
	            MM : '%d monatoj',
	            y : 'jaro',
	            yy : '%d jaroj'
	        },
	        ordinalParse: /\d{1,2}a/,
	        ordinal : '%da',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return eo;
	
	}));

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : spanish (es)
	//! author : Julio Napurí : https://github.com/julionc
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
	        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
	
	    var es = moment.defineLocale('es', {
	        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        monthsParseExact : true,
	        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY H:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'hace %s',
	            s : 'unos segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'una hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un año',
	            yy : '%d años'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return es;
	
	}));

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : estonian (et)
	//! author : Henry Kehlmann : https://github.com/madhenry
	//! improvements : Illimar Tambek : https://github.com/ragulka
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	            'm' : ['ühe minuti', 'üks minut'],
	            'mm': [number + ' minuti', number + ' minutit'],
	            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
	            'hh': [number + ' tunni', number + ' tundi'],
	            'd' : ['ühe päeva', 'üks päev'],
	            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
	            'MM': [number + ' kuu', number + ' kuud'],
	            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
	            'yy': [number + ' aasta', number + ' aastat']
	        };
	        if (withoutSuffix) {
	            return format[key][2] ? format[key][2] : format[key][1];
	        }
	        return isFuture ? format[key][0] : format[key][1];
	    }
	
	    var et = moment.defineLocale('et', {
	        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
	        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
	        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
	        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
	        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
	        longDateFormat : {
	            LT   : 'H:mm',
	            LTS : 'H:mm:ss',
	            L    : 'DD.MM.YYYY',
	            LL   : 'D. MMMM YYYY',
	            LLL  : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[Täna,] LT',
	            nextDay  : '[Homme,] LT',
	            nextWeek : '[Järgmine] dddd LT',
	            lastDay  : '[Eile,] LT',
	            lastWeek : '[Eelmine] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s pärast',
	            past   : '%s tagasi',
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : '%d päeva',
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return et;
	
	}));

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : euskara (eu)
	//! author : Eneko Illarramendi : https://github.com/eillarra
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var eu = moment.defineLocale('eu', {
	        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
	        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY[ko] MMMM[ren] D[a]',
	            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
	            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
	            l : 'YYYY-M-D',
	            ll : 'YYYY[ko] MMM D[a]',
	            lll : 'YYYY[ko] MMM D[a] HH:mm',
	            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
	        },
	        calendar : {
	            sameDay : '[gaur] LT[etan]',
	            nextDay : '[bihar] LT[etan]',
	            nextWeek : 'dddd LT[etan]',
	            lastDay : '[atzo] LT[etan]',
	            lastWeek : '[aurreko] dddd LT[etan]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s barru',
	            past : 'duela %s',
	            s : 'segundo batzuk',
	            m : 'minutu bat',
	            mm : '%d minutu',
	            h : 'ordu bat',
	            hh : '%d ordu',
	            d : 'egun bat',
	            dd : '%d egun',
	            M : 'hilabete bat',
	            MM : '%d hilabete',
	            y : 'urte bat',
	            yy : '%d urte'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return eu;
	
	}));

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Persian (fa)
	//! author : Ebrahim Byagowi : https://github.com/ebraminio
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '۱',
	        '2': '۲',
	        '3': '۳',
	        '4': '۴',
	        '5': '۵',
	        '6': '۶',
	        '7': '۷',
	        '8': '۸',
	        '9': '۹',
	        '0': '۰'
	    }, numberMap = {
	        '۱': '1',
	        '۲': '2',
	        '۳': '3',
	        '۴': '4',
	        '۵': '5',
	        '۶': '6',
	        '۷': '7',
	        '۸': '8',
	        '۹': '9',
	        '۰': '0'
	    };
	
	    var fa = moment.defineLocale('fa', {
	        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /قبل از ظهر|بعد از ظهر/,
	        isPM: function (input) {
	            return /بعد از ظهر/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'قبل از ظهر';
	            } else {
	                return 'بعد از ظهر';
	            }
	        },
	        calendar : {
	            sameDay : '[امروز ساعت] LT',
	            nextDay : '[فردا ساعت] LT',
	            nextWeek : 'dddd [ساعت] LT',
	            lastDay : '[دیروز ساعت] LT',
	            lastWeek : 'dddd [پیش] [ساعت] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'در %s',
	            past : '%s پیش',
	            s : 'چندین ثانیه',
	            m : 'یک دقیقه',
	            mm : '%d دقیقه',
	            h : 'یک ساعت',
	            hh : '%d ساعت',
	            d : 'یک روز',
	            dd : '%d روز',
	            M : 'یک ماه',
	            MM : '%d ماه',
	            y : 'یک سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/[۰-۹]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        ordinalParse: /\d{1,2}م/,
	        ordinal : '%dم',
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return fa;
	
	}));

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : finnish (fi)
	//! author : Tarmo Aidantausta : https://github.com/bleadof
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
	        numbersFuture = [
	            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
	            numbersPast[7], numbersPast[8], numbersPast[9]
	        ];
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = '';
	        switch (key) {
	        case 's':
	            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	        case 'm':
	            return isFuture ? 'minuutin' : 'minuutti';
	        case 'mm':
	            result = isFuture ? 'minuutin' : 'minuuttia';
	            break;
	        case 'h':
	            return isFuture ? 'tunnin' : 'tunti';
	        case 'hh':
	            result = isFuture ? 'tunnin' : 'tuntia';
	            break;
	        case 'd':
	            return isFuture ? 'päivän' : 'päivä';
	        case 'dd':
	            result = isFuture ? 'päivän' : 'päivää';
	            break;
	        case 'M':
	            return isFuture ? 'kuukauden' : 'kuukausi';
	        case 'MM':
	            result = isFuture ? 'kuukauden' : 'kuukautta';
	            break;
	        case 'y':
	            return isFuture ? 'vuoden' : 'vuosi';
	        case 'yy':
	            result = isFuture ? 'vuoden' : 'vuotta';
	            break;
	        }
	        result = verbalNumber(number, isFuture) + ' ' + result;
	        return result;
	    }
	    function verbalNumber(number, isFuture) {
	        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
	    }
	
	    var fi = moment.defineLocale('fi', {
	        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
	        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
	        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
	        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'Do MMMM[ta] YYYY',
	            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
	            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
	            l : 'D.M.YYYY',
	            ll : 'Do MMM YYYY',
	            lll : 'Do MMM YYYY, [klo] HH.mm',
	            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
	        },
	        calendar : {
	            sameDay : '[tänään] [klo] LT',
	            nextDay : '[huomenna] [klo] LT',
	            nextWeek : 'dddd [klo] LT',
	            lastDay : '[eilen] [klo] LT',
	            lastWeek : '[viime] dddd[na] [klo] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s päästä',
	            past : '%s sitten',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fi;
	
	}));

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : faroese (fo)
	//! author : Ragnar Johannesen : https://github.com/ragnar123
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var fo = moment.defineLocale('fo', {
	        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
	        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
	        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D. MMMM, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Í dag kl.] LT',
	            nextDay : '[Í morgin kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[Í gjár kl.] LT',
	            lastWeek : '[síðstu] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'um %s',
	            past : '%s síðani',
	            s : 'fá sekund',
	            m : 'ein minutt',
	            mm : '%d minuttir',
	            h : 'ein tími',
	            hh : '%d tímar',
	            d : 'ein dagur',
	            dd : '%d dagar',
	            M : 'ein mánaði',
	            MM : '%d mánaðir',
	            y : 'eitt ár',
	            yy : '%d ár'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fo;
	
	}));

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : french (fr)
	//! author : John Fischer : https://github.com/jfroffice
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var fr = moment.defineLocale('fr', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : '');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fr;
	
	}));

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : canadian french (fr-ca)
	//! author : Jonathan Abourbih : https://github.com/jonbca
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var fr_ca = moment.defineLocale('fr-ca', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : 'e');
	        }
	    });
	
	    return fr_ca;
	
	}));

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : swiss french (fr)
	//! author : Gaspard Bucher : https://github.com/gaspard
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var fr_ch = moment.defineLocale('fr-ch', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : 'e');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fr_ch;
	
	}));

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : frisian (fy)
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');
	
	    var fy = moment.defineLocale('fy', {
	        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        monthsParseExact : true,
	        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
	        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
	        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[hjoed om] LT',
	            nextDay: '[moarn om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[juster om] LT',
	            lastWeek: '[ôfrûne] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'oer %s',
	            past : '%s lyn',
	            s : 'in pear sekonden',
	            m : 'ien minút',
	            mm : '%d minuten',
	            h : 'ien oere',
	            hh : '%d oeren',
	            d : 'ien dei',
	            dd : '%d dagen',
	            M : 'ien moanne',
	            MM : '%d moannen',
	            y : 'ien jier',
	            yy : '%d jierren'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fy;
	
	}));

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : great britain scottish gealic (gd)
	//! author : Jon Ashdown : https://github.com/jonashdown
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var months = [
	        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
	    ];
	
	    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];
	
	    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];
	
	    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];
	
	    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];
	
	    var gd = moment.defineLocale('gd', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParseExact : true,
	        weekdays : weekdays,
	        weekdaysShort : weekdaysShort,
	        weekdaysMin : weekdaysMin,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[An-diugh aig] LT',
	            nextDay : '[A-màireach aig] LT',
	            nextWeek : 'dddd [aig] LT',
	            lastDay : '[An-dè aig] LT',
	            lastWeek : 'dddd [seo chaidh] [aig] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ann an %s',
	            past : 'bho chionn %s',
	            s : 'beagan diogan',
	            m : 'mionaid',
	            mm : '%d mionaidean',
	            h : 'uair',
	            hh : '%d uairean',
	            d : 'latha',
	            dd : '%d latha',
	            M : 'mìos',
	            MM : '%d mìosan',
	            y : 'bliadhna',
	            yy : '%d bliadhna'
	        },
	        ordinalParse : /\d{1,2}(d|na|mh)/,
	        ordinal : function (number) {
	            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return gd;
	
	}));

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : galician (gl)
	//! author : Juan G. Hurtado : https://github.com/juanghurtado
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var gl = moment.defineLocale('gl', {
	        months : 'Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro'.split('_'),
	        monthsShort : 'Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado'.split('_'),
	        weekdaysShort : 'Dom._Lun._Mar._Mér._Xov._Ven._Sáb.'.split('_'),
	        weekdaysMin : 'Do_Lu_Ma_Mé_Xo_Ve_Sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            lastDay : function () {
	                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
	            },
	            lastWeek : function () {
	                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (str) {
	                if (str === 'uns segundos') {
	                    return 'nuns segundos';
	                }
	                return 'en ' + str;
	            },
	            past : 'hai %s',
	            s : 'uns segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'unha hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un ano',
	            yy : '%d anos'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return gl;
	
	}));

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Hebrew (he)
	//! author : Tomer Cohen : https://github.com/tomer
	//! author : Moshe Simantov : https://github.com/DevelopmentIL
	//! author : Tal Ater : https://github.com/TalAter
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var he = moment.defineLocale('he', {
	        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
	        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
	        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
	        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
	        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [ב]MMMM YYYY',
	            LLL : 'D [ב]MMMM YYYY HH:mm',
	            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
	            l : 'D/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[היום ב־]LT',
	            nextDay : '[מחר ב־]LT',
	            nextWeek : 'dddd [בשעה] LT',
	            lastDay : '[אתמול ב־]LT',
	            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'בעוד %s',
	            past : 'לפני %s',
	            s : 'מספר שניות',
	            m : 'דקה',
	            mm : '%d דקות',
	            h : 'שעה',
	            hh : function (number) {
	                if (number === 2) {
	                    return 'שעתיים';
	                }
	                return number + ' שעות';
	            },
	            d : 'יום',
	            dd : function (number) {
	                if (number === 2) {
	                    return 'יומיים';
	                }
	                return number + ' ימים';
	            },
	            M : 'חודש',
	            MM : function (number) {
	                if (number === 2) {
	                    return 'חודשיים';
	                }
	                return number + ' חודשים';
	            },
	            y : 'שנה',
	            yy : function (number) {
	                if (number === 2) {
	                    return 'שנתיים';
	                } else if (number % 10 === 0 && number !== 10) {
	                    return number + ' שנה';
	                }
	                return number + ' שנים';
	            }
	        },
	        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
	        isPM : function (input) {
	            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 5) {
	                return 'לפנות בוקר';
	            } else if (hour < 10) {
	                return 'בבוקר';
	            } else if (hour < 12) {
	                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
	            } else if (hour < 18) {
	                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
	            } else {
	                return 'בערב';
	            }
	        }
	    });
	
	    return he;
	
	}));

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hindi (hi)
	//! author : Mayank Singhal : https://github.com/mayanksinghal
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };
	
	    var hi = moment.defineLocale('hi', {
	        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
	        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm बजे',
	            LTS : 'A h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[कल] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[कल] LT',
	            lastWeek : '[पिछले] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s में',
	            past : '%s पहले',
	            s : 'कुछ ही क्षण',
	            m : 'एक मिनट',
	            mm : '%d मिनट',
	            h : 'एक घंटा',
	            hh : '%d घंटे',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महीने',
	            MM : '%d महीने',
	            y : 'एक वर्ष',
	            yy : '%d वर्ष'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	        meridiemParse: /रात|सुबह|दोपहर|शाम/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सुबह') {
	                return hour;
	            } else if (meridiem === 'दोपहर') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'शाम') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात';
	            } else if (hour < 10) {
	                return 'सुबह';
	            } else if (hour < 17) {
	                return 'दोपहर';
	            } else if (hour < 20) {
	                return 'शाम';
	            } else {
	                return 'रात';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return hi;
	
	}));

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hrvatski (hr)
	//! author : Bojan Marković : https://github.com/bmarkovic
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }
	
	    var hr = moment.defineLocale('hr', {
	        months : {
	            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
	            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
	        },
	        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return hr;
	
	}));

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hungarian (hu)
	//! author : Adam Brunner : https://github.com/adambrunner
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
	    function translate(number, withoutSuffix, key, isFuture) {
	        var num = number,
	            suffix;
	        switch (key) {
	        case 's':
	            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
	        case 'm':
	            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'mm':
	            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'h':
	            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'hh':
	            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'd':
	            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'dd':
	            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'M':
	            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'MM':
	            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'y':
	            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	        case 'yy':
	            return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	        }
	        return '';
	    }
	    function week(isFuture) {
	        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	    }
	
	    var hu = moment.defineLocale('hu', {
	        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
	        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
	        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
	        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
	        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'YYYY.MM.DD.',
	            LL : 'YYYY. MMMM D.',
	            LLL : 'YYYY. MMMM D. H:mm',
	            LLLL : 'YYYY. MMMM D., dddd H:mm'
	        },
	        meridiemParse: /de|du/i,
	        isPM: function (input) {
	            return input.charAt(1).toLowerCase() === 'u';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower === true ? 'de' : 'DE';
	            } else {
	                return isLower === true ? 'du' : 'DU';
	            }
	        },
	        calendar : {
	            sameDay : '[ma] LT[-kor]',
	            nextDay : '[holnap] LT[-kor]',
	            nextWeek : function () {
	                return week.call(this, true);
	            },
	            lastDay : '[tegnap] LT[-kor]',
	            lastWeek : function () {
	                return week.call(this, false);
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s múlva',
	            past : '%s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return hu;
	
	}));

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Armenian (hy-am)
	//! author : Armendarabyan : https://github.com/armendarabyan
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var hy_am = moment.defineLocale('hy-am', {
	        months : {
	            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
	            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
	        },
	        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
	        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
	        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY թ.',
	            LLL : 'D MMMM YYYY թ., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
	        },
	        calendar : {
	            sameDay: '[այսօր] LT',
	            nextDay: '[վաղը] LT',
	            lastDay: '[երեկ] LT',
	            nextWeek: function () {
	                return 'dddd [օրը ժամը] LT';
	            },
	            lastWeek: function () {
	                return '[անցած] dddd [օրը ժամը] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s հետո',
	            past : '%s առաջ',
	            s : 'մի քանի վայրկյան',
	            m : 'րոպե',
	            mm : '%d րոպե',
	            h : 'ժամ',
	            hh : '%d ժամ',
	            d : 'օր',
	            dd : '%d օր',
	            M : 'ամիս',
	            MM : '%d ամիս',
	            y : 'տարի',
	            yy : '%d տարի'
	        },
	        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
	        isPM: function (input) {
	            return /^(ցերեկվա|երեկոյան)$/.test(input);
	        },
	        meridiem : function (hour) {
	            if (hour < 4) {
	                return 'գիշերվա';
	            } else if (hour < 12) {
	                return 'առավոտվա';
	            } else if (hour < 17) {
	                return 'ցերեկվա';
	            } else {
	                return 'երեկոյան';
	            }
	        },
	        ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'DDD':
	            case 'w':
	            case 'W':
	            case 'DDDo':
	                if (number === 1) {
	                    return number + '-ին';
	                }
	                return number + '-րդ';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return hy_am;
	
	}));

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Indonesia (id)
	//! author : Mohammad Satrio Utomo : https://github.com/tyok
	//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var id = moment.defineLocale('id', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|siang|sore|malam/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'siang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sore' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'siang';
	            } else if (hours < 19) {
	                return 'sore';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Besok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kemarin pukul] LT',
	            lastWeek : 'dddd [lalu pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lalu',
	            s : 'beberapa detik',
	            m : 'semenit',
	            mm : '%d menit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return id;
	
	}));

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : icelandic (is)
	//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function plural(n) {
	        if (n % 100 === 11) {
	            return true;
	        } else if (n % 10 === 1) {
	            return false;
	        }
	        return true;
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	        case 'm':
	            return withoutSuffix ? 'mínúta' : 'mínútu';
	        case 'mm':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	            } else if (withoutSuffix) {
	                return result + 'mínúta';
	            }
	            return result + 'mínútu';
	        case 'hh':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	            }
	            return result + 'klukkustund';
	        case 'd':
	            if (withoutSuffix) {
	                return 'dagur';
	            }
	            return isFuture ? 'dag' : 'degi';
	        case 'dd':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'dagar';
	                }
	                return result + (isFuture ? 'daga' : 'dögum');
	            } else if (withoutSuffix) {
	                return result + 'dagur';
	            }
	            return result + (isFuture ? 'dag' : 'degi');
	        case 'M':
	            if (withoutSuffix) {
	                return 'mánuður';
	            }
	            return isFuture ? 'mánuð' : 'mánuði';
	        case 'MM':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'mánuðir';
	                }
	                return result + (isFuture ? 'mánuði' : 'mánuðum');
	            } else if (withoutSuffix) {
	                return result + 'mánuður';
	            }
	            return result + (isFuture ? 'mánuð' : 'mánuði');
	        case 'y':
	            return withoutSuffix || isFuture ? 'ár' : 'ári';
	        case 'yy':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	            }
	            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	        }
	    }
	
	    var is = moment.defineLocale('is', {
	        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
	        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
	        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
	        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
	        },
	        calendar : {
	            sameDay : '[í dag kl.] LT',
	            nextDay : '[á morgun kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[í gær kl.] LT',
	            lastWeek : '[síðasta] dddd [kl.] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'eftir %s',
	            past : 'fyrir %s síðan',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : 'klukkustund',
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return is;
	
	}));

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : italian (it)
	//! author : Lorenzo : https://github.com/aliem
	//! author: Mattia Larentis: https://github.com/nostalgiaz
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var it = moment.defineLocale('it', {
	        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	        weekdays : 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),
	        weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
	        weekdaysMin : 'Do_Lu_Ma_Me_Gi_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Oggi alle] LT',
	            nextDay: '[Domani alle] LT',
	            nextWeek: 'dddd [alle] LT',
	            lastDay: '[Ieri alle] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[la scorsa] dddd [alle] LT';
	                    default:
	                        return '[lo scorso] dddd [alle] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
	            },
	            past : '%s fa',
	            s : 'alcuni secondi',
	            m : 'un minuto',
	            mm : '%d minuti',
	            h : 'un\'ora',
	            hh : '%d ore',
	            d : 'un giorno',
	            dd : '%d giorni',
	            M : 'un mese',
	            MM : '%d mesi',
	            y : 'un anno',
	            yy : '%d anni'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return it;
	
	}));

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : japanese (ja)
	//! author : LI Long : https://github.com/baryon
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var ja = moment.defineLocale('ja', {
	        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
	        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
	        longDateFormat : {
	            LT : 'Ah時m分',
	            LTS : 'Ah時m分s秒',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日Ah時m分',
	            LLLL : 'YYYY年M月D日Ah時m分 dddd'
	        },
	        meridiemParse: /午前|午後/i,
	        isPM : function (input) {
	            return input === '午後';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return '午前';
	            } else {
	                return '午後';
	            }
	        },
	        calendar : {
	            sameDay : '[今日] LT',
	            nextDay : '[明日] LT',
	            nextWeek : '[来週]dddd LT',
	            lastDay : '[昨日] LT',
	            lastWeek : '[前週]dddd LT',
	            sameElse : 'L'
	        },
	        ordinalParse : /\d{1,2}日/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            default:
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s後',
	            past : '%s前',
	            s : '数秒',
	            m : '1分',
	            mm : '%d分',
	            h : '1時間',
	            hh : '%d時間',
	            d : '1日',
	            dd : '%d日',
	            M : '1ヶ月',
	            MM : '%dヶ月',
	            y : '1年',
	            yy : '%d年'
	        }
	    });
	
	    return ja;
	
	}));

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Boso Jowo (jv)
	//! author : Rony Lantip : https://github.com/lantip
	//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var jv = moment.defineLocale('jv', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
	        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /enjing|siyang|sonten|ndalu/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'enjing') {
	                return hour;
	            } else if (meridiem === 'siyang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'enjing';
	            } else if (hours < 15) {
	                return 'siyang';
	            } else if (hours < 19) {
	                return 'sonten';
	            } else {
	                return 'ndalu';
	            }
	        },
	        calendar : {
	            sameDay : '[Dinten puniko pukul] LT',
	            nextDay : '[Mbenjang pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kala wingi pukul] LT',
	            lastWeek : 'dddd [kepengker pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'wonten ing %s',
	            past : '%s ingkang kepengker',
	            s : 'sawetawis detik',
	            m : 'setunggal menit',
	            mm : '%d menit',
	            h : 'setunggal jam',
	            hh : '%d jam',
	            d : 'sedinten',
	            dd : '%d dinten',
	            M : 'sewulan',
	            MM : '%d wulan',
	            y : 'setaun',
	            yy : '%d taun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return jv;
	
	}));

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Georgian (ka)
	//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var ka = moment.defineLocale('ka', {
	        months : {
	            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	        },
	        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
	        weekdays : {
	            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
	            isFormat: /(წინა|შემდეგ)/
	        },
	        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
	        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[დღეს] LT[-ზე]',
	            nextDay : '[ხვალ] LT[-ზე]',
	            lastDay : '[გუშინ] LT[-ზე]',
	            nextWeek : '[შემდეგ] dddd LT[-ზე]',
	            lastWeek : '[წინა] dddd LT-ზე',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
	                    s.replace(/ი$/, 'ში') :
	                    s + 'ში';
	            },
	            past : function (s) {
	                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
	                    return s.replace(/(ი|ე)$/, 'ის წინ');
	                }
	                if ((/წელი/).test(s)) {
	                    return s.replace(/წელი$/, 'წლის წინ');
	                }
	            },
	            s : 'რამდენიმე წამი',
	            m : 'წუთი',
	            mm : '%d წუთი',
	            h : 'საათი',
	            hh : '%d საათი',
	            d : 'დღე',
	            dd : '%d დღე',
	            M : 'თვე',
	            MM : '%d თვე',
	            y : 'წელი',
	            yy : '%d წელი'
	        },
	        ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
	        ordinal : function (number) {
	            if (number === 0) {
	                return number;
	            }
	            if (number === 1) {
	                return number + '-ლი';
	            }
	            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
	                return 'მე-' + number;
	            }
	            return number + '-ე';
	        },
	        week : {
	            dow : 1,
	            doy : 7
	        }
	    });
	
	    return ka;
	
	}));

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : kazakh (kk)
	//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var suffixes = {
	        0: '-ші',
	        1: '-ші',
	        2: '-ші',
	        3: '-ші',
	        4: '-ші',
	        5: '-ші',
	        6: '-шы',
	        7: '-ші',
	        8: '-ші',
	        9: '-шы',
	        10: '-шы',
	        20: '-шы',
	        30: '-шы',
	        40: '-шы',
	        50: '-ші',
	        60: '-шы',
	        70: '-ші',
	        80: '-ші',
	        90: '-шы',
	        100: '-ші'
	    };
	
	    var kk = moment.defineLocale('kk', {
	        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
	        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
	        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
	        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
	        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бүгін сағат] LT',
	            nextDay : '[Ертең сағат] LT',
	            nextWeek : 'dddd [сағат] LT',
	            lastDay : '[Кеше сағат] LT',
	            lastWeek : '[Өткен аптаның] dddd [сағат] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ішінде',
	            past : '%s бұрын',
	            s : 'бірнеше секунд',
	            m : 'бір минут',
	            mm : '%d минут',
	            h : 'бір сағат',
	            hh : '%d сағат',
	            d : 'бір күн',
	            dd : '%d күн',
	            M : 'бір ай',
	            MM : '%d ай',
	            y : 'бір жыл',
	            yy : '%d жыл'
	        },
	        ordinalParse: /\d{1,2}-(ші|шы)/,
	        ordinal : function (number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return kk;
	
	}));

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : khmer (km)
	//! author : Kruy Vanna : https://github.com/kruyvanna
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var km = moment.defineLocale('km', {
	        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
	            nextDay: '[ស្អែក ម៉ោង] LT',
	            nextWeek: 'dddd [ម៉ោង] LT',
	            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sទៀត',
	            past: '%sមុន',
	            s: 'ប៉ុន្មានវិនាទី',
	            m: 'មួយនាទី',
	            mm: '%d នាទី',
	            h: 'មួយម៉ោង',
	            hh: '%d ម៉ោង',
	            d: 'មួយថ្ងៃ',
	            dd: '%d ថ្ងៃ',
	            M: 'មួយខែ',
	            MM: '%d ខែ',
	            y: 'មួយឆ្នាំ',
	            yy: '%d ឆ្នាំ'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return km;
	
	}));

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : korean (ko)
	//!
	//! authors
	//!
	//! - Kyungwook, Park : https://github.com/kyungw00k
	//! - Jeeeyul Lee <jeeeyul@gmail.com>
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var ko = moment.defineLocale('ko', {
	        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
	        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
	        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
	        longDateFormat : {
	            LT : 'A h시 m분',
	            LTS : 'A h시 m분 s초',
	            L : 'YYYY.MM.DD',
	            LL : 'YYYY년 MMMM D일',
	            LLL : 'YYYY년 MMMM D일 A h시 m분',
	            LLLL : 'YYYY년 MMMM D일 dddd A h시 m분'
	        },
	        calendar : {
	            sameDay : '오늘 LT',
	            nextDay : '내일 LT',
	            nextWeek : 'dddd LT',
	            lastDay : '어제 LT',
	            lastWeek : '지난주 dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s 후',
	            past : '%s 전',
	            s : '몇 초',
	            ss : '%d초',
	            m : '일분',
	            mm : '%d분',
	            h : '한 시간',
	            hh : '%d시간',
	            d : '하루',
	            dd : '%d일',
	            M : '한 달',
	            MM : '%d달',
	            y : '일 년',
	            yy : '%d년'
	        },
	        ordinalParse : /\d{1,2}일/,
	        ordinal : '%d일',
	        meridiemParse : /오전|오후/,
	        isPM : function (token) {
	            return token === '오후';
	        },
	        meridiem : function (hour, minute, isUpper) {
	            return hour < 12 ? '오전' : '오후';
	        }
	    });
	
	    return ko;
	
	}));

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : kyrgyz (ky)
	//! author : Chyngyz Arystan uulu : https://github.com/chyngyz
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	
	    var suffixes = {
	        0: '-чү',
	        1: '-чи',
	        2: '-чи',
	        3: '-чү',
	        4: '-чү',
	        5: '-чи',
	        6: '-чы',
	        7: '-чи',
	        8: '-чи',
	        9: '-чу',
	        10: '-чу',
	        20: '-чы',
	        30: '-чу',
	        40: '-чы',
	        50: '-чү',
	        60: '-чы',
	        70: '-чи',
	        80: '-чи',
	        90: '-чу',
	        100: '-чү'
	    };
	
	    var ky = moment.defineLocale('ky', {
	        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
	        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
	        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бүгүн саат] LT',
	            nextDay : '[Эртең саат] LT',
	            nextWeek : 'dddd [саат] LT',
	            lastDay : '[Кече саат] LT',
	            lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ичинде',
	            past : '%s мурун',
	            s : 'бирнече секунд',
	            m : 'бир мүнөт',
	            mm : '%d мүнөт',
	            h : 'бир саат',
	            hh : '%d саат',
	            d : 'бир күн',
	            dd : '%d күн',
	            M : 'бир ай',
	            MM : '%d ай',
	            y : 'бир жыл',
	            yy : '%d жыл'
	        },
	        ordinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
	        ordinal : function (number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ky;
	
	}));

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Luxembourgish (lb)
	//! author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eng Minutt', 'enger Minutt'],
	            'h': ['eng Stonn', 'enger Stonn'],
	            'd': ['een Dag', 'engem Dag'],
	            'M': ['ee Mount', 'engem Mount'],
	            'y': ['ee Joer', 'engem Joer']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	    function processFutureTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'a ' + string;
	        }
	        return 'an ' + string;
	    }
	    function processPastTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'viru ' + string;
	        }
	        return 'virun ' + string;
	    }
	    /**
	     * Returns true if the word before the given number loses the '-n' ending.
	     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
	     *
	     * @param number {integer}
	     * @returns {boolean}
	     */
	    function eifelerRegelAppliesToNumber(number) {
	        number = parseInt(number, 10);
	        if (isNaN(number)) {
	            return false;
	        }
	        if (number < 0) {
	            // Negative Number --> always true
	            return true;
	        } else if (number < 10) {
	            // Only 1 digit
	            if (4 <= number && number <= 7) {
	                return true;
	            }
	            return false;
	        } else if (number < 100) {
	            // 2 digits
	            var lastDigit = number % 10, firstDigit = number / 10;
	            if (lastDigit === 0) {
	                return eifelerRegelAppliesToNumber(firstDigit);
	            }
	            return eifelerRegelAppliesToNumber(lastDigit);
	        } else if (number < 10000) {
	            // 3 or 4 digits --> recursively check first digit
	            while (number >= 10) {
	                number = number / 10;
	            }
	            return eifelerRegelAppliesToNumber(number);
	        } else {
	            // Anything larger than 4 digits: recursively check first n-3 digits
	            number = number / 1000;
	            return eifelerRegelAppliesToNumber(number);
	        }
	    }
	
	    var lb = moment.defineLocale('lb', {
	        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
	        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm [Auer]',
	            LTS: 'H:mm:ss [Auer]',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm [Auer]',
	            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
	        },
	        calendar: {
	            sameDay: '[Haut um] LT',
	            sameElse: 'L',
	            nextDay: '[Muer um] LT',
	            nextWeek: 'dddd [um] LT',
	            lastDay: '[Gëschter um] LT',
	            lastWeek: function () {
	                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
	                switch (this.day()) {
	                    case 2:
	                    case 4:
	                        return '[Leschten] dddd [um] LT';
	                    default:
	                        return '[Leschte] dddd [um] LT';
	                }
	            }
	        },
	        relativeTime : {
	            future : processFutureTime,
	            past : processPastTime,
	            s : 'e puer Sekonnen',
	            m : processRelativeTime,
	            mm : '%d Minutten',
	            h : processRelativeTime,
	            hh : '%d Stonnen',
	            d : processRelativeTime,
	            dd : '%d Deeg',
	            M : processRelativeTime,
	            MM : '%d Méint',
	            y : processRelativeTime,
	            yy : '%d Joer'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return lb;
	
	}));

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : lao (lo)
	//! author : Ryan Hart : https://github.com/ryanhart2
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var lo = moment.defineLocale('lo', {
	        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
	        isPM: function (input) {
	            return input === 'ຕອນແລງ';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ຕອນເຊົ້າ';
	            } else {
	                return 'ຕອນແລງ';
	            }
	        },
	        calendar : {
	            sameDay : '[ມື້ນີ້ເວລາ] LT',
	            nextDay : '[ມື້ອື່ນເວລາ] LT',
	            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
	            lastDay : '[ມື້ວານນີ້ເວລາ] LT',
	            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ອີກ %s',
	            past : '%sຜ່ານມາ',
	            s : 'ບໍ່ເທົ່າໃດວິນາທີ',
	            m : '1 ນາທີ',
	            mm : '%d ນາທີ',
	            h : '1 ຊົ່ວໂມງ',
	            hh : '%d ຊົ່ວໂມງ',
	            d : '1 ມື້',
	            dd : '%d ມື້',
	            M : '1 ເດືອນ',
	            MM : '%d ເດືອນ',
	            y : '1 ປີ',
	            yy : '%d ປີ'
	        },
	        ordinalParse: /(ທີ່)\d{1,2}/,
	        ordinal : function (number) {
	            return 'ທີ່' + number;
	        }
	    });
	
	    return lo;
	
	}));

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Lithuanian (lt)
	//! author : Mindaugas Mozūras : https://github.com/mmozuras
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var units = {
	        'm' : 'minutė_minutės_minutę',
	        'mm': 'minutės_minučių_minutes',
	        'h' : 'valanda_valandos_valandą',
	        'hh': 'valandos_valandų_valandas',
	        'd' : 'diena_dienos_dieną',
	        'dd': 'dienos_dienų_dienas',
	        'M' : 'mėnuo_mėnesio_mėnesį',
	        'MM': 'mėnesiai_mėnesių_mėnesius',
	        'y' : 'metai_metų_metus',
	        'yy': 'metai_metų_metus'
	    };
	    function translateSeconds(number, withoutSuffix, key, isFuture) {
	        if (withoutSuffix) {
	            return 'kelios sekundės';
	        } else {
	            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
	        }
	    }
	    function translateSingular(number, withoutSuffix, key, isFuture) {
	        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
	    }
	    function special(number) {
	        return number % 10 === 0 || (number > 10 && number < 20);
	    }
	    function forms(key) {
	        return units[key].split('_');
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        if (number === 1) {
	            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	        } else if (withoutSuffix) {
	            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	        } else {
	            if (isFuture) {
	                return result + forms(key)[1];
	            } else {
	                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	            }
	        }
	    }
	    var lt = moment.defineLocale('lt', {
	        months : {
	            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
	            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_')
	        },
	        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
	        weekdays : {
	            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
	            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
	            isFormat: /dddd HH:mm/
	        },
	        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
	        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY [m.] MMMM D [d.]',
	            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY [m.] MMMM D [d.]',
	            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
	        },
	        calendar : {
	            sameDay : '[Šiandien] LT',
	            nextDay : '[Rytoj] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[Vakar] LT',
	            lastWeek : '[Praėjusį] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'po %s',
	            past : 'prieš %s',
	            s : translateSeconds,
	            m : translateSingular,
	            mm : translate,
	            h : translateSingular,
	            hh : translate,
	            d : translateSingular,
	            dd : translate,
	            M : translateSingular,
	            MM : translate,
	            y : translateSingular,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}-oji/,
	        ordinal : function (number) {
	            return number + '-oji';
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return lt;
	
	}));

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : latvian (lv)
	//! author : Kristaps Karlsons : https://github.com/skakri
	//! author : Jānis Elmeris : https://github.com/JanisE
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var units = {
	        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'h': 'stundas_stundām_stunda_stundas'.split('_'),
	        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
	        'd': 'dienas_dienām_diena_dienas'.split('_'),
	        'dd': 'dienas_dienām_diena_dienas'.split('_'),
	        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'y': 'gada_gadiem_gads_gadi'.split('_'),
	        'yy': 'gada_gadiem_gads_gadi'.split('_')
	    };
	    /**
	     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
	     */
	    function format(forms, number, withoutSuffix) {
	        if (withoutSuffix) {
	            // E.g. "21 minūte", "3 minūtes".
	            return number % 10 === 1 && number !== 11 ? forms[2] : forms[3];
	        } else {
	            // E.g. "21 minūtes" as in "pēc 21 minūtes".
	            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
	            return number % 10 === 1 && number !== 11 ? forms[0] : forms[1];
	        }
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        return number + ' ' + format(units[key], number, withoutSuffix);
	    }
	    function relativeTimeWithSingular(number, withoutSuffix, key) {
	        return format(units[key], number, withoutSuffix);
	    }
	    function relativeSeconds(number, withoutSuffix) {
	        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
	    }
	
	    var lv = moment.defineLocale('lv', {
	        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
	        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY.',
	            LL : 'YYYY. [gada] D. MMMM',
	            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
	            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
	        },
	        calendar : {
	            sameDay : '[Šodien pulksten] LT',
	            nextDay : '[Rīt pulksten] LT',
	            nextWeek : 'dddd [pulksten] LT',
	            lastDay : '[Vakar pulksten] LT',
	            lastWeek : '[Pagājušā] dddd [pulksten] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'pēc %s',
	            past : 'pirms %s',
	            s : relativeSeconds,
	            m : relativeTimeWithSingular,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithSingular,
	            hh : relativeTimeWithPlural,
	            d : relativeTimeWithSingular,
	            dd : relativeTimeWithPlural,
	            M : relativeTimeWithSingular,
	            MM : relativeTimeWithPlural,
	            y : relativeTimeWithSingular,
	            yy : relativeTimeWithPlural
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return lv;
	
	}));

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Montenegrin (me)
	//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jednog minuta'],
	            mm: ['minut', 'minuta', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mjesec', 'mjeseca', 'mjeseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };
	
	    var me = moment.defineLocale('me', {
	        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact : true,
	        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sjutra u] LT',
	
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedjelje] [u] LT',
	                    '[prošlog] [ponedjeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srijede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'nekoliko sekundi',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mjesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return me;
	
	}));

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : macedonian (mk)
	//! author : Borislav Mickov : https://github.com/B0k0
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var mk = moment.defineLocale('mk', {
	        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
	        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Денес во] LT',
	            nextDay : '[Утре во] LT',
	            nextWeek : '[Во] dddd [во] LT',
	            lastDay : '[Вчера во] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[Изминатата] dddd [во] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[Изминатиот] dddd [во] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'после %s',
	            past : 'пред %s',
	            s : 'неколку секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дена',
	            M : 'месец',
	            MM : '%d месеци',
	            y : 'година',
	            yy : '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return mk;
	
	}));

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : malayalam (ml)
	//! author : Floyd Pink : https://github.com/floydpink
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var ml = moment.defineLocale('ml', {
	        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
	        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
	        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
	        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm -നു',
	            LTS : 'A h:mm:ss -നു',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm -നു',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
	        },
	        calendar : {
	            sameDay : '[ഇന്ന്] LT',
	            nextDay : '[നാളെ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ഇന്നലെ] LT',
	            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s കഴിഞ്ഞ്',
	            past : '%s മുൻപ്',
	            s : 'അൽപ നിമിഷങ്ങൾ',
	            m : 'ഒരു മിനിറ്റ്',
	            mm : '%d മിനിറ്റ്',
	            h : 'ഒരു മണിക്കൂർ',
	            hh : '%d മണിക്കൂർ',
	            d : 'ഒരു ദിവസം',
	            dd : '%d ദിവസം',
	            M : 'ഒരു മാസം',
	            MM : '%d മാസം',
	            y : 'ഒരു വർഷം',
	            yy : '%d വർഷം'
	        },
	        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'രാത്രി' && hour >= 4) ||
	                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
	                    meridiem === 'വൈകുന്നേരം') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'രാത്രി';
	            } else if (hour < 12) {
	                return 'രാവിലെ';
	            } else if (hour < 17) {
	                return 'ഉച്ച കഴിഞ്ഞ്';
	            } else if (hour < 20) {
	                return 'വൈകുന്നേരം';
	            } else {
	                return 'രാത്രി';
	            }
	        }
	    });
	
	    return ml;
	
	}));

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Marathi (mr)
	//! author : Harshad Kale : https://github.com/kalehv
	//! author : Vivek Athalye : https://github.com/vnathalye
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };
	
	    function relativeTimeMr(number, withoutSuffix, string, isFuture)
	    {
	        var output = '';
	        if (withoutSuffix) {
	            switch (string) {
	                case 's': output = 'काही सेकंद'; break;
	                case 'm': output = 'एक मिनिट'; break;
	                case 'mm': output = '%d मिनिटे'; break;
	                case 'h': output = 'एक तास'; break;
	                case 'hh': output = '%d तास'; break;
	                case 'd': output = 'एक दिवस'; break;
	                case 'dd': output = '%d दिवस'; break;
	                case 'M': output = 'एक महिना'; break;
	                case 'MM': output = '%d महिने'; break;
	                case 'y': output = 'एक वर्ष'; break;
	                case 'yy': output = '%d वर्षे'; break;
	            }
	        }
	        else {
	            switch (string) {
	                case 's': output = 'काही सेकंदां'; break;
	                case 'm': output = 'एका मिनिटा'; break;
	                case 'mm': output = '%d मिनिटां'; break;
	                case 'h': output = 'एका तासा'; break;
	                case 'hh': output = '%d तासां'; break;
	                case 'd': output = 'एका दिवसा'; break;
	                case 'dd': output = '%d दिवसां'; break;
	                case 'M': output = 'एका महिन्या'; break;
	                case 'MM': output = '%d महिन्यां'; break;
	                case 'y': output = 'एका वर्षा'; break;
	                case 'yy': output = '%d वर्षां'; break;
	            }
	        }
	        return output.replace(/%d/i, number);
	    }
	
	    var mr = moment.defineLocale('mr', {
	        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
	        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm वाजता',
	            LTS : 'A h:mm:ss वाजता',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm वाजता',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[उद्या] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[काल] LT',
	            lastWeek: '[मागील] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future: '%sमध्ये',
	            past: '%sपूर्वी',
	            s: relativeTimeMr,
	            m: relativeTimeMr,
	            mm: relativeTimeMr,
	            h: relativeTimeMr,
	            hh: relativeTimeMr,
	            d: relativeTimeMr,
	            dd: relativeTimeMr,
	            M: relativeTimeMr,
	            MM: relativeTimeMr,
	            y: relativeTimeMr,
	            yy: relativeTimeMr
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात्री') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सकाळी') {
	                return hour;
	            } else if (meridiem === 'दुपारी') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'सायंकाळी') {
	                return hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात्री';
	            } else if (hour < 10) {
	                return 'सकाळी';
	            } else if (hour < 17) {
	                return 'दुपारी';
	            } else if (hour < 20) {
	                return 'सायंकाळी';
	            } else {
	                return 'रात्री';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return mr;
	
	}));

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Malaysia (ms-MY)
	//! author : Weldan Jamili : https://github.com/weldan
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var ms = moment.defineLocale('ms', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ms;
	
	}));

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Malaysia (ms-MY)
	//! author : Weldan Jamili : https://github.com/weldan
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var ms_my = moment.defineLocale('ms-my', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ms_my;
	
	}));

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Burmese (my)
	//! author : Squar team, mysquar.com
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '၁',
	        '2': '၂',
	        '3': '၃',
	        '4': '၄',
	        '5': '၅',
	        '6': '၆',
	        '7': '၇',
	        '8': '၈',
	        '9': '၉',
	        '0': '၀'
	    }, numberMap = {
	        '၁': '1',
	        '၂': '2',
	        '၃': '3',
	        '၄': '4',
	        '၅': '5',
	        '၆': '6',
	        '၇': '7',
	        '၈': '8',
	        '၉': '9',
	        '၀': '0'
	    };
	
	    var my = moment.defineLocale('my', {
	        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
	        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
	        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
	        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ယနေ.] LT [မှာ]',
	            nextDay: '[မနက်ဖြန်] LT [မှာ]',
	            nextWeek: 'dddd LT [မှာ]',
	            lastDay: '[မနေ.က] LT [မှာ]',
	            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'လာမည့် %s မှာ',
	            past: 'လွန်ခဲ့သော %s က',
	            s: 'စက္ကန်.အနည်းငယ်',
	            m: 'တစ်မိနစ်',
	            mm: '%d မိနစ်',
	            h: 'တစ်နာရီ',
	            hh: '%d နာရီ',
	            d: 'တစ်ရက်',
	            dd: '%d ရက်',
	            M: 'တစ်လ',
	            MM: '%d လ',
	            y: 'တစ်နှစ်',
	            yy: '%d နှစ်'
	        },
	        preparse: function (string) {
	            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return my;
	
	}));

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : norwegian bokmål (nb)
	//! authors : Espen Hovlandsdal : https://github.com/rexxars
	//!           Sigurd Gartmann : https://github.com/sigurdga
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var nb = moment.defineLocale('nb', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] HH:mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[i dag kl.] LT',
	            nextDay: '[i morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[i går kl.] LT',
	            lastWeek: '[forrige] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'noen sekunder',
	            m : 'ett minutt',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dager',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return nb;
	
	}));

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : nepali/nepalese
	//! author : suvash : https://github.com/suvash
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };
	
	    var ne = moment.defineLocale('ne', {
	        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
	        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
	        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
	        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'Aको h:mm बजे',
	            LTS : 'Aको h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, Aको h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'राति') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'बिहान') {
	                return hour;
	            } else if (meridiem === 'दिउँसो') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'साँझ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 3) {
	                return 'राति';
	            } else if (hour < 12) {
	                return 'बिहान';
	            } else if (hour < 16) {
	                return 'दिउँसो';
	            } else if (hour < 20) {
	                return 'साँझ';
	            } else {
	                return 'राति';
	            }
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[भोलि] LT',
	            nextWeek : '[आउँदो] dddd[,] LT',
	            lastDay : '[हिजो] LT',
	            lastWeek : '[गएको] dddd[,] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sमा',
	            past : '%s अगाडि',
	            s : 'केही क्षण',
	            m : 'एक मिनेट',
	            mm : '%d मिनेट',
	            h : 'एक घण्टा',
	            hh : '%d घण्टा',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महिना',
	            MM : '%d महिना',
	            y : 'एक बर्ष',
	            yy : '%d बर्ष'
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ne;
	
	}));

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : dutch (nl)
	//! author : Joris Röling : https://github.com/jjupiter
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');
	
	    var nl = moment.defineLocale('nl', {
	        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        monthsParseExact : true,
	        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	        weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'over %s',
	            past : '%s geleden',
	            s : 'een paar seconden',
	            m : 'één minuut',
	            mm : '%d minuten',
	            h : 'één uur',
	            hh : '%d uur',
	            d : 'één dag',
	            dd : '%d dagen',
	            M : 'één maand',
	            MM : '%d maanden',
	            y : 'één jaar',
	            yy : '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return nl;
	
	}));

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : norwegian nynorsk (nn)
	//! author : https://github.com/mechuwind
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var nn = moment.defineLocale('nn', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
	        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
	        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[I dag klokka] LT',
	            nextDay: '[I morgon klokka] LT',
	            nextWeek: 'dddd [klokka] LT',
	            lastDay: '[I går klokka] LT',
	            lastWeek: '[Føregåande] dddd [klokka] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s sidan',
	            s : 'nokre sekund',
	            m : 'eit minutt',
	            mm : '%d minutt',
	            h : 'ein time',
	            hh : '%d timar',
	            d : 'ein dag',
	            dd : '%d dagar',
	            M : 'ein månad',
	            MM : '%d månader',
	            y : 'eit år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return nn;
	
	}));

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : punjabi india (pa-in)
	//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '੧',
	        '2': '੨',
	        '3': '੩',
	        '4': '੪',
	        '5': '੫',
	        '6': '੬',
	        '7': '੭',
	        '8': '੮',
	        '9': '੯',
	        '0': '੦'
	    },
	    numberMap = {
	        '੧': '1',
	        '੨': '2',
	        '੩': '3',
	        '੪': '4',
	        '੫': '5',
	        '੬': '6',
	        '੭': '7',
	        '੮': '8',
	        '੯': '9',
	        '੦': '0'
	    };
	
	    var pa_in = moment.defineLocale('pa-in', {
	        // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
	        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
	        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm ਵਜੇ',
	            LTS : 'A h:mm:ss ਵਜੇ',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
	        },
	        calendar : {
	            sameDay : '[ਅਜ] LT',
	            nextDay : '[ਕਲ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ਕਲ] LT',
	            lastWeek : '[ਪਿਛਲੇ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ਵਿੱਚ',
	            past : '%s ਪਿਛਲੇ',
	            s : 'ਕੁਝ ਸਕਿੰਟ',
	            m : 'ਇਕ ਮਿੰਟ',
	            mm : '%d ਮਿੰਟ',
	            h : 'ਇੱਕ ਘੰਟਾ',
	            hh : '%d ਘੰਟੇ',
	            d : 'ਇੱਕ ਦਿਨ',
	            dd : '%d ਦਿਨ',
	            M : 'ਇੱਕ ਮਹੀਨਾ',
	            MM : '%d ਮਹੀਨੇ',
	            y : 'ਇੱਕ ਸਾਲ',
	            yy : '%d ਸਾਲ'
	        },
	        preparse: function (string) {
	            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
	        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ਰਾਤ') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ਸਵੇਰ') {
	                return hour;
	            } else if (meridiem === 'ਦੁਪਹਿਰ') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'ਸ਼ਾਮ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ਰਾਤ';
	            } else if (hour < 10) {
	                return 'ਸਵੇਰ';
	            } else if (hour < 17) {
	                return 'ਦੁਪਹਿਰ';
	            } else if (hour < 20) {
	                return 'ਸ਼ਾਮ';
	            } else {
	                return 'ਰਾਤ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return pa_in;
	
	}));

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : polish (pl)
	//! author : Rafal Hirsz : https://github.com/evoL
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
	        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
	    function plural(n) {
	        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'minuta' : 'minutę';
	        case 'mm':
	            return result + (plural(number) ? 'minuty' : 'minut');
	        case 'h':
	            return withoutSuffix  ? 'godzina'  : 'godzinę';
	        case 'hh':
	            return result + (plural(number) ? 'godziny' : 'godzin');
	        case 'MM':
	            return result + (plural(number) ? 'miesiące' : 'miesięcy');
	        case 'yy':
	            return result + (plural(number) ? 'lata' : 'lat');
	        }
	    }
	
	    var pl = moment.defineLocale('pl', {
	        months : function (momentToFormat, format) {
	            if (format === '') {
	                // Hack: if format empty we know this is used to generate
	                // RegExp by moment. Give then back both valid forms of months
	                // in RegExp ready format.
	                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
	            } else if (/D MMMM/.test(format)) {
	                return monthsSubjective[momentToFormat.month()];
	            } else {
	                return monthsNominative[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
	        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
	        weekdaysShort : 'nie_pon_wt_śr_czw_pt_sb'.split('_'),
	        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Dziś o] LT',
	            nextDay: '[Jutro o] LT',
	            nextWeek: '[W] dddd [o] LT',
	            lastDay: '[Wczoraj o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[W zeszłą niedzielę o] LT';
	                case 3:
	                    return '[W zeszłą środę o] LT';
	                case 6:
	                    return '[W zeszłą sobotę o] LT';
	                default:
	                    return '[W zeszły] dddd [o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : '%s temu',
	            s : 'kilka sekund',
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : '1 dzień',
	            dd : '%d dni',
	            M : 'miesiąc',
	            MM : translate,
	            y : 'rok',
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return pl;
	
	}));

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : portuguese (pt)
	//! author : Jefferson : https://github.com/jalex79
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var pt = moment.defineLocale('pt', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : 'há %s',
	            s : 'segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return pt;
	
	}));

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : brazilian portuguese (pt-br)
	//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var pt_br = moment.defineLocale('pt-br', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : '%s atrás',
	            s : 'poucos segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal : '%dº'
	    });
	
	    return pt_br;
	
	}));

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : romanian (ro)
	//! author : Vlad Gurdiga : https://github.com/gurdiga
	//! author : Valentin Agachi : https://github.com/avaly
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	                'mm': 'minute',
	                'hh': 'ore',
	                'dd': 'zile',
	                'MM': 'luni',
	                'yy': 'ani'
	            },
	            separator = ' ';
	        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
	            separator = ' de ';
	        }
	        return number + separator + format[key];
	    }
	
	    var ro = moment.defineLocale('ro', {
	        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
	        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
	        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
	        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[azi la] LT',
	            nextDay: '[mâine la] LT',
	            nextWeek: 'dddd [la] LT',
	            lastDay: '[ieri la] LT',
	            lastWeek: '[fosta] dddd [la] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'peste %s',
	            past : '%s în urmă',
	            s : 'câteva secunde',
	            m : 'un minut',
	            mm : relativeTimeWithPlural,
	            h : 'o oră',
	            hh : relativeTimeWithPlural,
	            d : 'o zi',
	            dd : relativeTimeWithPlural,
	            M : 'o lună',
	            MM : relativeTimeWithPlural,
	            y : 'un an',
	            yy : relativeTimeWithPlural
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ro;
	
	}));

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : russian (ru)
	//! author : Viktorminator : https://github.com/Viktorminator
	//! Author : Menelion Elensúle : https://github.com/Oire
	//! author : Коренберг Марк : https://github.com/socketpair
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	            'hh': 'час_часа_часов',
	            'dd': 'день_дня_дней',
	            'MM': 'месяц_месяца_месяцев',
	            'yy': 'год_года_лет'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'минута' : 'минуту';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];
	
	    // http://new.gramota.ru/spravka/rules/139-prop : § 103
	    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
	    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
	    var ru = moment.defineLocale('ru', {
	        months : {
	            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
	            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
	        },
	        monthsShort : {
	            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
	            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
	            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
	        },
	        weekdays : {
	            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
	            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
	        },
	        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        monthsParse : monthsParse,
	        longMonthsParse : monthsParse,
	        shortMonthsParse : monthsParse,
	        monthsRegex: /^(сентябр[яь]|октябр[яь]|декабр[яь]|феврал[яь]|январ[яь]|апрел[яь]|августа?|ноябр[яь]|сент\.|февр\.|нояб\.|июнь|янв.|июль|дек.|авг.|апр.|марта|мар[.т]|окт.|июн[яь]|июл[яь]|ма[яй])/i,
	        monthsShortRegex: /^(сентябр[яь]|октябр[яь]|декабр[яь]|феврал[яь]|январ[яь]|апрел[яь]|августа?|ноябр[яь]|сент\.|февр\.|нояб\.|июнь|янв.|июль|дек.|авг.|апр.|марта|мар[.т]|окт.|июн[яь]|июл[яь]|ма[яй])/i,
	        monthsStrictRegex: /^(сентябр[яь]|октябр[яь]|декабр[яь]|феврал[яь]|январ[яь]|апрел[яь]|августа?|ноябр[яь]|марта?|июн[яь]|июл[яь]|ма[яй])/i,
	        monthsShortStrictRegex: /^(нояб\.|февр\.|сент\.|июль|янв\.|июн[яь]|мар[.т]|авг\.|апр\.|окт\.|дек\.|ма[яй])/i,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сегодня в] LT',
	            nextDay: '[Завтра в] LT',
	            lastDay: '[Вчера в] LT',
	            nextWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                    case 0:
	                        return '[В следующее] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В следующий] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В следующую] dddd [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd [в] LT';
	                    } else {
	                        return '[В] dddd [в] LT';
	                    }
	                }
	            },
	            lastWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                    case 0:
	                        return '[В прошлое] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В прошлый] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В прошлую] dddd [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd [в] LT';
	                    } else {
	                        return '[В] dddd [в] LT';
	                    }
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'через %s',
	            past : '%s назад',
	            s : 'несколько секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'час',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночи|утра|дня|вечера/i,
	        isPM : function (input) {
	            return /^(дня|вечера)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночи';
	            } else if (hour < 12) {
	                return 'утра';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечера';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го|я)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            case 'w':
	            case 'W':
	                return number + '-я';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ru;
	
	}));

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Northern Sami (se)
	//! authors : Bård Rolstad Henriksen : https://github.com/karamell
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	
	    var se = moment.defineLocale('se', {
	        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
	        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
	        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
	        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
	        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'MMMM D. [b.] YYYY',
	            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
	            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[otne ti] LT',
	            nextDay: '[ihttin ti] LT',
	            nextWeek: 'dddd [ti] LT',
	            lastDay: '[ikte ti] LT',
	            lastWeek: '[ovddit] dddd [ti] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s geažes',
	            past : 'maŋit %s',
	            s : 'moadde sekunddat',
	            m : 'okta minuhta',
	            mm : '%d minuhtat',
	            h : 'okta diimmu',
	            hh : '%d diimmut',
	            d : 'okta beaivi',
	            dd : '%d beaivvit',
	            M : 'okta mánnu',
	            MM : '%d mánut',
	            y : 'okta jahki',
	            yy : '%d jagit'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return se;
	
	}));

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Sinhalese (si)
	//! author : Sampath Sitinamaluwa : https://github.com/sampathsris
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    /*jshint -W100*/
	    var si = moment.defineLocale('si', {
	        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
	        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
	        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
	        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
	        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'a h:mm',
	            LTS : 'a h:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY MMMM D',
	            LLL : 'YYYY MMMM D, a h:mm',
	            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
	        },
	        calendar : {
	            sameDay : '[අද] LT[ට]',
	            nextDay : '[හෙට] LT[ට]',
	            nextWeek : 'dddd LT[ට]',
	            lastDay : '[ඊයේ] LT[ට]',
	            lastWeek : '[පසුගිය] dddd LT[ට]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sකින්',
	            past : '%sකට පෙර',
	            s : 'තත්පර කිහිපය',
	            m : 'මිනිත්තුව',
	            mm : 'මිනිත්තු %d',
	            h : 'පැය',
	            hh : 'පැය %d',
	            d : 'දිනය',
	            dd : 'දින %d',
	            M : 'මාසය',
	            MM : 'මාස %d',
	            y : 'වසර',
	            yy : 'වසර %d'
	        },
	        ordinalParse: /\d{1,2} වැනි/,
	        ordinal : function (number) {
	            return number + ' වැනි';
	        },
	        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
	        isPM : function (input) {
	            return input === 'ප.ව.' || input === 'පස් වරු';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'ප.ව.' : 'පස් වරු';
	            } else {
	                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
	            }
	        }
	    });
	
	    return si;
	
	}));

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : slovak (sk)
	//! author : Martin Minka : https://github.com/k2s
	//! based on work of petrbela : https://github.com/petrbela
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
	        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minúty' : 'minút');
	            } else {
	                return result + 'minútami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodín');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dni' : 'dní');
	            } else {
	                return result + 'dňami';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'mesiace' : 'mesiacov');
	            } else {
	                return result + 'mesiacmi';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'rokov');
	            } else {
	                return result + 'rokmi';
	            }
	            break;
	        }
	    }
	
	    var sk = moment.defineLocale('sk', {
	        months : months,
	        monthsShort : monthsShort,
	        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
	        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
	        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes o] LT',
	            nextDay: '[zajtra o] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [o] LT';
	                case 3:
	                    return '[v stredu o] LT';
	                case 4:
	                    return '[vo štvrtok o] LT';
	                case 5:
	                    return '[v piatok o] LT';
	                case 6:
	                    return '[v sobotu o] LT';
	                }
	            },
	            lastDay: '[včera o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulú nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[minulý] dddd [o] LT';
	                case 3:
	                    return '[minulú stredu o] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [o] LT';
	                case 6:
	                    return '[minulú sobotu o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'pred %s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return sk;
	
	}));

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : slovenian (sl)
	//! author : Robert Sedovšek : https://github.com/sedovsek
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
	        case 'm':
	            return withoutSuffix ? 'ena minuta' : 'eno minuto';
	        case 'mm':
	            if (number === 1) {
	                result += withoutSuffix ? 'minuta' : 'minuto';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
	            } else {
	                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'ena ura' : 'eno uro';
	        case 'hh':
	            if (number === 1) {
	                result += withoutSuffix ? 'ura' : 'uro';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'uri' : 'urama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'ure' : 'urami';
	            } else {
	                result += withoutSuffix || isFuture ? 'ur' : 'urami';
	            }
	            return result;
	        case 'd':
	            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
	        case 'dd':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
	            } else {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
	            }
	            return result;
	        case 'M':
	            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
	        case 'MM':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
	            } else {
	                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
	            }
	            return result;
	        case 'y':
	            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
	        case 'yy':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'leto' : 'letom';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'leta' : 'leti';
	            } else {
	                result += withoutSuffix || isFuture ? 'let' : 'leti';
	            }
	            return result;
	        }
	    }
	
	    var sl = moment.defineLocale('sl', {
	        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
	        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
	        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danes ob] LT',
	            nextDay  : '[jutri ob] LT',
	
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v] [nedeljo] [ob] LT';
	                case 3:
	                    return '[v] [sredo] [ob] LT';
	                case 6:
	                    return '[v] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[v] dddd [ob] LT';
	                }
	            },
	            lastDay  : '[včeraj ob] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[prejšnjo] [nedeljo] [ob] LT';
	                case 3:
	                    return '[prejšnjo] [sredo] [ob] LT';
	                case 6:
	                    return '[prejšnjo] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prejšnji] dddd [ob] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'čez %s',
	            past   : 'pred %s',
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : processRelativeTime,
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return sl;
	
	}));

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Albanian (sq)
	//! author : Flakërim Ismani : https://github.com/flakerimi
	//! author: Menelion Elensúle: https://github.com/Oire (tests)
	//! author : Oerd Cukalla : https://github.com/oerd (fixes)
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var sq = moment.defineLocale('sq', {
	        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
	        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
	        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
	        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
	        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
	        weekdaysParseExact : true,
	        meridiemParse: /PD|MD/,
	        isPM: function (input) {
	            return input.charAt(0) === 'M';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            return hours < 12 ? 'PD' : 'MD';
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Sot në] LT',
	            nextDay : '[Nesër në] LT',
	            nextWeek : 'dddd [në] LT',
	            lastDay : '[Dje në] LT',
	            lastWeek : 'dddd [e kaluar në] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'në %s',
	            past : '%s më parë',
	            s : 'disa sekonda',
	            m : 'një minutë',
	            mm : '%d minuta',
	            h : 'një orë',
	            hh : '%d orë',
	            d : 'një ditë',
	            dd : '%d ditë',
	            M : 'një muaj',
	            MM : '%d muaj',
	            y : 'një vit',
	            yy : '%d vite'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return sq;
	
	}));

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian-latin (sr)
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jedne minute'],
	            mm: ['minut', 'minute', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mesec', 'meseca', 'meseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };
	
	    var sr = moment.defineLocale('sr', {
	        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedelju] [u] LT';
	                case 3:
	                    return '[u] [sredu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedelje] [u] LT',
	                    '[prošlog] [ponedeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'pre %s',
	            s      : 'nekoliko sekundi',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return sr;
	
	}));

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian-cyrillic (sr-cyrl)
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var translator = {
	        words: { //Different grammatical cases
	            m: ['један минут', 'једне минуте'],
	            mm: ['минут', 'минуте', 'минута'],
	            h: ['један сат', 'једног сата'],
	            hh: ['сат', 'сата', 'сати'],
	            dd: ['дан', 'дана', 'дана'],
	            MM: ['месец', 'месеца', 'месеци'],
	            yy: ['година', 'године', 'година']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };
	
	    var sr_cyrl = moment.defineLocale('sr-cyrl', {
	        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
	        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
	        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
	        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[данас у] LT',
	            nextDay: '[сутра у] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[у] [недељу] [у] LT';
	                case 3:
	                    return '[у] [среду] [у] LT';
	                case 6:
	                    return '[у] [суботу] [у] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[у] dddd [у] LT';
	                }
	            },
	            lastDay  : '[јуче у] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[прошле] [недеље] [у] LT',
	                    '[прошлог] [понедељка] [у] LT',
	                    '[прошлог] [уторка] [у] LT',
	                    '[прошле] [среде] [у] LT',
	                    '[прошлог] [четвртка] [у] LT',
	                    '[прошлог] [петка] [у] LT',
	                    '[прошле] [суботе] [у] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past   : 'пре %s',
	            s      : 'неколико секунди',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'дан',
	            dd     : translator.translate,
	            M      : 'месец',
	            MM     : translator.translate,
	            y      : 'годину',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return sr_cyrl;
	
	}));

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : siSwati (ss)
	//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	
	    var ss = moment.defineLocale('ss', {
	        months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
	        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
	        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
	        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
	        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Namuhla nga] LT',
	            nextDay : '[Kusasa nga] LT',
	            nextWeek : 'dddd [nga] LT',
	            lastDay : '[Itolo nga] LT',
	            lastWeek : 'dddd [leliphelile] [nga] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'nga %s',
	            past : 'wenteka nga %s',
	            s : 'emizuzwana lomcane',
	            m : 'umzuzu',
	            mm : '%d emizuzu',
	            h : 'lihora',
	            hh : '%d emahora',
	            d : 'lilanga',
	            dd : '%d emalanga',
	            M : 'inyanga',
	            MM : '%d tinyanga',
	            y : 'umnyaka',
	            yy : '%d iminyaka'
	        },
	        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'ekuseni';
	            } else if (hours < 15) {
	                return 'emini';
	            } else if (hours < 19) {
	                return 'entsambama';
	            } else {
	                return 'ebusuku';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ekuseni') {
	                return hour;
	            } else if (meridiem === 'emini') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
	                if (hour === 0) {
	                    return 0;
	                }
	                return hour + 12;
	            }
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : '%d',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return ss;
	
	}));

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : swedish (sv)
	//! author : Jens Alm : https://github.com/ulmus
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var sv = moment.defineLocale('sv', {
	        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
	        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
	        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [kl.] HH:mm',
	            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Idag] LT',
	            nextDay: '[Imorgon] LT',
	            lastDay: '[Igår] LT',
	            nextWeek: '[På] dddd LT',
	            lastWeek: '[I] dddd[s] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'för %s sedan',
	            s : 'några sekunder',
	            m : 'en minut',
	            mm : '%d minuter',
	            h : 'en timme',
	            hh : '%d timmar',
	            d : 'en dag',
	            dd : '%d dagar',
	            M : 'en månad',
	            MM : '%d månader',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}(e|a)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'e' :
	                (b === 1) ? 'a' :
	                (b === 2) ? 'a' :
	                (b === 3) ? 'e' : 'e';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return sv;
	
	}));

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : swahili (sw)
	//! author : Fahad Kassim : https://github.com/fadsel
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var sw = moment.defineLocale('sw', {
	        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
	        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
	        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[leo saa] LT',
	            nextDay : '[kesho saa] LT',
	            nextWeek : '[wiki ijayo] dddd [saat] LT',
	            lastDay : '[jana] LT',
	            lastWeek : '[wiki iliyopita] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s baadaye',
	            past : 'tokea %s',
	            s : 'hivi punde',
	            m : 'dakika moja',
	            mm : 'dakika %d',
	            h : 'saa limoja',
	            hh : 'masaa %d',
	            d : 'siku moja',
	            dd : 'masiku %d',
	            M : 'mwezi mmoja',
	            MM : 'miezi %d',
	            y : 'mwaka mmoja',
	            yy : 'miaka %d'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return sw;
	
	}));

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : tamil (ta)
	//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '௧',
	        '2': '௨',
	        '3': '௩',
	        '4': '௪',
	        '5': '௫',
	        '6': '௬',
	        '7': '௭',
	        '8': '௮',
	        '9': '௯',
	        '0': '௦'
	    }, numberMap = {
	        '௧': '1',
	        '௨': '2',
	        '௩': '3',
	        '௪': '4',
	        '௫': '5',
	        '௬': '6',
	        '௭': '7',
	        '௮': '8',
	        '௯': '9',
	        '௦': '0'
	    };
	
	    var ta = moment.defineLocale('ta', {
	        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
	        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
	        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, HH:mm',
	            LLLL : 'dddd, D MMMM YYYY, HH:mm'
	        },
	        calendar : {
	            sameDay : '[இன்று] LT',
	            nextDay : '[நாளை] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[நேற்று] LT',
	            lastWeek : '[கடந்த வாரம்] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s இல்',
	            past : '%s முன்',
	            s : 'ஒரு சில விநாடிகள்',
	            m : 'ஒரு நிமிடம்',
	            mm : '%d நிமிடங்கள்',
	            h : 'ஒரு மணி நேரம்',
	            hh : '%d மணி நேரம்',
	            d : 'ஒரு நாள்',
	            dd : '%d நாட்கள்',
	            M : 'ஒரு மாதம்',
	            MM : '%d மாதங்கள்',
	            y : 'ஒரு வருடம்',
	            yy : '%d ஆண்டுகள்'
	        },
	        ordinalParse: /\d{1,2}வது/,
	        ordinal : function (number) {
	            return number + 'வது';
	        },
	        preparse: function (string) {
	            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // refer http://ta.wikipedia.org/s/1er1
	        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 2) {
	                return ' யாமம்';
	            } else if (hour < 6) {
	                return ' வைகறை';  // வைகறை
	            } else if (hour < 10) {
	                return ' காலை'; // காலை
	            } else if (hour < 14) {
	                return ' நண்பகல்'; // நண்பகல்
	            } else if (hour < 18) {
	                return ' எற்பாடு'; // எற்பாடு
	            } else if (hour < 22) {
	                return ' மாலை'; // மாலை
	            } else {
	                return ' யாமம்';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'யாமம்') {
	                return hour < 2 ? hour : hour + 12;
	            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
	                return hour;
	            } else if (meridiem === 'நண்பகல்') {
	                return hour >= 10 ? hour : hour + 12;
	            } else {
	                return hour + 12;
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ta;
	
	}));

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : telugu (te)
	//! author : Krishna Chaitanya Thota : https://github.com/kcthota
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var te = moment.defineLocale('te', {
	        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
	        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
	        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
	        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[నేడు] LT',
	            nextDay : '[రేపు] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[నిన్న] LT',
	            lastWeek : '[గత] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s లో',
	            past : '%s క్రితం',
	            s : 'కొన్ని క్షణాలు',
	            m : 'ఒక నిమిషం',
	            mm : '%d నిమిషాలు',
	            h : 'ఒక గంట',
	            hh : '%d గంటలు',
	            d : 'ఒక రోజు',
	            dd : '%d రోజులు',
	            M : 'ఒక నెల',
	            MM : '%d నెలలు',
	            y : 'ఒక సంవత్సరం',
	            yy : '%d సంవత్సరాలు'
	        },
	        ordinalParse : /\d{1,2}వ/,
	        ordinal : '%dవ',
	        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'రాత్రి') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ఉదయం') {
	                return hour;
	            } else if (meridiem === 'మధ్యాహ్నం') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'సాయంత్రం') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'రాత్రి';
	            } else if (hour < 10) {
	                return 'ఉదయం';
	            } else if (hour < 17) {
	                return 'మధ్యాహ్నం';
	            } else if (hour < 20) {
	                return 'సాయంత్రం';
	            } else {
	                return 'రాత్రి';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return te;
	
	}));

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : thai (th)
	//! author : Kridsada Thanabulpong : https://github.com/sirn
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var th = moment.defineLocale('th', {
	        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
	        monthsShort : 'มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
	        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
	        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H นาฬิกา m นาที',
	            LTS : 'H นาฬิกา m นาที s วินาที',
	            L : 'YYYY/MM/DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY เวลา H นาฬิกา m นาที',
	            LLLL : 'วันddddที่ D MMMM YYYY เวลา H นาฬิกา m นาที'
	        },
	        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
	        isPM: function (input) {
	            return input === 'หลังเที่ยง';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ก่อนเที่ยง';
	            } else {
	                return 'หลังเที่ยง';
	            }
	        },
	        calendar : {
	            sameDay : '[วันนี้ เวลา] LT',
	            nextDay : '[พรุ่งนี้ เวลา] LT',
	            nextWeek : 'dddd[หน้า เวลา] LT',
	            lastDay : '[เมื่อวานนี้ เวลา] LT',
	            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'อีก %s',
	            past : '%sที่แล้ว',
	            s : 'ไม่กี่วินาที',
	            m : '1 นาที',
	            mm : '%d นาที',
	            h : '1 ชั่วโมง',
	            hh : '%d ชั่วโมง',
	            d : '1 วัน',
	            dd : '%d วัน',
	            M : '1 เดือน',
	            MM : '%d เดือน',
	            y : '1 ปี',
	            yy : '%d ปี'
	        }
	    });
	
	    return th;
	
	}));

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tagalog/Filipino (tl-ph)
	//! author : Dan Hagman
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var tl_ph = moment.defineLocale('tl-ph', {
	        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
	        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
	        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
	        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
	        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'MM/D/YYYY',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY HH:mm',
	            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Ngayon sa] LT',
	            nextDay: '[Bukas sa] LT',
	            nextWeek: 'dddd [sa] LT',
	            lastDay: '[Kahapon sa] LT',
	            lastWeek: 'dddd [huling linggo] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'sa loob ng %s',
	            past : '%s ang nakalipas',
	            s : 'ilang segundo',
	            m : 'isang minuto',
	            mm : '%d minuto',
	            h : 'isang oras',
	            hh : '%d oras',
	            d : 'isang araw',
	            dd : '%d araw',
	            M : 'isang buwan',
	            MM : '%d buwan',
	            y : 'isang taon',
	            yy : '%d taon'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return tl_ph;
	
	}));

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Klingon (tlh)
	//! author : Dominika Kruk : https://github.com/amaranthrose
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');
	
	    function translateFuture(output) {
	        var time = output;
	        time = (output.indexOf('jaj') !== -1) ?
	    	time.slice(0, -3) + 'leS' :
	    	(output.indexOf('jar') !== -1) ?
	    	time.slice(0, -3) + 'waQ' :
	    	(output.indexOf('DIS') !== -1) ?
	    	time.slice(0, -3) + 'nem' :
	    	time + ' pIq';
	        return time;
	    }
	
	    function translatePast(output) {
	        var time = output;
	        time = (output.indexOf('jaj') !== -1) ?
	    	time.slice(0, -3) + 'Hu’' :
	    	(output.indexOf('jar') !== -1) ?
	    	time.slice(0, -3) + 'wen' :
	    	(output.indexOf('DIS') !== -1) ?
	    	time.slice(0, -3) + 'ben' :
	    	time + ' ret';
	        return time;
	    }
	
	    function translate(number, withoutSuffix, string, isFuture) {
	        var numberNoun = numberAsNoun(number);
	        switch (string) {
	            case 'mm':
	                return numberNoun + ' tup';
	            case 'hh':
	                return numberNoun + ' rep';
	            case 'dd':
	                return numberNoun + ' jaj';
	            case 'MM':
	                return numberNoun + ' jar';
	            case 'yy':
	                return numberNoun + ' DIS';
	        }
	    }
	
	    function numberAsNoun(number) {
	        var hundred = Math.floor((number % 1000) / 100),
	    	ten = Math.floor((number % 100) / 10),
	    	one = number % 10,
	    	word = '';
	        if (hundred > 0) {
	            word += numbersNouns[hundred] + 'vatlh';
	        }
	        if (ten > 0) {
	            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
	        }
	        if (one > 0) {
	            word += ((word !== '') ? ' ' : '') + numbersNouns[one];
	        }
	        return (word === '') ? 'pagh' : word;
	    }
	
	    var tlh = moment.defineLocale('tlh', {
	        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
	        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[DaHjaj] LT',
	            nextDay: '[wa’leS] LT',
	            nextWeek: 'LLL',
	            lastDay: '[wa’Hu’] LT',
	            lastWeek: 'LLL',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : translateFuture,
	            past : translatePast,
	            s : 'puS lup',
	            m : 'wa’ tup',
	            mm : translate,
	            h : 'wa’ rep',
	            hh : translate,
	            d : 'wa’ jaj',
	            dd : translate,
	            M : 'wa’ jar',
	            MM : translate,
	            y : 'wa’ DIS',
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return tlh;
	
	}));

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : turkish (tr)
	//! authors : Erhan Gundogan : https://github.com/erhangundogan,
	//!           Burak Yiğit Kaya: https://github.com/BYK
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var suffixes = {
	        1: '\'inci',
	        5: '\'inci',
	        8: '\'inci',
	        70: '\'inci',
	        80: '\'inci',
	        2: '\'nci',
	        7: '\'nci',
	        20: '\'nci',
	        50: '\'nci',
	        3: '\'üncü',
	        4: '\'üncü',
	        100: '\'üncü',
	        6: '\'ncı',
	        9: '\'uncu',
	        10: '\'uncu',
	        30: '\'uncu',
	        60: '\'ıncı',
	        90: '\'ıncı'
	    };
	
	    var tr = moment.defineLocale('tr', {
	        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
	        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
	        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
	        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
	        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[yarın saat] LT',
	            nextWeek : '[haftaya] dddd [saat] LT',
	            lastDay : '[dün] LT',
	            lastWeek : '[geçen hafta] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s önce',
	            s : 'birkaç saniye',
	            m : 'bir dakika',
	            mm : '%d dakika',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir yıl',
	            yy : '%d yıl'
	        },
	        ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '\'ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return tr;
	
	}));

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : talossan (tzl)
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v with the help of Iustì Canun
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	
	    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
	    // This is currently too difficult (maybe even impossible) to add.
	    var tzl = moment.defineLocale('tzl', {
	        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
	        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
	        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
	        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM [dallas] YYYY',
	            LLL : 'D. MMMM [dallas] YYYY HH.mm',
	            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
	        },
	        meridiemParse: /d\'o|d\'a/i,
	        isPM : function (input) {
	            return 'd\'o' === input.toLowerCase();
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'd\'o' : 'D\'O';
	            } else {
	                return isLower ? 'd\'a' : 'D\'A';
	            }
	        },
	        calendar : {
	            sameDay : '[oxhi à] LT',
	            nextDay : '[demà à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[ieiri à] LT',
	            lastWeek : '[sür el] dddd [lasteu à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'osprei %s',
	            past : 'ja%s',
	            s : processRelativeTime,
	            m : processRelativeTime,
	            mm : processRelativeTime,
	            h : processRelativeTime,
	            hh : processRelativeTime,
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['viensas secunds', '\'iensas secunds'],
	            'm': ['\'n míut', '\'iens míut'],
	            'mm': [number + ' míuts', '' + number + ' míuts'],
	            'h': ['\'n þora', '\'iensa þora'],
	            'hh': [number + ' þoras', '' + number + ' þoras'],
	            'd': ['\'n ziua', '\'iensa ziua'],
	            'dd': [number + ' ziuas', '' + number + ' ziuas'],
	            'M': ['\'n mes', '\'iens mes'],
	            'MM': [number + ' mesen', '' + number + ' mesen'],
	            'y': ['\'n ar', '\'iens ar'],
	            'yy': [number + ' ars', '' + number + ' ars']
	        };
	        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
	    }
	
	    return tzl;
	
	}));

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Morocco Central Atlas Tamaziɣt (tzm)
	//! author : Abdel Said : https://github.com/abdelsaid
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var tzm = moment.defineLocale('tzm', {
	        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
	            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	            nextWeek: 'dddd [ⴴ] LT',
	            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	            lastWeek: 'dddd [ⴴ] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
	            past : 'ⵢⴰⵏ %s',
	            s : 'ⵉⵎⵉⴽ',
	            m : 'ⵎⵉⵏⵓⴺ',
	            mm : '%d ⵎⵉⵏⵓⴺ',
	            h : 'ⵙⴰⵄⴰ',
	            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
	            d : 'ⴰⵙⵙ',
	            dd : '%d oⵙⵙⴰⵏ',
	            M : 'ⴰⵢoⵓⵔ',
	            MM : '%d ⵉⵢⵢⵉⵔⵏ',
	            y : 'ⴰⵙⴳⴰⵙ',
	            yy : '%d ⵉⵙⴳⴰⵙⵏ'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return tzm;
	
	}));

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Morocco Central Atlas Tamaziɣt in Latin (tzm-latn)
	//! author : Abdel Said : https://github.com/abdelsaid
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var tzm_latn = moment.defineLocale('tzm-latn', {
	        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[asdkh g] LT',
	            nextDay: '[aska g] LT',
	            nextWeek: 'dddd [g] LT',
	            lastDay: '[assant g] LT',
	            lastWeek: 'dddd [g] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dadkh s yan %s',
	            past : 'yan %s',
	            s : 'imik',
	            m : 'minuḍ',
	            mm : '%d minuḍ',
	            h : 'saɛa',
	            hh : '%d tassaɛin',
	            d : 'ass',
	            dd : '%d ossan',
	            M : 'ayowr',
	            MM : '%d iyyirn',
	            y : 'asgas',
	            yy : '%d isgasn'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return tzm_latn;
	
	}));

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : ukrainian (uk)
	//! author : zemlanin : https://github.com/zemlanin
	//! Author : Menelion Elensúle : https://github.com/Oire
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
	            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
	            'dd': 'день_дні_днів',
	            'MM': 'місяць_місяці_місяців',
	            'yy': 'рік_роки_років'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвилина' : 'хвилину';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'година' : 'годину';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	        },
	        nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
	            'accusative' :
	            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
	                'genitive' :
	                'nominative');
	        return weekdays[nounCase][m.day()];
	    }
	    function processHoursFunction(str) {
	        return function () {
	            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	        };
	    }
	
	    var uk = moment.defineLocale('uk', {
	        months : {
	            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
	            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
	        },
	        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY р.',
	            LLL : 'D MMMM YYYY р., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
	        },
	        calendar : {
	            sameDay: processHoursFunction('[Сьогодні '),
	            nextDay: processHoursFunction('[Завтра '),
	            lastDay: processHoursFunction('[Вчора '),
	            nextWeek: processHoursFunction('[У] dddd ['),
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return processHoursFunction('[Минулої] dddd [').call(this);
	                case 1:
	                case 2:
	                case 4:
	                    return processHoursFunction('[Минулого] dddd [').call(this);
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past : '%s тому',
	            s : 'декілька секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'годину',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'місяць',
	            MM : relativeTimeWithPlural,
	            y : 'рік',
	            yy : relativeTimeWithPlural
	        },
	        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
	        meridiemParse: /ночі|ранку|дня|вечора/,
	        isPM: function (input) {
	            return /^(дня|вечора)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночі';
	            } else if (hour < 12) {
	                return 'ранку';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечора';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return uk;
	
	}));

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : uzbek (uz)
	//! author : Sardor Muminov : https://github.com/muminoff
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var uz = moment.defineLocale('uz', {
	        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
	        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
	        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
	        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'D MMMM YYYY, dddd HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бугун соат] LT [да]',
	            nextDay : '[Эртага] LT [да]',
	            nextWeek : 'dddd [куни соат] LT [да]',
	            lastDay : '[Кеча соат] LT [да]',
	            lastWeek : '[Утган] dddd [куни соат] LT [да]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'Якин %s ичида',
	            past : 'Бир неча %s олдин',
	            s : 'фурсат',
	            m : 'бир дакика',
	            mm : '%d дакика',
	            h : 'бир соат',
	            hh : '%d соат',
	            d : 'бир кун',
	            dd : '%d кун',
	            M : 'бир ой',
	            MM : '%d ой',
	            y : 'бир йил',
	            yy : '%d йил'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return uz;
	
	}));

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : vietnamese (vi)
	//! author : Bang Nguyen : https://github.com/bangnk
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var vi = moment.defineLocale('vi', {
	        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
	        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
	        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysParseExact : true,
	        meridiemParse: /sa|ch/i,
	        isPM : function (input) {
	            return /^ch$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'sa' : 'SA';
	            } else {
	                return isLower ? 'ch' : 'CH';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM [năm] YYYY',
	            LLL : 'D MMMM [năm] YYYY HH:mm',
	            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
	            l : 'DD/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hôm nay lúc] LT',
	            nextDay: '[Ngày mai lúc] LT',
	            nextWeek: 'dddd [tuần tới lúc] LT',
	            lastDay: '[Hôm qua lúc] LT',
	            lastWeek: 'dddd [tuần rồi lúc] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s tới',
	            past : '%s trước',
	            s : 'vài giây',
	            m : 'một phút',
	            mm : '%d phút',
	            h : 'một giờ',
	            hh : '%d giờ',
	            d : 'một ngày',
	            dd : '%d ngày',
	            M : 'một tháng',
	            MM : '%d tháng',
	            y : 'một năm',
	            yy : '%d năm'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return vi;
	
	}));

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : pseudo (x-pseudo)
	//! author : Andrew Hood : https://github.com/andrewhood125
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var x_pseudo = moment.defineLocale('x-pseudo', {
	        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
	        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
	        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
	        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[T~ódá~ý át] LT',
	            nextDay : '[T~ómó~rró~w át] LT',
	            nextWeek : 'dddd [át] LT',
	            lastDay : '[Ý~ést~érdá~ý át] LT',
	            lastWeek : '[L~ást] dddd [át] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'í~ñ %s',
	            past : '%s á~gó',
	            s : 'á ~féw ~sécó~ñds',
	            m : 'á ~míñ~úté',
	            mm : '%d m~íñú~tés',
	            h : 'á~ñ hó~úr',
	            hh : '%d h~óúrs',
	            d : 'á ~dáý',
	            dd : '%d d~áýs',
	            M : 'á ~móñ~th',
	            MM : '%d m~óñt~hs',
	            y : 'á ~ýéár',
	            yy : '%d ý~éárs'
	        },
	        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return x_pseudo;
	
	}));

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : chinese (zh-cn)
	//! author : suupic : https://github.com/suupic
	//! author : Zeno Zeng : https://github.com/zenozeng
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var zh_cn = moment.defineLocale('zh-cn', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'Ah点mm分',
	            LTS : 'Ah点m分s秒',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY年MMMD日',
	            LLL : 'YYYY年MMMD日Ah点mm分',
	            LLLL : 'YYYY年MMMD日ddddAh点mm分',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY年MMMD日',
	            lll : 'YYYY年MMMD日Ah点mm分',
	            llll : 'YYYY年MMMD日ddddAh点mm分'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' ||
	                    meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            } else {
	                // '中午'
	                return hour >= 11 ? hour : hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : function () {
	                return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';
	            },
	            nextDay : function () {
	                return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';
	            },
	            lastDay : function () {
	                return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';
	            },
	            nextWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.diff(startOfWeek, 'days') >= 7 ? '[下]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            lastWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            sameElse : 'LL'
	        },
	        ordinalParse: /\d{1,2}(日|月|周)/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            case 'M':
	                return number + '月';
	            case 'w':
	            case 'W':
	                return number + '周';
	            default:
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s内',
	            past : '%s前',
	            s : '几秒',
	            m : '1 分钟',
	            mm : '%d 分钟',
	            h : '1 小时',
	            hh : '%d 小时',
	            d : '1 天',
	            dd : '%d 天',
	            M : '1 个月',
	            MM : '%d 个月',
	            y : '1 年',
	            yy : '%d 年'
	        },
	        week : {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return zh_cn;
	
	}));

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : traditional chinese (zh-tw)
	//! author : Ben : https://github.com/ben-lin
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(15)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';
	
	
	    var zh_tw = moment.defineLocale('zh-tw', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'Ah點mm分',
	            LTS : 'Ah點m分s秒',
	            L : 'YYYY年MMMD日',
	            LL : 'YYYY年MMMD日',
	            LLL : 'YYYY年MMMD日Ah點mm分',
	            LLLL : 'YYYY年MMMD日ddddAh點mm分',
	            l : 'YYYY年MMMD日',
	            ll : 'YYYY年MMMD日',
	            lll : 'YYYY年MMMD日Ah點mm分',
	            llll : 'YYYY年MMMD日ddddAh點mm分'
	        },
	        meridiemParse: /早上|上午|中午|下午|晚上/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : '[今天]LT',
	            nextDay : '[明天]LT',
	            nextWeek : '[下]ddddLT',
	            lastDay : '[昨天]LT',
	            lastWeek : '[上]ddddLT',
	            sameElse : 'L'
	        },
	        ordinalParse: /\d{1,2}(日|月|週)/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd' :
	            case 'D' :
	            case 'DDD' :
	                return number + '日';
	            case 'M' :
	                return number + '月';
	            case 'w' :
	            case 'W' :
	                return number + '週';
	            default :
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s內',
	            past : '%s前',
	            s : '幾秒',
	            m : '1分鐘',
	            mm : '%d分鐘',
	            h : '1小時',
	            hh : '%d小時',
	            d : '1天',
	            dd : '%d天',
	            M : '1個月',
	            MM : '%d個月',
	            y : '1年',
	            yy : '%d年'
	        }
	    });
	
	    return zh_tw;
	
	}));

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.MOMENT_TIME_FORMATTING = exports.MS_BY_UNIT = exports.finishLearn = exports.transitionLearn = exports.learnClasses = exports.getLearnStep = undefined;
	
	var _learn = __webpack_require__(13);
	
	Object.defineProperty(exports, 'getLearnStep', {
	  enumerable: true,
	  get: function get() {
	    return _learn.getLearnStep;
	  }
	});
	Object.defineProperty(exports, 'learnClasses', {
	  enumerable: true,
	  get: function get() {
	    return _learn.learnClasses;
	  }
	});
	Object.defineProperty(exports, 'transitionLearn', {
	  enumerable: true,
	  get: function get() {
	    return _learn.transitionLearn;
	  }
	});
	Object.defineProperty(exports, 'finishLearn', {
	  enumerable: true,
	  get: function get() {
	    return _learn.finishLearn;
	  }
	});
	exports.epochToFormattedDate = epochToFormattedDate;
	exports.formatDateISO = formatDateISO;
	exports.formatDateDisplay = formatDateDisplay;
	exports.parseDate = parseDate;
	exports.relativeToAbsoluteDate = relativeToAbsoluteDate;
	exports.normalizeDates = normalizeDates;
	exports.unitForDateRange = unitForDateRange;
	
	var _moment = __webpack_require__(15);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var MS_IN_HOUR = 60 * 60 * 1000;
	var MS_IN_DAY = MS_IN_HOUR * 24;
	var MS_BY_UNIT = exports.MS_BY_UNIT = {
	  hour: MS_IN_HOUR,
	  day: MS_IN_DAY,
	  week: MS_IN_DAY * 7,
	  month: MS_IN_DAY * 30,
	  quarter: MS_IN_DAY * 90,
	  year: MS_IN_DAY * 365
	};
	
	var MOMENT_TIME_FORMATTING = exports.MOMENT_TIME_FORMATTING = {
	  'hour': 'MMM D[,] ha',
	  'day': 'ddd, MMM Do',
	  'week': 'MMM D',
	  'month': 'MMM YYYY',
	  'quarter': '[Q]Q YYYY',
	  'year': 'YYYY'
	};
	
	function epochToFormattedDate(epoch, unit) {
	  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
	      _ref$displayRangeIfWe = _ref.displayRangeIfWeek,
	      displayRangeIfWeek = _ref$displayRangeIfWe === undefined ? true : _ref$displayRangeIfWe,
	      _ref$customFormatting = _ref.customFormatting,
	      customFormatting = _ref$customFormatting === undefined ? {} : _ref$customFormatting;
	
	  var timeFormat = customFormatting[unit] || MOMENT_TIME_FORMATTING[unit];
	  var epochMoment = _moment2.default.utc(Number(epoch));
	  if (displayRangeIfWeek && unit === 'week') {
	    return epochMoment.format(timeFormat) + ' - ' + epochMoment.add(6, 'days').format(timeFormat);
	  } else {
	    return epochMoment.format(timeFormat);
	  }
	}
	
	function formatDateISO(date) {
	  date = (0, _moment2.default)(date);
	  return date.isValid() ? date.format().slice(0, 10) : null;
	}
	
	function formatDateDisplay(date) {
	  date = (0, _moment2.default)(date);
	  return date.isValid() ? date.format('MMM D, YYYY') : '';
	}
	
	var MIN_VALID_YEAR = 2002;
	
	function parseDate(dateString) {
	  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref2$startOfDay = _ref2.startOfDay,
	      startOfDay = _ref2$startOfDay === undefined ? false : _ref2$startOfDay,
	      _ref2$endOfDay = _ref2.endOfDay,
	      endOfDay = _ref2$endOfDay === undefined ? false : _ref2$endOfDay;
	
	  if (typeof dateString !== 'string') {
	    return null;
	  }
	
	  // strip out all chars other than alphanumerics and "./-"
	  // this allows strings like '"2017-02-02"' to be parsed correctly
	  dateString = dateString.replace(/[^\w\s-/.]/g, '');
	
	  var timestamp = Number((0, _moment2.default)(dateString));
	
	  if (!Number.isInteger(timestamp)) {
	    return null;
	  }
	
	  var date = new Date(timestamp);
	
	  if (startOfDay) {
	    date.setHours(0, 0, 0, 0);
	  }
	
	  if (endOfDay) {
	    date.setHours(23, 59, 59, 999);
	  }
	
	  // allow date strings like 1/12 to be parsed with year set to the current year
	  if (MIN_VALID_YEAR && date.getFullYear() < MIN_VALID_YEAR) {
	    date.setFullYear(new Date().getFullYear());
	  }
	
	  return date;
	}
	
	function relativeToAbsoluteDate(relativeDateInt, unit) {
	  return new Date((0, _moment2.default)().subtract(relativeDateInt, unit + 's'));
	}
	
	function normalizeDates() {
	  var now = new Date();
	
	  for (var _len = arguments.length, dates = Array(_len), _key = 0; _key < _len; _key++) {
	    dates[_key] = arguments[_key];
	  }
	
	  return dates.map(parseDate).filter(function (date) {
	    return date;
	  }).map(function (date) {
	    return date > now ? now : date;
	  }).map(function (date) {
	    return date.getTime();
	  }).sort().map(formatDateISO);
	}
	
	function unitForDateRange(from, to) {
	  var daysApart = (0, _moment2.default)(to).diff((0, _moment2.default)(from), 'days') + 1;
	
	  if (daysApart <= 4) {
	    return 'hour';
	  } else if (daysApart <= 31) {
	    return 'day';
	  } else if (daysApart <= 183) {
	    return 'week';
	  } else {
	    return 'month';
	  }
	}

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.toArbSelectorPropertyToken = toArbSelectorPropertyToken;
	exports.isFilterValid = isFilterValid;
	exports.filterToArbSelectorString = filterToArbSelectorString;
	
	var _index = __webpack_require__(8);
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function toArbSelectorPropertyToken(resourceType, property) {
	  return (resourceType === 'events' ? 'properties' : 'user') + '["' + property + '"]';
	}
	
	function isFilterValid(filter) {
	  if (!filter.value) {
	    return false;
	  }
	
	  var isSetOrBoolean = ['is set', 'is not set', 'is true', 'is false'].includes(filter.filterOperator);
	  var isBetween = ['is between', 'was between'].includes(filter.filterOperator);
	  var isRelativeDate = filter.filterType === 'datetime' && ['was more than', 'was less than', 'was in'].includes(filter.filterOperator);
	
	  // filter must have a value UNLESS it is set or boolean
	  if (!isSetOrBoolean && !filter.filterValue) {
	    return false;
	  }
	
	  // between filter must have a value of length 2 with both entries present
	  if (isBetween && (!filter.filterValue || filter.filterValue.length !== 2 || typeof filter.filterValue[0] === 'undefined' || typeof filter.filterValue[1] === 'undefined')) {
	    return false;
	  }
	
	  // relative date filter must have a value and a unit
	  if (isRelativeDate && (!filter.filterValue || !filter.filterDateUnit)) {
	    return false;
	  }
	
	  return true;
	}
	
	function filterToArbSelectorString(filter) {
	  var property = filter.value;
	  var type = filter.filterType;
	  var operator = filter.filterOperator;
	  var value = filter.filterValue;
	  var dateUnit = filter.filterDateUnit;
	
	  property = '(' + toArbSelectorPropertyToken(filter.resourceType, property) + ')';
	
	  if (typeof value === 'string') {
	    value = '"' + value + '"';
	  } else if (Array.isArray(value)) {
	    value = value.map(function (val) {
	      return typeof val === 'string' ? '"' + val + '"' : val;
	    });
	  }
	
	  switch (type) {
	    case 'string':
	      if (operator === 'equals' || operator === 'does not equal') {
	        if (!Array.isArray(value)) {
	          value = [value];
	        }
	      }
	      switch (operator) {
	        case 'equals':
	          return '(' + value.map(function (val) {
	            return '(' + property + ' == ' + val + ')';
	          }).join(' or ') + ')';
	        case 'does not equal':
	          return '(' + value.map(function (val) {
	            return '(' + property + ' != ' + val + ')';
	          }).join(' and ') + ')';
	        case 'contains':
	          return '(' + value + ' in ' + property + ')';
	        case 'does not contain':
	          return '(not ' + value + ' in ' + property + ')';
	        case 'is set':
	          return '(defined ' + property + ')';
	        case 'is not set':
	          return '(not defined ' + property + ')';
	      }
	      break;
	    case 'number':
	      switch (operator) {
	        case 'is between':
	          return '((' + property + ' > ' + value[0] + ') and (' + property + ' < ' + value[1] + '))';
	        case 'is equal to':
	          return '(' + property + ' == ' + value + ')';
	        case 'is less than':
	          return '(' + property + ' < ' + value + ')';
	        case 'is greater than':
	          return '(' + property + ' > ' + value + ')';
	      }
	      break;
	    case 'datetime':
	      {
	        var _ret = function () {
	          var unitsAgo = function unitsAgo(units) {
	            return new Date().getTime() - units * _index.MS_BY_UNIT[dateUnit];
	          };
	          var startOfDay = function startOfDay(date) {
	            return (0, _index.parseDate)(date, { startOfDay: true }).getTime();
	          };
	          var endOfDay = function endOfDay(date) {
	            return (0, _index.parseDate)(date, { endOfDay: true }).getTime();
	          };
	
	          var lessRecentlyThan = function lessRecentlyThan(timestamp) {
	            return '(' + property + ' < datetime(' + timestamp + '))';
	          };
	          var moreRecentlyThan = function moreRecentlyThan(timestamp) {
	            return '(' + property + ' > datetime(' + timestamp + '))';
	          };
	          var between = function between(from, to) {
	            return '((' + property + ' >= datetime(' + startOfDay(from) + ')) and (' + property + ' <= datetime(' + endOfDay(to) + ')))';
	          };
	
	          switch (operator) {
	            case 'was in the':
	            case 'was more than':
	              return {
	                v: moreRecentlyThan(unitsAgo(value))
	              };
	            case 'was less than':
	              return {
	                v: lessRecentlyThan(unitsAgo(value))
	              };
	            case 'was before':
	              return {
	                v: lessRecentlyThan(startOfDay(value))
	              };
	            case 'was after':
	              return {
	                v: moreRecentlyThan(endOfDay(value))
	              };
	            case 'was on':
	              return {
	                v: between(value, value)
	              };
	            case 'was between':
	              return {
	                v: between.apply(undefined, _toConsumableArray(value))
	              };
	          }
	          return 'break';
	        }();
	
	        switch (_ret) {
	          case 'break':
	            break;
	
	          default:
	            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	        }
	      }
	    case 'boolean':
	      switch (operator) {
	        case 'is true':
	          return '(boolean(' + property + ') == true)';
	        case 'is false':
	          return '(boolean(' + property + ') == false)';
	      }
	      break;
	    case 'list':
	      switch (operator) {
	        case 'contains':
	          return '(' + value + ' in list(' + property + '))';
	        case 'does not contain':
	          return '(not ' + value + ' in list(' + property + '))';
	      }
	      break;
	  }
	}

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	var baseClone = __webpack_require__(121);
	
	/**
	 * This method is like `_.clone` except that it recursively clones `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.0.0
	 * @category Lang
	 * @param {*} value The value to recursively clone.
	 * @returns {*} Returns the deep cloned value.
	 * @see _.clone
	 * @example
	 *
	 * var objects = [{ 'a': 1 }, { 'b': 2 }];
	 *
	 * var deep = _.cloneDeep(objects);
	 * console.log(deep[0] === objects[0]);
	 * // => false
	 */
	function cloneDeep(value) {
	  return baseClone(value, true, true);
	}
	
	module.exports = cloneDeep;


/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(122),
	    arrayEach = __webpack_require__(163),
	    assignValue = __webpack_require__(164),
	    baseAssign = __webpack_require__(165),
	    cloneBuffer = __webpack_require__(181),
	    copyArray = __webpack_require__(182),
	    copySymbols = __webpack_require__(183),
	    getAllKeys = __webpack_require__(186),
	    getTag = __webpack_require__(189),
	    initCloneArray = __webpack_require__(195),
	    initCloneByTag = __webpack_require__(196),
	    initCloneObject = __webpack_require__(211),
	    isArray = __webpack_require__(175),
	    isBuffer = __webpack_require__(214),
	    isHostObject = __webpack_require__(141),
	    isObject = __webpack_require__(140),
	    keys = __webpack_require__(167);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values supported by `_.clone`. */
	var cloneableTags = {};
	cloneableTags[argsTag] = cloneableTags[arrayTag] =
	cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	cloneableTags[boolTag] = cloneableTags[dateTag] =
	cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	cloneableTags[int32Tag] = cloneableTags[mapTag] =
	cloneableTags[numberTag] = cloneableTags[objectTag] =
	cloneableTags[regexpTag] = cloneableTags[setTag] =
	cloneableTags[stringTag] = cloneableTags[symbolTag] =
	cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	cloneableTags[errorTag] = cloneableTags[funcTag] =
	cloneableTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	 * traversed objects.
	 *
	 * @private
	 * @param {*} value The value to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @param {boolean} [isFull] Specify a clone including symbols.
	 * @param {Function} [customizer] The function to customize cloning.
	 * @param {string} [key] The key of `value`.
	 * @param {Object} [object] The parent object of `value`.
	 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	 * @returns {*} Returns the cloned value.
	 */
	function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
	  var result;
	  if (customizer) {
	    result = object ? customizer(value, key, object, stack) : customizer(value);
	  }
	  if (result !== undefined) {
	    return result;
	  }
	  if (!isObject(value)) {
	    return value;
	  }
	  var isArr = isArray(value);
	  if (isArr) {
	    result = initCloneArray(value);
	    if (!isDeep) {
	      return copyArray(value, result);
	    }
	  } else {
	    var tag = getTag(value),
	        isFunc = tag == funcTag || tag == genTag;
	
	    if (isBuffer(value)) {
	      return cloneBuffer(value, isDeep);
	    }
	    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	      if (isHostObject(value)) {
	        return object ? value : {};
	      }
	      result = initCloneObject(isFunc ? {} : value);
	      if (!isDeep) {
	        return copySymbols(value, baseAssign(result, value));
	      }
	    } else {
	      if (!cloneableTags[tag]) {
	        return object ? value : {};
	      }
	      result = initCloneByTag(value, tag, baseClone, isDeep);
	    }
	  }
	  // Check for circular references and return its corresponding clone.
	  stack || (stack = new Stack);
	  var stacked = stack.get(value);
	  if (stacked) {
	    return stacked;
	  }
	  stack.set(value, result);
	
	  if (!isArr) {
	    var props = isFull ? getAllKeys(value) : keys(value);
	  }
	  arrayEach(props || value, function(subValue, key) {
	    if (props) {
	      key = subValue;
	      subValue = value[key];
	    }
	    // Recursively populate clone (susceptible to call stack limits).
	    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
	  });
	  return result;
	}
	
	module.exports = baseClone;


/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(123),
	    stackClear = __webpack_require__(131),
	    stackDelete = __webpack_require__(132),
	    stackGet = __webpack_require__(133),
	    stackHas = __webpack_require__(134),
	    stackSet = __webpack_require__(135);
	
	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  this.__data__ = new ListCache(entries);
	}
	
	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;
	
	module.exports = Stack;


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(124),
	    listCacheDelete = __webpack_require__(125),
	    listCacheGet = __webpack_require__(128),
	    listCacheHas = __webpack_require__(129),
	    listCacheSet = __webpack_require__(130);
	
	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;
	
	module.exports = ListCache;


/***/ },
/* 124 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	}
	
	module.exports = listCacheClear;


/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(126);
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype;
	
	/** Built-in value references. */
	var splice = arrayProto.splice;
	
	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  return true;
	}
	
	module.exports = listCacheDelete;


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(127);
	
	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	module.exports = assocIndexOf;


/***/ },
/* 127 */
/***/ function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	module.exports = eq;


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(126);
	
	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  return index < 0 ? undefined : data[index][1];
	}
	
	module.exports = listCacheGet;


/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(126);
	
	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}
	
	module.exports = listCacheHas;


/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(126);
	
	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}
	
	module.exports = listCacheSet;


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(123);
	
	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	}
	
	module.exports = stackClear;


/***/ },
/* 132 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  return this.__data__['delete'](key);
	}
	
	module.exports = stackDelete;


/***/ },
/* 133 */
/***/ function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}
	
	module.exports = stackGet;


/***/ },
/* 134 */
/***/ function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}
	
	module.exports = stackHas;


/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(123),
	    Map = __webpack_require__(136),
	    MapCache = __webpack_require__(148);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var cache = this.__data__;
	  if (cache instanceof ListCache) {
	    var pairs = cache.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      return this;
	    }
	    cache = this.__data__ = new MapCache(pairs);
	  }
	  cache.set(key, value);
	  return this;
	}
	
	module.exports = stackSet;


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(137),
	    root = __webpack_require__(144);
	
	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');
	
	module.exports = Map;


/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(138),
	    getValue = __webpack_require__(147);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}
	
	module.exports = getNative;


/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(139),
	    isHostObject = __webpack_require__(141),
	    isMasked = __webpack_require__(142),
	    isObject = __webpack_require__(140),
	    toSource = __webpack_require__(146);
	
	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
	
	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}
	
	module.exports = baseIsNative;


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(140);
	
	/** `Object#toString` result references. */
	var funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8-9 which returns 'object' for typed array and other constructors.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	module.exports = isFunction;


/***/ },
/* 140 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ },
/* 141 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}
	
	module.exports = isHostObject;


/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(143);
	
	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());
	
	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}
	
	module.exports = isMasked;


/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(144);
	
	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];
	
	module.exports = coreJsData;


/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(145);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ },
/* 145 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 146 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to process.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}
	
	module.exports = toSource;


/***/ },
/* 147 */
/***/ function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}
	
	module.exports = getValue;


/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(149),
	    mapCacheDelete = __webpack_require__(157),
	    mapCacheGet = __webpack_require__(160),
	    mapCacheHas = __webpack_require__(161),
	    mapCacheSet = __webpack_require__(162);
	
	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;
	
	module.exports = MapCache;


/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(150),
	    ListCache = __webpack_require__(123),
	    Map = __webpack_require__(136);
	
	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}
	
	module.exports = mapCacheClear;


/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(151),
	    hashDelete = __webpack_require__(153),
	    hashGet = __webpack_require__(154),
	    hashHas = __webpack_require__(155),
	    hashSet = __webpack_require__(156);
	
	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;
	
	module.exports = Hash;


/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(152);
	
	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	}
	
	module.exports = hashClear;


/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(137);
	
	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');
	
	module.exports = nativeCreate;


/***/ },
/* 153 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  return this.has(key) && delete this.__data__[key];
	}
	
	module.exports = hashDelete;


/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(152);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}
	
	module.exports = hashGet;


/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(152);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	}
	
	module.exports = hashHas;


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(152);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}
	
	module.exports = hashSet;


/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(158);
	
	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  return getMapData(this, key)['delete'](key);
	}
	
	module.exports = mapCacheDelete;


/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(159);
	
	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}
	
	module.exports = getMapData;


/***/ },
/* 159 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}
	
	module.exports = isKeyable;


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(158);
	
	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}
	
	module.exports = mapCacheGet;


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(158);
	
	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}
	
	module.exports = mapCacheHas;


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(158);
	
	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  getMapData(this, key).set(key, value);
	  return this;
	}
	
	module.exports = mapCacheSet;


/***/ },
/* 163 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array ? array.length : 0;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	module.exports = arrayEach;


/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(127);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    object[key] = value;
	  }
	}
	
	module.exports = assignValue;


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(166),
	    keys = __webpack_require__(167);
	
	/**
	 * The base implementation of `_.assign` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssign(object, source) {
	  return object && copyObject(source, keys(source), object);
	}
	
	module.exports = baseAssign;


/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(164);
	
	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	
	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;
	
	    assignValue(object, key, newValue === undefined ? source[key] : newValue);
	  }
	  return object;
	}
	
	module.exports = copyObject;


/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(168),
	    baseKeys = __webpack_require__(177),
	    isArrayLike = __webpack_require__(172);
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}
	
	module.exports = keys;


/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(169),
	    isArguments = __webpack_require__(170),
	    isArray = __webpack_require__(175),
	    isIndex = __webpack_require__(176);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  // Safari 9 makes `arguments.length` enumerable in strict mode.
	  var result = (isArray(value) || isArguments(value))
	    ? baseTimes(value.length, String)
	    : [];
	
	  var length = result.length,
	      skipIndexes = !!length;
	
	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = arrayLikeKeys;


/***/ },
/* 169 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	module.exports = baseTimes;


/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(171);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	module.exports = isArguments;


/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(172),
	    isObjectLike = __webpack_require__(174);
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	module.exports = isArrayLikeObject;


/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(139),
	    isLength = __webpack_require__(173);
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	module.exports = isArrayLike;


/***/ },
/* 173 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;


/***/ },
/* 174 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ },
/* 175 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	module.exports = isArray;


/***/ },
/* 176 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	module.exports = isIndex;


/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	var isPrototype = __webpack_require__(178),
	    nativeKeys = __webpack_require__(179);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = baseKeys;


/***/ },
/* 178 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	module.exports = isPrototype;


/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(180);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);
	
	module.exports = nativeKeys;


/***/ },
/* 180 */
/***/ function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ },
/* 181 */
/***/ function(module, exports) {

	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var result = new buffer.constructor(buffer.length);
	  buffer.copy(result);
	  return result;
	}
	
	module.exports = cloneBuffer;


/***/ },
/* 182 */
/***/ function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;
	
	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}
	
	module.exports = copyArray;


/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(166),
	    getSymbols = __webpack_require__(184);
	
	/**
	 * Copies own symbol properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbols(source, object) {
	  return copyObject(source, getSymbols(source), object);
	}
	
	module.exports = copySymbols;


/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(180),
	    stubArray = __webpack_require__(185);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;
	
	/**
	 * Creates an array of the own enumerable symbol properties of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;
	
	module.exports = getSymbols;


/***/ },
/* 185 */
/***/ function(module, exports) {

	/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}
	
	module.exports = stubArray;


/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(187),
	    getSymbols = __webpack_require__(184),
	    keys = __webpack_require__(167);
	
	/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}
	
	module.exports = getAllKeys;


/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(188),
	    isArray = __webpack_require__(175);
	
	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}
	
	module.exports = baseGetAllKeys;


/***/ },
/* 188 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;
	
	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}
	
	module.exports = arrayPush;


/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(190),
	    Map = __webpack_require__(136),
	    Promise = __webpack_require__(191),
	    Set = __webpack_require__(192),
	    WeakMap = __webpack_require__(193),
	    baseGetTag = __webpack_require__(194),
	    toSource = __webpack_require__(146);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';
	
	var dataViewTag = '[object DataView]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);
	
	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;
	
	// Fallback for data views, maps, sets, and weak maps in IE 11,
	// for data views in Edge < 14, and promises in Node.js.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = objectToString.call(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : undefined;
	
	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}
	
	module.exports = getTag;


/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(137),
	    root = __webpack_require__(144);
	
	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');
	
	module.exports = DataView;


/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(137),
	    root = __webpack_require__(144);
	
	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');
	
	module.exports = Promise;


/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(137),
	    root = __webpack_require__(144);
	
	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');
	
	module.exports = Set;


/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(137),
	    root = __webpack_require__(144);
	
	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');
	
	module.exports = WeakMap;


/***/ },
/* 194 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * The base implementation of `getTag`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  return objectToString.call(value);
	}
	
	module.exports = baseGetTag;


/***/ },
/* 195 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Initializes an array clone.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the initialized clone.
	 */
	function initCloneArray(array) {
	  var length = array.length,
	      result = array.constructor(length);
	
	  // Add properties assigned by `RegExp#exec`.
	  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	    result.index = array.index;
	    result.input = array.input;
	  }
	  return result;
	}
	
	module.exports = initCloneArray;


/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(197),
	    cloneDataView = __webpack_require__(199),
	    cloneMap = __webpack_require__(200),
	    cloneRegExp = __webpack_require__(204),
	    cloneSet = __webpack_require__(205),
	    cloneSymbol = __webpack_require__(208),
	    cloneTypedArray = __webpack_require__(210);
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/**
	 * Initializes an object clone based on its `toStringTag`.
	 *
	 * **Note:** This function only supports cloning values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @param {string} tag The `toStringTag` of the object to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneByTag(object, tag, cloneFunc, isDeep) {
	  var Ctor = object.constructor;
	  switch (tag) {
	    case arrayBufferTag:
	      return cloneArrayBuffer(object);
	
	    case boolTag:
	    case dateTag:
	      return new Ctor(+object);
	
	    case dataViewTag:
	      return cloneDataView(object, isDeep);
	
	    case float32Tag: case float64Tag:
	    case int8Tag: case int16Tag: case int32Tag:
	    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	      return cloneTypedArray(object, isDeep);
	
	    case mapTag:
	      return cloneMap(object, isDeep, cloneFunc);
	
	    case numberTag:
	    case stringTag:
	      return new Ctor(object);
	
	    case regexpTag:
	      return cloneRegExp(object);
	
	    case setTag:
	      return cloneSet(object, isDeep, cloneFunc);
	
	    case symbolTag:
	      return cloneSymbol(object);
	  }
	}
	
	module.exports = initCloneByTag;


/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	var Uint8Array = __webpack_require__(198);
	
	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}
	
	module.exports = cloneArrayBuffer;


/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(144);
	
	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;
	
	module.exports = Uint8Array;


/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(197);
	
	/**
	 * Creates a clone of `dataView`.
	 *
	 * @private
	 * @param {Object} dataView The data view to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned data view.
	 */
	function cloneDataView(dataView, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	}
	
	module.exports = cloneDataView;


/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	var addMapEntry = __webpack_require__(201),
	    arrayReduce = __webpack_require__(202),
	    mapToArray = __webpack_require__(203);
	
	/**
	 * Creates a clone of `map`.
	 *
	 * @private
	 * @param {Object} map The map to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned map.
	 */
	function cloneMap(map, isDeep, cloneFunc) {
	  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
	  return arrayReduce(array, addMapEntry, new map.constructor);
	}
	
	module.exports = cloneMap;


/***/ },
/* 201 */
/***/ function(module, exports) {

	/**
	 * Adds the key-value `pair` to `map`.
	 *
	 * @private
	 * @param {Object} map The map to modify.
	 * @param {Array} pair The key-value pair to add.
	 * @returns {Object} Returns `map`.
	 */
	function addMapEntry(map, pair) {
	  // Don't return `map.set` because it's not chainable in IE 11.
	  map.set(pair[0], pair[1]);
	  return map;
	}
	
	module.exports = addMapEntry;


/***/ },
/* 202 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.reduce` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @param {boolean} [initAccum] Specify using the first element of `array` as
	 *  the initial value.
	 * @returns {*} Returns the accumulated value.
	 */
	function arrayReduce(array, iteratee, accumulator, initAccum) {
	  var index = -1,
	      length = array ? array.length : 0;
	
	  if (initAccum && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}
	
	module.exports = arrayReduce;


/***/ },
/* 203 */
/***/ function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);
	
	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}
	
	module.exports = mapToArray;


/***/ },
/* 204 */
/***/ function(module, exports) {

	/** Used to match `RegExp` flags from their coerced string values. */
	var reFlags = /\w*$/;
	
	/**
	 * Creates a clone of `regexp`.
	 *
	 * @private
	 * @param {Object} regexp The regexp to clone.
	 * @returns {Object} Returns the cloned regexp.
	 */
	function cloneRegExp(regexp) {
	  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	  result.lastIndex = regexp.lastIndex;
	  return result;
	}
	
	module.exports = cloneRegExp;


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	var addSetEntry = __webpack_require__(206),
	    arrayReduce = __webpack_require__(202),
	    setToArray = __webpack_require__(207);
	
	/**
	 * Creates a clone of `set`.
	 *
	 * @private
	 * @param {Object} set The set to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned set.
	 */
	function cloneSet(set, isDeep, cloneFunc) {
	  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
	  return arrayReduce(array, addSetEntry, new set.constructor);
	}
	
	module.exports = cloneSet;


/***/ },
/* 206 */
/***/ function(module, exports) {

	/**
	 * Adds `value` to `set`.
	 *
	 * @private
	 * @param {Object} set The set to modify.
	 * @param {*} value The value to add.
	 * @returns {Object} Returns `set`.
	 */
	function addSetEntry(set, value) {
	  // Don't return `set.add` because it's not chainable in IE 11.
	  set.add(value);
	  return set;
	}
	
	module.exports = addSetEntry;


/***/ },
/* 207 */
/***/ function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}
	
	module.exports = setToArray;


/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(209);
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * Creates a clone of the `symbol` object.
	 *
	 * @private
	 * @param {Object} symbol The symbol object to clone.
	 * @returns {Object} Returns the cloned symbol object.
	 */
	function cloneSymbol(symbol) {
	  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	}
	
	module.exports = cloneSymbol;


/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(144);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(197);
	
	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}
	
	module.exports = cloneTypedArray;


/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(212),
	    getPrototype = __webpack_require__(213),
	    isPrototype = __webpack_require__(178);
	
	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}
	
	module.exports = initCloneObject;


/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(140);
	
	/** Built-in value references. */
	var objectCreate = Object.create;
	
	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} prototype The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	function baseCreate(proto) {
	  return isObject(proto) ? objectCreate(proto) : {};
	}
	
	module.exports = baseCreate;


/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(180);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(144),
	    stubFalse = __webpack_require__(215);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
	
	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse;
	
	module.exports = isBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)(module)))

/***/ },
/* 215 */
/***/ function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _jsurl2 = __webpack_require__(217);
	
	var _jsurl3 = _interopRequireDefault(_jsurl2);
	
	var _kebabCase = __webpack_require__(219);
	
	var _kebabCase2 = _interopRequireDefault(_kebabCase);
	
	var _mpApp = __webpack_require__(231);
	
	var _mpApp2 = _interopRequireDefault(_mpApp);
	
	var _persistence = __webpack_require__(251);
	
	var _persistence2 = _interopRequireDefault(_persistence);
	
	var _util = __webpack_require__(2);
	
	var _util2 = __webpack_require__(8);
	
	var util = _interopRequireWildcard(_util2);
	
	var _tracking = __webpack_require__(4);
	
	var _builderSections = __webpack_require__(252);
	
	var _builderSections2 = _interopRequireDefault(_builderSections);
	
	var _section = __webpack_require__(253);
	
	var _clause2 = __webpack_require__(14);
	
	var _legend = __webpack_require__(254);
	
	var _legend2 = _interopRequireDefault(_legend);
	
	var _topEvents = __webpack_require__(255);
	
	var _topEvents2 = _interopRequireDefault(_topEvents);
	
	var _topProperties = __webpack_require__(257);
	
	var _topPropertyValues = __webpack_require__(258);
	
	var _segmentation = __webpack_require__(259);
	
	var _segmentation2 = _interopRequireDefault(_segmentation);
	
	var _queryCache = __webpack_require__(264);
	
	var _queryCache2 = _interopRequireDefault(_queryCache);
	
	var _report = __webpack_require__(265);
	
	var _report2 = _interopRequireDefault(_report);
	
	var _result = __webpack_require__(262);
	
	var _result2 = _interopRequireDefault(_result);
	
	__webpack_require__(266);
	
	__webpack_require__(277);
	
	__webpack_require__(377);
	
	__webpack_require__(438);
	
	__webpack_require__(447);
	
	var _index = __webpack_require__(455);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(456);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var MINUTE_MS = 1000 * 60;
	
	document.registerElement('irb-app', function (_MPApp) {
	  _inherits(IRBApp, _MPApp);
	
	  function IRBApp() {
	    _classCallCheck(this, IRBApp);
	
	    return _possibleConstructorReturn(this, (IRBApp.__proto__ || Object.getPrototypeOf(IRBApp)).apply(this, arguments));
	  }
	
	  _createClass(IRBApp, [{
	    key: 'transitionLearn',
	    value: function transitionLearn() {
	      var _this2 = this;
	
	      this.mpContext.setFlag('VIEWED_INSIGHTS_INTRO');
	      util.transitionLearn(this.state.report, this.state.learnModalStepIndex, {
	        start: function start() {
	          return _this2.update({ learnTransitioningOut: true });
	        },
	        middle: function middle() {
	          return _this2.update({ learnTransitioningOut: false, learnTransitioningIn: true });
	        },
	        end: function end() {
	          return _this2.update({ learnTransitioningIn: false });
	        },
	        startReminder: function startReminder() {
	          if (!_this2.hasStageClause() && !_this2.state.builderPane.isContextualMenuOpen) {
	            _this2.update({ learnReminding: true });
	          }
	        },
	        endReminder: function endReminder() {
	          return _this2.update({ learnReminding: false });
	        }
	      });
	    }
	  }, {
	    key: 'finishLearn',
	    value: function finishLearn() {
	      util.finishLearn();
	      this.update({ learnActive: false, learnModalStepIndex: null });
	      this.navigate('');
	    }
	
	    // The following states should be reset.
	
	  }, {
	    key: 'getFeatureGateValue',
	
	
	    /* feature gate fcns */
	
	    value: function getFeatureGateValue(feature) {
	      var gates = this.mpContext.featureGates;
	      if (gates && gates[feature] !== undefined) {
	        return gates[feature];
	      }
	      return feature === 'can_export_csv' ? true : 9223372036854776000; //python max int, aka featureGates.unlimited
	    }
	  }, {
	    key: 'canAddFilterClause',
	    value: function canAddFilterClause() {
	      var filterClauseLength = this.state.report.sections.filter.clauses.length;
	      return filterClauseLength < this.getFeatureGateValue('max_insights_filters');
	    }
	  }, {
	    key: 'canAddBuilderClause',
	    value: function canAddBuilderClause() {
	      var sections = this.state.report.sections;
	      var allClauseLength = sections.group.clauses.length + sections.show.clauses.length - 1;
	      return allClauseLength < this.getFeatureGateValue('max_segmentation_filters');
	    }
	  }, {
	    key: 'maxDataHistoryDays',
	    value: function maxDataHistoryDays() {
	      return this.getFeatureGateValue('max_data_history_days');
	    }
	  }, {
	    key: 'openUpsellModal',
	    value: function openUpsellModal(type) {
	      this.update({ upsellModal: type });
	    }
	  }, {
	    key: 'maybeCloseUpsellModal',
	    value: function maybeCloseUpsellModal(ev, type) {
	      var maybeCloseFeature = ev.target.attributes['feature'].value;
	      if (maybeCloseFeature === type && ev.detail && ev.detail.state === 'closed') {
	        this.update({ upsellModal: null });
	      }
	    }
	
	    /**
	     * initialize app with data/settings from mixpanel.com if available
	     */
	
	  }, {
	    key: 'setMPContext',
	    value: function setMPContext(mpContext) {
	      this.mpContext = mpContext;
	
	      this.shouldViewOnboarding = this.mpContext.flags && !this.mpContext.flags.VIEWED_INSIGHTS_INTRO;
	      this.standalone = this.mpContext.standalone;
	      this.customEvents = this.mpContext.customEvents || [];
	      this.hasWritePermissions = !this.mpContext.hasPermissions || this.mpContext.permissions.includes('write_insights');
	      this.projectHasEvents = true;
	      this.userID = this.mpContext.userID;
	
	      if (!this.standalone) {
	        this.projectHasEvents = !!this.mpContext.hasIntegratedArb;
	        Object.assign(this.state, {
	          savedReports: this.mpContext.bookmarks.reduce(function (reports, bm) {
	            return (0, _util.extend)(reports, _defineProperty({}, bm.id, _report2.default.fromBookmarkData(bm)));
	          }, {})
	        });
	      }
	    }
	  }, {
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      this.state.projectHasEvents = this.projectHasEvents;
	      this.state.recentEvents = this._getRecentList('events');
	      this.state.recentProperties = this._getRecentList('properties');
	
	      this.queries = {};
	      if (this.canMakeQueries()) {
	        var apiAttrs = {
	          apiHost: this.apiHost,
	          apiSecret: this.apiSecret
	        };
	        this.queries = {
	          topEvents: new _topEvents2.default(apiAttrs),
	          topEventProperties: new _topProperties.TopEventPropertiesQuery(apiAttrs),
	          topEventPropertyValues: new _topPropertyValues.TopEventPropertyValuesQuery(apiAttrs),
	          topPeopleProperties: new _topProperties.TopPeoplePropertiesQuery(apiAttrs),
	          topPeoplePropertyValues: new _topPropertyValues.TopPeoplePropertyValuesQuery(apiAttrs),
	          topPropertyValuesCache: new _queryCache2.default(),
	          segmentation: new _segmentation2.default(apiAttrs, { customEvents: this.customEvents }),
	          segmentationCache: new _queryCache2.default()
	        };
	      }
	
	      _get(IRBApp.prototype.__proto__ || Object.getPrototypeOf(IRBApp.prototype), 'attachedCallback', this).apply(this, arguments);
	
	      if (this.shouldViewOnboarding) {
	        this.navigate('learn');
	      } else if (this.state.report.id) {
	        this.navigate('report/' + this.state.report.id);
	      }
	    }
	  }, {
	    key: 'navigateToSetup',
	    value: function navigateToSetup() {
	      var _this3 = this;
	
	      this.trackEvent('No Data - Click Install Mixpanel').then(function () {
	        if (_this3.mpContext.setupURL) {
	          window.location.pathname = _this3.mpContext.setupURL;
	        }
	      });
	    }
	
	    // Serialization helpers
	
	    // TODO update mixpanel-common to allow configurable persistence namespace
	
	  }, {
	    key: 'toSerializationAttrs',
	    value: function toSerializationAttrs() {
	      return this.state.report ? this.state.report.serialize() : {};
	    }
	  }, {
	    key: 'fromSerializationAttrs',
	    value: function fromSerializationAttrs(attrs) {
	      return attrs.sections ? { report: _report2.default.deserialize(attrs) } : {};
	    }
	  }, {
	    key: 'updateRecentEvents',
	    value: function updateRecentEvents(mpEvent) {
	      this._updateRecentList('events', mpEvent);
	    }
	  }, {
	    key: 'updateRecentProperties',
	    value: function updateRecentProperties(property) {
	      this._updateRecentList('properties', property);
	    }
	  }, {
	    key: '_getRecentPersistenceKey',
	    value: function _getRecentPersistenceKey(type) {
	      return 'recent-' + type;
	    }
	  }, {
	    key: '_getRecentList',
	    value: function _getRecentList(type) {
	      return JSON.parse(this.persistence.get(this._getRecentPersistenceKey(type))) || [];
	    }
	  }, {
	    key: '_updateRecentList',
	    value: function _updateRecentList(type, value) {
	      // remove any match data from view object
	      value = util.pick(value, ['name', 'type', 'resourceType']);
	
	      var stateKey = type === 'events' ? 'recentEvents' : 'recentProperties';
	      this.update(_defineProperty({}, stateKey, [value].concat(_toConsumableArray(this.state[stateKey].filter(function (oldValue) {
	        return !util.isEqual(value, oldValue);
	      }))).slice(0, 10)));
	      this.persistence.set(this._getRecentPersistenceKey(type), JSON.stringify(this.state[stateKey]));
	    }
	
	    // Report management
	
	  }, {
	    key: 'urlForReportId',
	    value: function urlForReportId(reportID) {
	      var title = this.state.savedReports[reportID] && this.state.savedReports[reportID].title;
	      title = title ? (0, _kebabCase2.default)(title) : '';
	      return 'report/' + reportID + '/' + title;
	    }
	  }, {
	    key: 'openReportList',
	    value: function openReportList() {
	      this.update({ reportsDrawerOpen: true });
	      this.trackEvent('Report list - open');
	    }
	  }, {
	    key: 'chooseReport',
	    value: function chooseReport(report) {
	      this.navigate(this.urlForReportId(report.id));
	      this.trackEvent('Report list - select report', { 'report id': report.id });
	    }
	  }, {
	    key: 'deleteReport',
	    value: function deleteReport(report) {
	      var _this4 = this;
	
	      var reportTrackingData = report.toTrackingData();
	      this.mpContext.deleteBookmark(report.id).then(function () {
	        delete _this4.state.savedReports[report.id];
	        if (_this4.state.report.id === report.id) {
	          _this4.navigate('');
	        } else {
	          _this4.update();
	        }
	      }).catch(function (err) {
	        console.error('Error deleting: ' + err);
	        reportTrackingData.error = err;
	      }).then(function () {
	        return _this4.trackEvent('Delete Report', reportTrackingData);
	      });
	    }
	  }, {
	    key: 'loadReport',
	    value: function loadReport(report) {
	      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	          _ref$trackLoading = _ref.trackLoading,
	          trackLoading = _ref$trackLoading === undefined ? false : _ref$trackLoading;
	
	      var stateUpdate = (0, _util.extend)(this.resettableState, report ? { report: report } : {});
	      this.update(stateUpdate);
	      this.resetTopQueries();
	      if (trackLoading) {
	        this.trackEvent('Load Report', report ? report.toTrackingData() : {});
	      }
	      return stateUpdate;
	    }
	  }, {
	    key: 'saveReport',
	    value: function saveReport() {
	      var _this5 = this;
	
	      var reportTrackingData = this.state.report.toTrackingData();
	      return this.mpContext.saveBookmark(this.state.report.toBookmarkData()).then(function (bookmark) {
	        var report = _report2.default.fromBookmarkData(bookmark);
	        _this5.update({ savedReports: (0, _util.extend)(_this5.state.savedReports, _defineProperty({}, report.id, report)) });
	        _this5.navigate(_this5.urlForReportId(report.id), { report: report });
	        Object.assign(reportTrackingData, {
	          'new report': !_this5.state.savedReports.hasOwnProperty(report.id),
	          'report title': report.title
	        });
	      }).catch(function (err) {
	        console.error('Error saving: ' + err);
	        if (err.toString().includes('At saved report limit')) {
	          _this5.openUpsellModal('saveReport');
	        }
	        reportTrackingData.error = err;
	      }).then(function () {
	        _this5.trackEvent('Save Report', reportTrackingData);
	        if (reportTrackingData.error) {
	          return Promise.reject(reportTrackingData.error);
	        }
	      });
	    }
	
	    // New query builder helpers
	
	  }, {
	    key: 'startBuilderOnScreen',
	    value: function startBuilderOnScreen(componentName) {
	      var hasExistingScreens = !!this.state.builderPane.screens.length;
	      var screens = [{ componentName: componentName }];
	      this.resetBuilder();
	      this.stopEditingClause();
	      if (hasExistingScreens) {
	        this.updateBuilder({ inTransition: true }, { screens: screens });
	      } else {
	        this.updateBuilder({ screens: screens });
	      }
	    }
	  }, {
	    key: 'stopBuildingQuery',
	    value: function stopBuildingQuery() {
	      var _this6 = this;
	
	      this.stopEditingClause();
	      // time for menu to close
	      setTimeout(function () {
	        return _this6.resetBuilder();
	      }, 250);
	    }
	  }, {
	    key: 'resetBuilder',
	    value: function resetBuilder() {
	      this.updateBuilder(this.defaultBuilderState);
	    }
	  }, {
	    key: 'updateBuilder',
	    value: function updateBuilder(attrs) {
	      var _this7 = this;
	
	      var postTransitionAttrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      this.update({ builderPane: (0, _util.extend)(this.state.builderPane, attrs) });
	      if (attrs.inTransition) {
	        setTimeout(function () {
	          _this7.updateBuilder((0, _util.extend)(postTransitionAttrs, { inTransition: false }));
	        }, 250);
	      }
	    }
	  }, {
	    key: 'updateBuilderCurrentScreen',
	    value: function updateBuilderCurrentScreen(attrs) {
	      var screens = this.state.builderPane.screens;
	      var screen = this.getBuilderCurrentScreen();
	
	      this.update({
	        builderPane: (0, _util.extend)(this.state.builderPane, {
	          screens: [].concat(_toConsumableArray(screens.slice(0, -1)), [(0, _util.extend)(screen, attrs)])
	        })
	      });
	    }
	  }, {
	    key: 'getBuilderCurrentScreen',
	    value: function getBuilderCurrentScreen() {
	      var screens = this.state.builderPane.screens;
	      return screens[screens.length - 1];
	    }
	
	    // State helpers
	
	  }, {
	    key: 'hasStageClause',
	    value: function hasStageClause() {
	      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;
	
	      return !!(state.stageClauses && state.stageClauses.length);
	    }
	  }, {
	    key: 'getActiveStageClause',
	    value: function getActiveStageClause() {
	      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;
	
	      return this.hasStageClause() ? state.stageClauses[this.state.stageClauses.length - 1] : null;
	    }
	  }, {
	    key: 'originStageClauseType',
	    value: function originStageClauseType() {
	      return this.hasStageClause() && this.state.stageClauses[0].TYPE;
	    }
	  }, {
	    key: 'originStageClauseIsPeopleProperty',
	    value: function originStageClauseIsPeopleProperty() {
	      return this.hasStageClause() && this.state.stageClauses[0] && this.state.stageClauses[0].resourceType === 'people';
	    }
	  }, {
	    key: 'isAddingClause',
	    value: function isAddingClause(sectionType) {
	      return this.originStageClauseType() === sectionType && typeof this.state.stageClauseIndex !== 'number';
	    }
	  }, {
	    key: 'isEditingClause',
	    value: function isEditingClause(sectionType, clauseIndex) {
	      return this.originStageClauseType() === sectionType && this.state.stageClauseIndex === clauseIndex;
	    }
	  }, {
	    key: 'trackEvent',
	    value: function trackEvent(eventName, properties) {
	      try {
	        return new Promise(function (resolve) {
	          _tracking.mixpanel.track(eventName, properties, resolve);
	          setTimeout(resolve, 500);
	        });
	      } catch (e) {
	        _tracking.rollbar.error('tracking error', e);
	      }
	    }
	  }, {
	    key: 'canMakeQueries',
	    value: function canMakeQueries() {
	      return this.state.projectHasEvents;
	    }
	  }, {
	    key: 'getClausesForType',
	    value: function getClausesForType(type) {
	      return this.state.report.sections[type].clauses;
	    }
	  }, {
	    key: 'getClauseValuesForType',
	    value: function getClauseValuesForType(type) {
	      return this.getClausesForType(type).map(function (clause) {
	        return clause.value;
	      });
	    }
	  }, {
	    key: 'getTimeClauseValue',
	    value: function getTimeClauseValue(clause) {
	      clause = clause || this.getClausesForType(_clause2.TimeClause.TYPE)[0];
	      var _clause = clause,
	          value = _clause.value,
	          unit = _clause.unit;
	
	      var from = null;
	      var to = null;
	
	      if (Number.isInteger(value)) {
	        from = util.formatDateISO(util.relativeToAbsoluteDate(value, unit));
	        to = util.formatDateISO(util.relativeToAbsoluteDate(0, unit));
	      } else if (Array.isArray(value)) {
	        var _value = _slicedToArray(value, 2);
	
	        from = _value[0];
	        to = _value[1];
	
	        if (Number.isInteger(from)) {
	          from = util.formatDateISO(util.relativeToAbsoluteDate(from, unit));
	        }
	        if (Number.isInteger(to)) {
	          to = util.formatDateISO(util.relativeToAbsoluteDate(to, unit));
	        }
	      }
	
	      return { from: from, to: to, unit: unit };
	    }
	
	    // State modifiers
	
	  }, {
	    key: 'resetTopQueries',
	    value: function resetTopQueries() {
	      var _this8 = this;
	
	      if (this.canMakeQueries()) {
	        this.update({ topEventProperties: _topProperties.TopEventPropertiesQuery.LOADING });
	        this.queries.topEventProperties.build(this.state).run().then(function (topEventProperties) {
	          _this8.update({ topEventProperties: topEventProperties });
	        });
	
	        this.update({ topPeopleProperties: _topProperties.TopPeoplePropertiesQuery.LOADING });
	        this.queries.topPeopleProperties.build(this.state).run().then(function (topPeopleProperties) {
	          _this8.update({ topPeopleProperties: topPeopleProperties });
	        });
	
	        this.update({ topEvents: _topEvents2.default.LOADING });
	        var topEventsQuery = this.queries.topEvents.build(this.state).run().then(function (topEvents) {
	          _this8.update({
	            topEvents: topEvents.map(function (ev) {
	              return { name: ev, custom: false };
	            }).concat(_this8.customEvents.map(function (ce) {
	              return Object.assign(ce, { custom: true });
	            }))
	          });
	        });
	
	        // check whether we need to wait for Top Events query before launching the main query
	        var needsTopEvents = this.state.report.sections.show.clauses.some(function (showClause) {
	          return showClause.value.name === _clause2.ShowClause.TOP_EVENTS.name;
	        });
	        (needsTopEvents ? topEventsQuery : Promise.resolve()).then(function () {
	          return _this8.query();
	        });
	      }
	    }
	  }, {
	    key: 'fetchTopPropertiesForEvent',
	    value: function fetchTopPropertiesForEvent(mpEvent) {
	      var _this9 = this;
	
	      if (!this.state.topEventPropertiesByEvent[mpEvent]) {
	        this.updateTopPropertiesForEvent(mpEvent, _topProperties.TopEventPropertiesQuery.LOADING);
	        this.queries.topEventProperties.build({ event: mpEvent }).run().then(function (properties) {
	          return _this9.updateTopPropertiesForEvent(mpEvent, properties);
	        });
	      }
	    }
	  }, {
	    key: 'updateTopPropertiesForEvent',
	    value: function updateTopPropertiesForEvent(mpEvent, properties) {
	      this.update({
	        topEventPropertiesByEvent: (0, _util.extend)(this.state.topEventPropertiesByEvent, _defineProperty({}, mpEvent, properties))
	      });
	    }
	  }, {
	    key: 'updateReport',
	    value: function updateReport(attrs) {
	      var prevLearnStep = util.getLearnStep(this.state.report);
	      var report = Object.assign(this.state.report, attrs);
	      var isPeopleAndNotTimeSeries = report.sections.show.isPeopleOnlyQuery() && !report.sections.group.isPeopleTimeSeries();
	      if (isPeopleAndNotTimeSeries && report.displayOptions.chartType === 'line') {
	        report.displayOptions.chartType = 'bar';
	      }
	      this.update({ report: report });
	      var nextLearnStep = util.getLearnStep(this.state.report);
	
	      if (this.state.learnActive && prevLearnStep.name !== nextLearnStep.name) {
	        this.transitionLearn();
	      } else {
	        var fragment = _jsurl3.default.stringify(report.toUrlData());
	        history.replaceState(null, null, '#' + fragment);
	      }
	    }
	  }, {
	    key: 'updateStickyHeader',
	    value: function updateStickyHeader(attrs) {
	      this.update({ stickyHeader: (0, _util.extend)(this.state.stickyHeader, attrs) });
	    }
	  }, {
	    key: 'resetQuery',
	    value: function resetQuery() {
	      return this.loadReport(null);
	    }
	  }, {
	    key: 'sortConfigFor',
	    value: function sortConfigFor(result) {
	      var currentSortConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	
	      var sortConfig = {
	        bar: {
	          sortBy: 'column',
	          colSortAttrs: [{
	            sortBy: 'value',
	            sortOrder: 'desc'
	          }]
	        },
	        table: {
	          sortBy: 'column',
	          colSortAttrs: [{
	            sortBy: 'label',
	            sortOrder: 'asc'
	          }]
	        }
	      };
	
	      if (result) {
	        var numTableHeaders = result.headers.length;
	        if (numTableHeaders > 1) {
	          numTableHeaders--;
	        }
	
	        if (currentSortConfig) {
	
	          // update existing sorting config for new results
	
	          if (currentSortConfig.bar.sortBy === 'column') {
	            var colSortAttrs = currentSortConfig.bar.colSortAttrs.slice(0, result.headers.length);
	            for (var i = colSortAttrs.length; i < result.headers.length; i++) {
	              colSortAttrs.push({ sortBy: 'value', sortOrder: 'desc' });
	            }
	            sortConfig.bar.colSortAttrs = colSortAttrs;
	          } else {
	            sortConfig.bar = currentSortConfig.bar;
	          }
	
	          if (currentSortConfig.table.sortBy === 'column') {
	            var _colSortAttrs = currentSortConfig.table.colSortAttrs.slice(0, numTableHeaders);
	            for (var _i = _colSortAttrs.length; _i < numTableHeaders; _i++) {
	              _colSortAttrs.push({ sortBy: 'label', sortOrder: 'asc' });
	            }
	            sortConfig.table.colSortAttrs = _colSortAttrs;
	          } else {
	            sortConfig.table = currentSortConfig.table;
	          }
	        } else {
	
	          // no existing config; ensure that new config has right number of headers
	
	          for (var _i2 = sortConfig.bar.colSortAttrs.length; _i2 < result.headers.length; _i2++) {
	            sortConfig.bar.colSortAttrs.push({ sortBy: 'value', sortOrder: 'desc' });
	          }
	          for (var _i3 = sortConfig.table.colSortAttrs.length; _i3 < numTableHeaders; _i3++) {
	            sortConfig.table.colSortAttrs.push({ sortBy: 'label', sortOrder: 'asc' });
	          }
	        }
	      }
	
	      return sortConfig;
	    }
	  }, {
	    key: 'stopEditingExtrasMenu',
	    value: function stopEditingExtrasMenu() {
	      this.update({ isEditingExtrasMenu: false });
	    }
	  }, {
	    key: 'startAddingClause',
	    value: function startAddingClause(sectionType) {
	      var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      this.update({ stageClauses: this.state.stageClauses.concat(_clause2.Clause.create(sectionType, attrs)) });
	    }
	  }, {
	    key: 'startEditingClause',
	    value: function startEditingClause(sectionType, clauseIndex) {
	      var stageClauses = this.state.stageClauses.concat(this.state.report.sections[sectionType].clauses[clauseIndex]);
	
	      if (stageClauses.length) {
	        var _iteratorNormalCompletion = true;
	        var _didIteratorError = false;
	        var _iteratorError = undefined;
	
	        try {
	          for (var _iterator = stageClauses[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	            var clause = _step.value;
	
	            clause.search = '';
	          }
	        } catch (err) {
	          _didIteratorError = true;
	          _iteratorError = err;
	        } finally {
	          try {
	            if (!_iteratorNormalCompletion && _iterator.return) {
	              _iterator.return();
	            }
	          } finally {
	            if (_didIteratorError) {
	              throw _iteratorError;
	            }
	          }
	        }
	
	        this.update({
	          stageClauses: stageClauses,
	          stageClauseIndex: clauseIndex
	        });
	        this.updateStageClause(this.activeStageClause); // check for new data to fetch
	      } else {
	        throw new Error('app.startEditingClause error: invalid clauseIndex provided');
	      }
	    }
	  }, {
	    key: 'stopEditingClause',
	    value: function stopEditingClause() {
	      this.stopEditingClauseAttrs();
	      var newState = {
	        activeMathMenuIndex: null,
	        contextFilter: '',
	        stageClauses: [],
	        stageClauseIndex: null,
	        resourceTypeFilter: 'all'
	      };
	
	      this.update(newState);
	    }
	  }, {
	    key: 'stopEditingClauseAttrs',
	    value: function stopEditingClauseAttrs() {
	      if (this.hasStageClause() && this.activeStageClause.valid) {
	        this.updateStageClause({ editing: null });
	      }
	    }
	  }, {
	    key: 'updateStageClause',
	    value: function updateStageClause() {
	      var _this10 = this;
	
	      var clauseData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      var stageClauses = this.state.stageClauses.concat();
	      var currentClause = stageClauses.pop();
	      if (currentClause) {
	        stageClauses.push(currentClause.extend(clauseData));
	      }
	      var newState = { stageClauses: stageClauses };
	
	      // query new property values if we're setting a new filter property
	      var activeStageClause = this.activeStageClause;
	      if (activeStageClause && activeStageClause.TYPE === 'filter' && clauseData.value) {
	        (function () {
	          var topPropertyValues = null;
	          switch (clauseData.resourceType) {
	            case 'people':
	              topPropertyValues = _this10.queries.topPeoplePropertyValues;
	              break;
	            case 'events':
	              topPropertyValues = _this10.queries.topEventPropertyValues;
	              break;
	          }
	          _this10.update({ topPropertyValues: _topEvents2.default.LOADING });
	          var query = topPropertyValues.build(newState).query;
	          var cachedResult = _this10.queries.topPropertyValuesCache.get(query);
	
	          if (cachedResult) {
	            newState.topPropertyValues = cachedResult;
	          } else {
	            topPropertyValues.run().then(function (topPropertyValues) {
	              _this10.queries.topPropertyValuesCache.set(query, topPropertyValues);
	              _this10.update({ topPropertyValues: topPropertyValues });
	            });
	          }
	        })();
	      }
	
	      this.update(newState);
	    }
	  }, {
	    key: 'commitStageClause',
	    value: function commitStageClause() {
	      var _this11 = this;
	
	      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref2$shouldStopEditi = _ref2.shouldStopEditing,
	          shouldStopEditing = _ref2$shouldStopEditi === undefined ? true : _ref2$shouldStopEditi;
	
	      var reportTrackingData = this.state.report.toTrackingData();
	      var newClauses = this.state.stageClauses;
	      var reportAttrs = (0, _util.extend)(this.state.report);
	
	      if (newClauses.length) {
	        var shouldClearAllGroupsAndFilters = false;
	        newClauses.filter(function (clause) {
	          return clause.valid;
	        }).forEach(function (clause) {
	          var newClause = clause.extend();
	          var newSection = null;
	          var isEditingClause = clause === newClauses[0] && typeof _this11.state.stageClauseIndex === 'number';
	
	          var isPeopleShowClause = newClause.TYPE === _clause2.ShowClause.TYPE && newClause.resourceType === _clause2.Clause.RESOURCE_TYPE_PEOPLE;
	          if (isPeopleShowClause && reportAttrs.displayOptions.chartType === 'line') {
	            reportAttrs.displayOptions.chartType = 'bar';
	          }
	
	          if (isEditingClause) {
	            newSection = reportAttrs.sections[newClause.TYPE].replaceClause(_this11.state.stageClauseIndex, newClause);
	            if (newClause.TYPE === _clause2.ShowClause.TYPE && _this11.state.stageClauseIndex === 0) {
	              shouldClearAllGroupsAndFilters = newClause.resourceType !== reportAttrs.sections.show.clauses[0].resourceType;
	            }
	          } else {
	            if (clause === newClauses[1] && newClause.TYPE === _clause2.ShowClause.TYPE && newClauses[0].TYPE === _clause2.ShowClause.TYPE) {
	              // operator on property + event
	              var showClauseIdx = _this11.state.stageClauseIndex;
	              if (typeof showClauseIdx !== 'number') {
	                // newly-appended clause
	                showClauseIdx = reportAttrs.sections.show.clauses.length - 1;
	              }
	              var joinedClause = reportAttrs.sections.show.clauses[showClauseIdx].extend({});
	              joinedClause.property = joinedClause.value;
	              joinedClause.value = newClause.value;
	              newSection = reportAttrs.sections.show.replaceClause(showClauseIdx, joinedClause);
	            } else {
	              newSection = reportAttrs.sections[newClause.TYPE].appendClause(newClause);
	            }
	          }
	          reportAttrs.sections = reportAttrs.sections.replaceSection(newSection);
	          var clauseProperties = clause.serialize();
	          if (typeof clauseProperties.value === 'object') {
	            clauseProperties = (0, _util.extend)(clauseProperties, clauseProperties.value);
	            delete clauseProperties.value;
	          }
	          _this11.trackEvent('Builder - ' + (isEditingClause ? 'Edit' : 'Add') + ' ' + clause.formattedType() + ' Clause', (0, _util.extend)(reportTrackingData, clauseProperties));
	        });
	
	        if (shouldClearAllGroupsAndFilters) {
	          reportAttrs.sections = reportAttrs.sections.replaceSection(new _section.GroupSection());
	          reportAttrs.sections = reportAttrs.sections.replaceSection(new _section.FilterSection());
	        }
	
	        this.updateReport(reportAttrs);
	        this.query();
	      }
	
	      if (shouldStopEditing) {
	        this.stopEditingClause();
	        this.stopBuildingQuery();
	      }
	    }
	  }, {
	    key: 'updateSection',
	    value: function updateSection(section) {
	      var sections = this.state.report.sections.replaceSection(section);
	      this.updateReport({ sections: sections });
	      this.query();
	    }
	  }, {
	    key: 'updateClause',
	    value: function updateClause(sectionType, clauseIndex, clauseData) {
	      var section = this.state.report.sections[sectionType];
	      var clause = section.clauses[clauseIndex];
	
	      this.updateSection(section.replaceClause(clauseIndex, clause.extend(clauseData)));
	    }
	  }, {
	    key: 'moveClause',
	    value: function moveClause(sectionType, clauseIndex, offset) {
	      var reportTrackingData = this.state.report.toTrackingData();
	      var section = this.state.report.sections[sectionType];
	      var clause = section.clauses[clauseIndex];
	
	      this.updateSection(section.removeClause(clauseIndex).insertClause(clauseIndex + offset, clause));
	      this.trackEvent('Builder - Reorder Group Clause', (0, _util.extend)(reportTrackingData, {
	        'current position': clauseIndex,
	        'new position': clauseIndex + offset,
	        'reorder direction': offset === 1 ? 'right' : 'left'
	      }));
	    }
	  }, {
	    key: 'removeClause',
	    value: function removeClause(sectionType, clauseIndex) {
	      var reportTrackingData = this.state.report.toTrackingData();
	      this.updateSection(this.state.report.sections[sectionType].removeClause(clauseIndex));
	      this.trackEvent('Builder - Remove Clause', (0, _util.extend)(reportTrackingData, {
	        'clause type': sectionType,
	        'clause index': clauseIndex
	      }));
	    }
	  }, {
	    key: 'updateShowClauseButtonPosition',
	    value: function updateShowClauseButtonPosition(key, buttonOutside) {
	      var showClauseButtonPosition = this.state.showClauseButtonPosition;
	      showClauseButtonPosition[key] = buttonOutside;
	      this.update({ showClauseButtonPosition: showClauseButtonPosition });
	    }
	  }, {
	    key: 'updateLegendState',
	    value: function updateLegendState(newState) {
	      this.resetToastTimer();
	      this.updateReport({ legend: this.state.report.legend.update(newState) });
	    }
	  }, {
	    key: 'updateLegendSeriesAtIndex',
	    value: function updateLegendSeriesAtIndex(seriesIdx, dataType, attrs) {
	      var _this12 = this;
	
	      this.resetToastTimer();
	      var legendUpdate = _defineProperty({}, seriesIdx, attrs);
	      if (dataType === this.state.report.legend.SERIES_DATA) {
	        var keysToMatch = Object.keys(attrs).filter(function (key) {
	          return Boolean(attrs[key]);
	        });
	        if (keysToMatch.length === 1) {
	          (function () {
	            var depthOffsetForData = 2;
	            var ancestors = util.reachableNodesOfKey({
	              series: _this12.state.result.series,
	              depth: seriesIdx + depthOffsetForData,
	              keysToMatch: keysToMatch
	            });
	            legendUpdate = Object.keys(ancestors).reduce(function (obj, key) {
	              obj[Number(key) - depthOffsetForData] = ancestors[key];
	              return obj;
	            }, {});
	          })();
	        }
	      }
	
	      this.updateReport({
	        legend: this.state.report.legend.updateSeriesAtIndex({
	          dataType: dataType,
	          legendUpdate: legendUpdate
	        })
	      });
	    }
	  }, {
	    key: 'stopEditingChartToggle',
	    value: function stopEditingChartToggle() {
	      this.updateChartToggle({ editingType: null });
	    }
	  }, {
	    key: 'updateChartToggle',
	    value: function updateChartToggle(options) {
	      this.update({ chartToggle: (0, _util.extend)(this.state.chartToggle, options) });
	    }
	  }, {
	    key: 'updateDisplayOptions',
	    value: function updateDisplayOptions(displayOptions) {
	      var _this13 = this;
	
	      // for 'min', 'max', 'unique', 'average' and 'median', 'bar' and 'table' require a different query than
	      // 'line'.
	      var chartType = displayOptions.chartType;
	      Promise.resolve().then(function () {
	        var isNotTotal = _this13.state.report.sections.show.clauses.some(function (clause) {
	          return ['min', 'max', 'unique', 'average', 'median'].includes(clause.math);
	        });
	        var isChangingToLineChart = chartType === 'line' && ['bar', 'table'].includes(_this13.state.report.displayOptions.chartType);
	        var isChangingFromLineChart = ['bar', 'table'].includes(chartType) && _this13.state.report.displayOptions.chartType === 'line';
	        return isNotTotal && (isChangingToLineChart || isChangingFromLineChart) && _this13.query(displayOptions);
	      }).then(function () {
	        var shouldResetSorting = chartType === 'bar' && displayOptions.plotStyle === 'stacked' && _this13.state.report.sorting.bar.sortBy === 'value';
	        var sorting = shouldResetSorting ? _this13.sortConfigFor(_this13.state.result) : _this13.state.report.sorting;
	        _this13.updateReport({ displayOptions: displayOptions, sorting: sorting });
	      });
	    }
	  }, {
	    key: 'resetToastTimer',
	    value: function resetToastTimer() {
	      var _this14 = this;
	
	      if (!this.state.newCachedData) {
	        clearTimeout(this.toastTimer);
	        this.toastTimer = setTimeout(function () {
	          return _this14._checkForNewResults();
	        }, 15 * MINUTE_MS);
	      }
	    }
	  }, {
	    key: '_checkForNewResults',
	    value: function _checkForNewResults() {
	      var _this15 = this;
	
	      this.queries.segmentation.run().then(function (result) {
	        if (!_this15.state.result.isEqual(result)) {
	          _this15.update({ newCachedData: true });
	          _this15.queries.segmentationCache.set(_this15.queries.segmentation.build(_this15.state).query, result, 60);
	        } else {
	          _this15.resetToastTimer();
	        }
	      });
	      this.update({ toastTimer: null });
	    }
	  }, {
	    key: 'query',
	    value: function query() {
	      var _this16 = this;
	
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      if (this.canMakeQueries()) {
	        var _ret3 = function () {
	          var reportTrackingData = _this16.state.report.toTrackingData();
	          options = Object.assign({ useCache: true }, options);
	          var query = _this16.queries.segmentation.build(_this16.state, options).query;
	          var cachedResult = options.useCache && _this16.queries.segmentationCache.get(query);
	          var cacheExpiry = 10; // seconds
	
	          if (!cachedResult) {
	            _this16.update({ resultLoading: true });
	          }
	
	          _this16.update({ newCachedData: false });
	          _this16.resetToastTimer();
	          var queryStartTime = window.performance.now();
	          var queryEventProperties = { 'cached': !!cachedResult };
	
	          _this16.trackEvent('Query Start', (0, _util.extend)(reportTrackingData, queryEventProperties));
	
	          return {
	            v: _this16.queries.segmentation.run(cachedResult).then(function (result) {
	              if (!cachedResult) {
	                _this16.queries.segmentationCache.set(query, result, cacheExpiry);
	                queryEventProperties['latency ms'] = Math.round(window.performance.now() - queryStartTime);
	              }
	
	              _this16.update({
	                result: result,
	                newCachedData: false,
	                resultLoading: false,
	                report: Object.assign(_this16.state.report, {
	                  sorting: _this16.sortConfigFor(result, _this16.state.report.sorting),
	                  legend: _this16.state.report.legend.updateLegendData(result)
	                })
	              });
	            }).catch(function (err) {
	              console.error(err);
	              queryEventProperties['error'] = err;
	            }).then(function () {
	              _this16.trackEvent('Query Finish', (0, _util.extend)(reportTrackingData, queryEventProperties));
	            })
	          };
	        }();
	
	        if ((typeof _ret3 === 'undefined' ? 'undefined' : _typeof(_ret3)) === "object") return _ret3.v;
	      }
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this17 = this;
	
	      return {
	        template: _index2.default,
	        defaultState: (0, _util.extend)(this.resettableState, {
	          // The following states should persist through reset.
	          features: {},
	          savedReports: {},
	          recentEvents: [],
	          recentProperties: [],
	          util: util
	        }),
	        routes: {
	          'report/:reportId': this.routeHandlers.load,
	          'report/:reportId/:reportName': this.routeHandlers.load,
	          'reset': this.routeHandlers.reset,
	          'learn': this.routeHandlers.learn,
	          ':jsurl': this.routeHandlers.jsurl,
	          '': this.routeHandlers.index
	        },
	        helpers: {
	          finishLearn: function finishLearn() {
	            return _this17.finishLearn();
	          },
	          toastClosed: function toastClosed() {
	            return _this17.update({ newCachedData: false });
	          },
	          toastSelected: function toastSelected() {
	            var reportTrackingData = _this17.state.report.toTrackingData();
	            _this17.query();
	            _this17.trackEvent('Refresh Report', (0, _util.extend)(reportTrackingData, { toast: true }));
	          }
	        }
	      };
	    }
	  }, {
	    key: 'routeHandlers',
	    get: function get() {
	      var _this18 = this;
	
	      return this._routeHandlers = this._routeHandlers || {
	
	        load: function load() {
	          var stateUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	          var reportId = arguments[1];
	
	          var report = _this18.state.savedReports && _this18.state.savedReports[Number(reportId)];
	          if (!report) {
	            return _this18.navigate('');
	          } else {
	            if (!stateUpdate.report) {
	              stateUpdate = (0, _util.extend)(stateUpdate, _this18.loadReport(report, { trackLoading: true }));
	            }
	            return stateUpdate;
	          }
	        },
	
	        index: function index() {
	          var stateUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	          if (_this18.state.report.id) {
	            stateUpdate = (0, _util.extend)(stateUpdate, _this18.resetQuery());
	          } else if (!stateUpdate.report) {
	            _this18.resetTopQueries();
	          }
	          return stateUpdate;
	        },
	
	        reset: function reset() {
	          var stateUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	          return _this18.navigate('', (0, _util.extend)(stateUpdate, _this18.resetQuery()));
	        },
	
	        learn: function learn() {
	          var stateUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	          return (0, _util.extend)(stateUpdate, _this18.resetQuery(), { learnActive: true });
	        },
	
	        jsurl: function jsurl() {
	          var stateUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	          var _jsurl = arguments[1];
	
	          var parsedURL = _jsurl && _jsurl3.default.tryParse(_jsurl);
	          if (parsedURL) {
	            var report = _report2.default.deserialize((0, _util.extend)(_this18.defaultReportState, parsedURL));
	            if (report && report.valid) {
	              return (0, _util.extend)(stateUpdate, _this18.loadReport(report));
	            }
	          }
	          _this18.navigate('', (0, _util.extend)(stateUpdate, _this18.resetQuery()));
	        }
	      };
	    }
	  }, {
	    key: 'resettableState',
	    get: function get() {
	      return {
	        report: this.defaultReportState,
	        builderPane: this.defaultBuilderState,
	        chartToggle: {
	          editingType: null,
	          bar: {
	            plotStyle: 'standard'
	          },
	          line: {
	            plotStyle: 'standard'
	          },
	          table: {
	            plotStyle: 'standard'
	          }
	        },
	        activeMathMenuIndex: null,
	        showClauseButtonPosition: {},
	        contextFilter: '',
	        isEditingExtrasMenu: false,
	        isEditingNumericProperty: false,
	        isEditingTypecast: false,
	        newCachedData: false,
	        reportsDrawerOpen: false,
	        resourceTypeFilter: 'all',
	        result: new _result2.default({
	          headers: [],
	          series: {}
	        }),
	        resultLoading: true,
	        stageClauses: [],
	        stickyHeader: {},
	        topEvents: [],
	        topEventProperties: [],
	        topEventPropertiesByEvent: {},
	        topPeopleProperties: [],
	        topPropertyValues: [],
	        upsellModal: null
	      };
	    }
	  }, {
	    key: 'defaultReportState',
	    get: function get() {
	      return new _report2.default({
	        displayOptions: {
	          chartType: 'bar',
	          plotStyle: 'standard',
	          analysis: 'linear',
	          value: 'absolute'
	        },
	        sections: new _builderSections2.default({
	          show: new _section.ShowSection(new _clause2.ShowClause({ value: _clause2.ShowClause.TOP_EVENTS })),
	          time: new _section.TimeSection(new _clause2.TimeClause({ range: _clause2.TimeClause.RANGES.HOURS }))
	        }),
	        legend: new _legend2.default({
	          data: [],
	          search: null
	        }),
	        sorting: this.sortConfigFor(null),
	        title: 'Untitled report'
	      });
	    }
	  }, {
	    key: 'persistence',
	    get: function get() {
	      if (!this._persistence) {
	        var namespaceVars = [this.persistenceKey];
	        if (this.mpContext.projectID) {
	          namespaceVars = namespaceVars.concat([this.mpContext.projectID, this.mpContext.userID]);
	        }
	        this._persistence = new _persistence2.default(namespaceVars.join(':'));
	      }
	      return this._persistence;
	    }
	  }, {
	    key: 'persistenceKey',
	    get: function get() {
	      return 'irb-de8ae95';
	    }
	  }, {
	    key: 'defaultBuilderState',
	    get: function get() {
	      return {
	        inTransition: false,
	        isContextualMenuOpen: false,
	        isEditingTypecast: false,
	        offsetStyle: {},
	        screens: [],
	        sizeStyle: {
	          width: '0px',
	          height: '0px'
	        }
	      };
	    }
	  }, {
	    key: 'activeStageClause',
	    get: function get() {
	      return this.getActiveStageClause();
	    }
	  }]);
	
	  return IRBApp;
	}(_mpApp2.default));

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(218);

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2011 Bruno Jouhier <bruno.jouhier@sage.com>
	 *
	 * Permission is hereby granted, free of charge, to any person
	 * obtaining a copy of this software and associated documentation
	 * files (the "Software"), to deal in the Software without
	 * restriction, including without limitation the rights to use,
	 * copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the
	 * Software is furnished to do so, subject to the following
	 * conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
	 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
	 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
	 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
	 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
	 * OTHER DEALINGS IN THE SOFTWARE.
	 */
	//
	(function(exports) {
		"use strict";
		exports.stringify = function stringify(v) {
			function encode(s) {
				return !/[^\w-.]/.test(s) ? s : s.replace(/[^\w-.]/g, function(ch) {
					if (ch === '$') return '!';
					ch = ch.charCodeAt(0);
					// thanks to Douglas Crockford for the negative slice trick
					return ch < 0x100 ? '*' + ('00' + ch.toString(16)).slice(-2) : '**' + ('0000' + ch.toString(16)).slice(-4);
				});
			}
	
			var tmpAry;
	
			switch (typeof v) {
				case 'number':
					return isFinite(v) ? '~' + v : '~null';
				case 'boolean':
					return '~' + v;
				case 'string':
					return "~'" + encode(v);
				case 'object':
					if (!v) return '~null';
	
					tmpAry = [];
	
					if (Array.isArray(v)) {
						for (var i = 0; i < v.length; i++) {
							tmpAry[i] = stringify(v[i]) || '~null';
						}
	
						return '~(' + (tmpAry.join('') || '~') + ')';
					} else {
						for (var key in v) {
							if (v.hasOwnProperty(key)) {
								var val = stringify(v[key]);
	
								// skip undefined and functions
								if (val) {
									tmpAry.push(encode(key) + val);
								}
							}
						}
	
						return '~(' + tmpAry.join('~') + ')';
					}
				default:
					// function, undefined
					return;
			}
		};
	
		var reserved = {
			"true": true,
			"false": false,
			"null": null
		};
	
		exports.parse = function(s) {
			if (!s) return s;
			s = s.replace(/%(25)*27/g, "'");
			var i = 0,
				len = s.length;
	
			function eat(expected) {
				if (s.charAt(i) !== expected) throw new Error("bad JSURL syntax: expected " + expected + ", got " + (s && s.charAt(i)));
				i++;
			}
	
			function decode() {
				var beg = i,
					ch, r = "";
				while (i < len && (ch = s.charAt(i)) !== '~' && ch !== ')') {
					switch (ch) {
						case '*':
							if (beg < i) r += s.substring(beg, i);
							if (s.charAt(i + 1) === '*') r += String.fromCharCode(parseInt(s.substring(i + 2, i + 6), 16)), beg = (i += 6);
							else r += String.fromCharCode(parseInt(s.substring(i + 1, i + 3), 16)), beg = (i += 3);
							break;
						case '!':
							if (beg < i) r += s.substring(beg, i);
							r += '$', beg = ++i;
							break;
						default:
							i++;
					}
				}
				return r + s.substring(beg, i);
			}
	
			return (function parseOne() {
				var result, ch, beg;
				eat('~');
				switch (ch = s.charAt(i)) {
					case '(':
						i++;
						if (s.charAt(i) === '~') {
							result = [];
							if (s.charAt(i + 1) === ')') i++;
							else {
								do {
									result.push(parseOne());
								} while (s.charAt(i) === '~');
							}
						} else {
							result = {};
							if (s.charAt(i) !== ')') {
								do {
									var key = decode();
									result[key] = parseOne();
								} while (s.charAt(i) === '~' && ++i);
							}
						}
						eat(')');
						break;
					case "'":
						i++;
						result = decode();
						break;
					default:
						beg = i++;
						while (i < len && /[^)~]/.test(s.charAt(i)))
						i++;
						var sub = s.substring(beg, i);
						if (/[\d\-]/.test(ch)) {
							result = parseFloat(sub);
						} else {
							result = reserved[sub];
							if (typeof result === "undefined") throw new Error("bad value keyword: " + sub);
						}
				}
				return result;
			})();
		}
	
		exports.tryParse = function(s, def) {
			try {
				return exports.parse(s);
			} catch (ex) {
				return def;
			}
		}
	
	})( true ? exports : (window.JSURL = window.JSURL || {}));


/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	var createCompounder = __webpack_require__(220);
	
	/**
	 * Converts `string` to
	 * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the kebab cased string.
	 * @example
	 *
	 * _.kebabCase('Foo Bar');
	 * // => 'foo-bar'
	 *
	 * _.kebabCase('fooBar');
	 * // => 'foo-bar'
	 *
	 * _.kebabCase('__FOO_BAR__');
	 * // => 'foo-bar'
	 */
	var kebabCase = createCompounder(function(result, word, index) {
	  return result + (index ? '-' : '') + word.toLowerCase();
	});
	
	module.exports = kebabCase;


/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(202),
	    deburr = __webpack_require__(221),
	    words = __webpack_require__(227);
	
	/** Used to compose unicode capture groups. */
	var rsApos = "['\u2019]";
	
	/** Used to match apostrophes. */
	var reApos = RegExp(rsApos, 'g');
	
	/**
	 * Creates a function like `_.camelCase`.
	 *
	 * @private
	 * @param {Function} callback The function to combine each word.
	 * @returns {Function} Returns the new compounder function.
	 */
	function createCompounder(callback) {
	  return function(string) {
	    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
	  };
	}
	
	module.exports = createCompounder;


/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	var deburrLetter = __webpack_require__(222),
	    toString = __webpack_require__(224);
	
	/** Used to match Latin Unicode letters (excluding mathematical operators). */
	var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
	
	/** Used to compose unicode character classes. */
	var rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0';
	
	/** Used to compose unicode capture groups. */
	var rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';
	
	/**
	 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	 */
	var reComboMark = RegExp(rsCombo, 'g');
	
	/**
	 * Deburrs `string` by converting
	 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
	 * letters to basic Latin letters and removing
	 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to deburr.
	 * @returns {string} Returns the deburred string.
	 * @example
	 *
	 * _.deburr('déjà vu');
	 * // => 'deja vu'
	 */
	function deburr(string) {
	  string = toString(string);
	  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
	}
	
	module.exports = deburr;


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	var basePropertyOf = __webpack_require__(223);
	
	/** Used to map Latin Unicode letters to basic Latin letters. */
	var deburredLetters = {
	  // Latin-1 Supplement block.
	  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	  '\xc7': 'C',  '\xe7': 'c',
	  '\xd0': 'D',  '\xf0': 'd',
	  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	  '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	  '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	  '\xd1': 'N',  '\xf1': 'n',
	  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	  '\xc6': 'Ae', '\xe6': 'ae',
	  '\xde': 'Th', '\xfe': 'th',
	  '\xdf': 'ss',
	  // Latin Extended-A block.
	  '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
	  '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
	  '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
	  '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
	  '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
	  '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
	  '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
	  '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
	  '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
	  '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
	  '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
	  '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
	  '\u0134': 'J',  '\u0135': 'j',
	  '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
	  '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
	  '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
	  '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
	  '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
	  '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
	  '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
	  '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
	  '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
	  '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
	  '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
	  '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
	  '\u0163': 't',  '\u0165': 't', '\u0167': 't',
	  '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
	  '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
	  '\u0174': 'W',  '\u0175': 'w',
	  '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
	  '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
	  '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
	  '\u0132': 'IJ', '\u0133': 'ij',
	  '\u0152': 'Oe', '\u0153': 'oe',
	  '\u0149': "'n", '\u017f': 'ss'
	};
	
	/**
	 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
	 * letters to basic Latin letters.
	 *
	 * @private
	 * @param {string} letter The matched letter to deburr.
	 * @returns {string} Returns the deburred letter.
	 */
	var deburrLetter = basePropertyOf(deburredLetters);
	
	module.exports = deburrLetter;


/***/ },
/* 223 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.propertyOf` without support for deep paths.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyOf(object) {
	  return function(key) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	module.exports = basePropertyOf;


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(225);
	
	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}
	
	module.exports = toString;


/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(209),
	    isSymbol = __webpack_require__(226);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = baseToString;


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	var isObjectLike = __webpack_require__(174);
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}
	
	module.exports = isSymbol;


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	var asciiWords = __webpack_require__(228),
	    hasUnicodeWord = __webpack_require__(229),
	    toString = __webpack_require__(224),
	    unicodeWords = __webpack_require__(230);
	
	/**
	 * Splits `string` into an array of its words.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to inspect.
	 * @param {RegExp|string} [pattern] The pattern to match words.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {Array} Returns the words of `string`.
	 * @example
	 *
	 * _.words('fred, barney, & pebbles');
	 * // => ['fred', 'barney', 'pebbles']
	 *
	 * _.words('fred, barney, & pebbles', /[^, ]+/g);
	 * // => ['fred', 'barney', '&', 'pebbles']
	 */
	function words(string, pattern, guard) {
	  string = toString(string);
	  pattern = guard ? undefined : pattern;
	
	  if (pattern === undefined) {
	    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
	  }
	  return string.match(pattern) || [];
	}
	
	module.exports = words;


/***/ },
/* 228 */
/***/ function(module, exports) {

	/** Used to match words composed of alphanumeric characters. */
	var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
	
	/**
	 * Splits an ASCII `string` into an array of its words.
	 *
	 * @private
	 * @param {string} The string to inspect.
	 * @returns {Array} Returns the words of `string`.
	 */
	function asciiWords(string) {
	  return string.match(reAsciiWord) || [];
	}
	
	module.exports = asciiWords;


/***/ },
/* 229 */
/***/ function(module, exports) {

	/** Used to detect strings that need a more robust regexp to match words. */
	var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
	
	/**
	 * Checks if `string` contains a word composed of Unicode symbols.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {boolean} Returns `true` if a word is found, else `false`.
	 */
	function hasUnicodeWord(string) {
	  return reHasUnicodeWord.test(string);
	}
	
	module.exports = hasUnicodeWord;


/***/ },
/* 230 */
/***/ function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0',
	    rsDingbatRange = '\\u2700-\\u27bf',
	    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	    rsPunctuationRange = '\\u2000-\\u206f',
	    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	    rsVarRange = '\\ufe0e\\ufe0f',
	    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
	
	/** Used to compose unicode capture groups. */
	var rsApos = "['\u2019]",
	    rsBreak = '[' + rsBreakRange + ']',
	    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
	    rsDigits = '\\d+',
	    rsDingbat = '[' + rsDingbatRange + ']',
	    rsLower = '[' + rsLowerRange + ']',
	    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsUpper = '[' + rsUpperRange + ']',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',
	    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',
	    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
	    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
	    reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;
	
	/** Used to match complex or compound words. */
	var reUnicodeWord = RegExp([
	  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',
	  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,
	  rsUpper + '+' + rsOptUpperContr,
	  rsDigits,
	  rsEmoji
	].join('|'), 'g');
	
	/**
	 * Splits a Unicode `string` into an array of its words.
	 *
	 * @private
	 * @param {string} The string to inspect.
	 * @returns {Array} Returns the words of `string`.
	 */
	function unicodeWords(string) {
	  return string.match(reUnicodeWord) || [];
	}
	
	module.exports = unicodeWords;


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _parentFrame = __webpack_require__(250);
	
	var _persistence = __webpack_require__(251);
	
	var _persistence2 = _interopRequireDefault(_persistence);
	
	var _util = __webpack_require__(9);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var MPApp = function (_Component) {
	  _inherits(MPApp, _Component);
	
	  function MPApp() {
	    _classCallCheck(this, MPApp);
	
	    return _possibleConstructorReturn(this, (MPApp.__proto__ || Object.getPrototypeOf(MPApp)).apply(this, arguments));
	  }
	
	  _createClass(MPApp, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      Object.assign(this.state, this.deserialize(this.persistence.get('state')));
	
	      // initialize frame communication
	      if (this.parentFrame) {
	        (0, _parentFrame.mirrorLocationHash)(this.parentFrame);
	        window.history.replaceState(null, null, this.initialURLHash());
	      }
	
	      _get(MPApp.prototype.__proto__ || Object.getPrototypeOf(MPApp.prototype), 'attachedCallback', this).apply(this, arguments);
	
	      this.initClickOutside();
	    }
	  }, {
	    key: 'setParentFrame',
	    value: function setParentFrame(parentFrame, parentData) {
	      this.parentFrame = parentFrame;
	      this.parentData = parentData;
	      this.historyMethod = 'replaceState';
	    }
	  }, {
	    key: 'initialURLHash',
	    value: function initialURLHash() {
	      return this.parentData.hash.replace(/^#*/, '#');
	    }
	  }, {
	    key: 'update',
	    value: function update() {
	      var stateUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      _util.debug.info('applying update ->', stateUpdate);
	      _get(MPApp.prototype.__proto__ || Object.getPrototypeOf(MPApp.prototype), 'update', this).apply(this, arguments);
	      _util.debug.info('      new state ->', this.state);
	      this.persistence.set('state', this.serialize());
	    }
	
	    // serialization helpers
	
	  }, {
	    key: 'serialize',
	    value: function serialize() {
	      return JSON.stringify(this.toSerializationAttrs());
	    }
	  }, {
	    key: 'deserialize',
	    value: function deserialize(JSONstr) {
	      var persisted = null;
	      try {
	        persisted = this.fromSerializationAttrs(JSON.parse(JSONstr));
	      } catch (err) {
	        if (JSONstr) {
	          _util.debug.warn('Invalid persistence entry: ' + JSONstr);
	        }
	      }
	      return persisted || {};
	    }
	  }, {
	    key: 'toSerializationAttrs',
	    value: function toSerializationAttrs() {
	      return {};
	    }
	  }, {
	    key: 'fromSerializationAttrs',
	    value: function fromSerializationAttrs(attrs) {
	      return attrs;
	    }
	
	    // DOM helpers
	
	  }, {
	    key: 'initClickOutside',
	    value: function initClickOutside() {
	      var _this2 = this;
	
	      document.addEventListener('click', function (ev) {
	        return _this2.clickOutsideHandler(ev);
	      });
	
	      if (this.parentFrame) {
	        this.parentFrame.addHandler('click', function (ev) {
	          return _this2.clickOutsideHandler(ev);
	        });
	      }
	    }
	  }, {
	    key: 'onClickOutside',
	    value: function onClickOutside(tagName, appMethodName) {
	      this.clickOutsideHandlers = this.clickOutsideHandlers || {};
	      this.clickOutsideHandlers[appMethodName] = this.clickOutsideHandlers[appMethodName] || [];
	
	      if (this.clickOutsideHandlers[appMethodName].indexOf(tagName) === -1) {
	        this.clickOutsideHandlers[appMethodName].push(tagName);
	      }
	    }
	  }, {
	    key: 'clickOutsideHandler',
	    value: function clickOutsideHandler(ev) {
	      var _this3 = this;
	
	      this.clickOutsideHandlers = this.clickOutsideHandlers || {};
	      Object.keys(this.clickOutsideHandlers).forEach(function (appMethodName) {
	        var tagNames = _this3.clickOutsideHandlers[appMethodName];
	
	        for (var el = ev.target; el; el = el.parentElement) {
	          if (tagNames.includes(el.tagName)) {
	            return;
	          }
	        }
	
	        _this3[appMethodName](ev);
	      });
	    }
	  }, {
	    key: 'persistence',
	    get: function get() {
	      if (!this._persistence) {
	        var namespaceVars = [this.persistenceKey];
	        if (this.parentData) {
	          /* eslint-disable camelcase */
	          var _parentData = this.parentData,
	              project_id = _parentData.project_id,
	              user_id = _parentData.user_id;
	
	          namespaceVars = namespaceVars.concat([project_id, user_id]);
	          /* eslint-enable camelcase */
	        }
	        this._persistence = new _persistence2.default(namespaceVars.join(':'));
	      }
	      return this._persistence;
	    }
	
	    // override for app-specific storage entries and versioning
	
	  }, {
	    key: 'persistenceKey',
	    get: function get() {
	      return 'mpapp';
	    }
	  }]);
	
	  return MPApp;
	}(_panel.Component);
	
	exports.default = MPApp;

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.h = exports.Component = undefined;
	
	var _component = __webpack_require__(233);
	
	var _component2 = _interopRequireDefault(_component);
	
	var _h = __webpack_require__(235);
	
	var _h2 = _interopRequireDefault(_h);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Entry point for Panel apps and components
	 * @module panel
	 * @example
	 * import { Component } from 'panel';
	 * document.registerElement('my-widget', class extends Component {
	 *   // app definition
	 * });
	 */
	
	exports.Component = _component2.default;
	exports.h = _h2.default;

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _cuid = __webpack_require__(234);
	
	var _cuid2 = _interopRequireDefault(_cuid);
	
	var _h = __webpack_require__(235);
	
	var _h2 = _interopRequireDefault(_h);
	
	var _webcomponent = __webpack_require__(238);
	
	var _webcomponent2 = _interopRequireDefault(_webcomponent);
	
	var _domPatcher = __webpack_require__(239);
	
	var _domPatcher2 = _interopRequireDefault(_domPatcher);
	
	var _router = __webpack_require__(249);
	
	var _router2 = _interopRequireDefault(_router);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DOCUMENT_FRAGMENT_NODE = 11;
	var EMPTY_DIV = (0, _h2.default)('div');
	
	/**
	 * Definition of a Panel component/app, implemented as an HTML custom element.
	 * App logic and configuration is defined by extending this class. Instantiating
	 * a component is typically not done by calling the constructor directly, but
	 * either by including the tag in HTML markup, or by using the DOM API method
	 * [document.createElement]{@link https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement}.
	 *
	 * @example <caption>Defining a Panel component</caption>
	 * class MyWidget extends Component {
	 *   get config() {
	 *     return {
	 *       // options go here
	 *     };
	 *   }
	 *
	 *   myMethod() {
	 *     // etc
	 *   }
	 * }
	 *
	 * @example <caption>Registering the custom element definition for the DOM</caption>
	 * document.registerElement('my-widget', MyWidget);
	 *
	 * @example <caption>Adding an instance of the element to the DOM</caption>
	 * <my-widget some-attr></my-widget>
	 *
	 * @extends WebComponent
	 */
	
	var Component = function (_WebComponent) {
	  _inherits(Component, _WebComponent);
	
	  function Component() {
	    _classCallCheck(this, Component);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Component).apply(this, arguments));
	  }
	
	  _createClass(Component, [{
	    key: 'child',
	
	
	    /**
	     * For use inside view templates, to create a child Panel component nested under this
	     * component, which will share its state object and update cycle.
	     * @param {string} tagName - the HTML element tag name of the custom element
	     * to be created
	     * @param {object} [config={}] - snabbdom node config (second argument of h())
	     * @returns {object} virtual-dom node
	     * @example
	     * {template: state => h('.header', this.child('my-child-widget'))}
	     */
	    value: function child(tagName) {
	      var config = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
	      config.props = Object.assign({}, config.props, { $panelParentID: this.panelID });
	      return (0, _h2.default)(tagName, config);
	    }
	
	    /**
	     * Searches the component's Panel ancestors for the first component of the
	     * given type (HTML tag name).
	     * @param {string} tagName - tag name of the parent to search for
	     * @returns {object} Panel component
	     * @throws Throws an error if no parent component with the given tag name is found.
	     * @example
	     * myWidget.findPanelParentByTagName('my-app');
	     */
	
	  }, {
	    key: 'findPanelParentByTagName',
	    value: function findPanelParentByTagName(tagName) {
	      tagName = tagName.toLowerCase();
	      for (var node = this.$panelParent; !!node; node = node.$panelParent) {
	        if (node.tagName.toLowerCase() === tagName) {
	          return node;
	        }
	      }
	      throw Error(tagName + ' not found');
	    }
	
	    /**
	     * Fetches a value from the component's configuration map (a combination of
	     * values supplied in the config() getter and defaults applied automatically).
	     * @param {string} key - key of config item to fetch
	     * @returns value associated with key
	     * @example
	     * myWidget.getConfig('css');
	     */
	
	  }, {
	    key: 'getConfig',
	    value: function getConfig(key) {
	      return this._config[key];
	    }
	
	    /**
	     * Executes the route handler matching the given URL fragment, and updates
	     * the URL, as though the user had navigated explicitly to that address.
	     * @param {string} fragment - URL fragment to navigate to
	     * @param {object} [stateUpdate={}] - update to apply to state object when
	     * routing
	     * @example
	     * myApp.navigate('wombat/54', {color: 'blue'});
	     */
	
	  }, {
	    key: 'navigate',
	    value: function navigate() {
	      var _$panelRoot$router;
	
	      (_$panelRoot$router = this.$panelRoot.router).navigate.apply(_$panelRoot$router, arguments);
	    }
	
	    /**
	     * Sets a value in the component's configuration map after element
	     * initialization.
	     * @param {string} key - key of config item to set
	     * @param val - value to associate with key
	     * @example
	     * myWidget.setConfig('template', () => h('.new-template', 'Hi'));
	     */
	
	  }, {
	    key: 'setConfig',
	    value: function setConfig(key, val) {
	      this._config[key] = val;
	    }
	
	    /**
	     * To be overridden by subclasses, defining conditional logic for whether
	     * a component should rerender its template given the state to be applied.
	     * In most cases this method can be left untouched, but can provide improved
	     * performance when dealing with very many DOM elements.
	     * @param {object} state - state object to be used when rendering
	     * @returns {boolean} whether or not to render/update this component
	     * @example
	     * shouldUpdate(state) {
	     *   // don't need to rerender if result set ID hasn't changed
	     *   return state.largeResultSetID !== this._cachedResultID;
	     * }
	     */
	
	  }, {
	    key: 'shouldUpdate',
	    value: function shouldUpdate(state) {
	      return true;
	    }
	
	    /**
	     * Applies a state update, triggering a re-render check of the component as
	     * well as any other components sharing the same state. This is the primary
	     * means of updating the DOM in a Panel application.
	     * @param {object} [stateUpdate={}] - keys and values of entries to update in
	     * the component's state object
	     * @example
	     * myWidget.update({name: 'Bob'});
	     */
	
	  }, {
	    key: 'update',
	    value: function update() {
	      var stateUpdate = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      if (!this.initialized) {
	        Object.assign(this.state, stateUpdate);
	      } else if (this.isPanelRoot) {
	        var updateHash = '$fragment' in stateUpdate && stateUpdate.$fragment !== this.state.$fragment;
	
	        Object.assign(this.state, stateUpdate);
	        this.updateSelfAndChildren(this.state);
	
	        if (updateHash) {
	          this.router.replaceHash(this.state.$fragment);
	        }
	      } else {
	        this.$panelRoot.update(stateUpdate);
	      }
	    }
	  }, {
	    key: 'createdCallback',
	    value: function createdCallback() {
	      this.panelID = (0, _cuid2.default)();
	      this._config = Object.assign({}, {
	        css: '',
	        helpers: {},
	        routes: {},
	        template: function template() {
	          throw Error('No template provided by Component subclass');
	        },
	        updateSync: false,
	        useShadowDom: false
	      }, this.config);
	      this.state = {};
	      if (this.getConfig('useShadowDom')) {
	        this.el = this.createShadowRoot();
	        this.styleTag = document.createElement('style');
	        this.styleTag.innerHTML = this.getConfig('css');
	        this.el.appendChild(this.styleTag);
	      } else if (this.getConfig('css')) {
	        throw Error('"useShadowDom" config option must be set in order to use "css" config.');
	      } else {
	        this.el = this;
	      }
	    }
	  }, {
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      this.$panelChildren = new Set();
	
	      if (typeof this.$panelParentID !== 'undefined') {
	        this.isPanelChild = true;
	        // find $panelParent
	        for (var node = this.parentNode; node && !this.$panelParent; node = node.parentNode) {
	          if (node.nodeType === DOCUMENT_FRAGMENT_NODE) {
	            // handle shadow-root
	            node = node.host;
	          }
	          if (node.panelID === this.$panelParentID) {
	            this.$panelParent = node;
	            this.$panelRoot = node.$panelRoot;
	          }
	        }
	        if (!this.$panelParent) {
	          throw Error('panelParent ' + this.$panelParentID + ' not found');
	        }
	        this.$panelParent.$panelChildren.add(this);
	        this.state = this.$panelRoot.state;
	      } else {
	        this.isPanelRoot = true;
	        this.$panelRoot = this;
	        this.$panelParent = null;
	      }
	      this.app = this.$panelRoot;
	
	      var newState = Object.assign({}, this.getConfig('defaultState'), this.state, this.getJSONAttribute('data-state'), this._stateFromAttributes());
	      Object.assign(this.state, newState);
	
	      if (Object.keys(this.getConfig('routes')).length) {
	        this.router = new _router2.default(this, { historyMethod: this.historyMethod });
	        this.navigate(window.location.hash);
	      }
	
	      this.domPatcher = new _domPatcher2.default(this.state, this._render.bind(this), {
	        updateMode: this.getConfig('updateSync') ? 'sync' : 'async'
	      });
	      this.el.appendChild(this.domPatcher.el);
	      this.initialized = true;
	    }
	  }, {
	    key: 'detachedCallback',
	    value: function detachedCallback() {
	      this.$panelParent && this.$panelParent.$panelChildren.delete(this);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(attr, oldVal, newVal) {
	      if (attr === 'style-override') {
	        this._applyStyles(newVal);
	      }
	      if (this.isPanelRoot && this.initialized) {
	        this.update();
	      }
	    }
	  }, {
	    key: '_applyStyles',
	    value: function _applyStyles(styleOverride) {
	      if (this.getConfig('useShadowDom')) {
	        this.styleTag.innerHTML = this.getConfig('css') + (styleOverride || '');
	      }
	    }
	  }, {
	    key: 'logError',
	    value: function logError() {
	      var _console;
	
	      (_console = console).error.apply(_console, arguments);
	    }
	  }, {
	    key: 'toString',
	    value: function toString() {
	      try {
	        return this.tagName + '#' + this.panelID;
	      } catch (e) {
	        return 'UNKNOWN COMPONENT';
	      }
	    }
	  }, {
	    key: 'updateSelfAndChildren',
	    value: function updateSelfAndChildren(state) {
	      if (this.initialized && this.shouldUpdate(state)) {
	        this.domPatcher.update(state);
	        var _iteratorNormalCompletion = true;
	        var _didIteratorError = false;
	        var _iteratorError = undefined;
	
	        try {
	          for (var _iterator = this.$panelChildren[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	            var child = _step.value;
	
	            child.updateSelfAndChildren(state);
	          }
	        } catch (err) {
	          _didIteratorError = true;
	          _iteratorError = err;
	        } finally {
	          try {
	            if (!_iteratorNormalCompletion && _iterator.return) {
	              _iterator.return();
	            }
	          } finally {
	            if (_didIteratorError) {
	              throw _iteratorError;
	            }
	          }
	        }
	      }
	    }
	  }, {
	    key: '_render',
	    value: function _render(state) {
	      if (this.shouldUpdate(state)) {
	        try {
	          this._rendered = this.getConfig('template')(Object.assign({}, state, {
	            $component: this,
	            $helpers: this.helpers
	          }));
	        } catch (e) {
	          this.logError('Error while rendering ' + this.toString(), this, e.stack);
	        }
	      }
	      return this._rendered || EMPTY_DIV;
	    }
	  }, {
	    key: '_stateFromAttributes',
	    value: function _stateFromAttributes() {
	      var state = {};
	
	      // this.attributes is a NamedNodeMap, without normal iterators
	      for (var ai = 0; ai < this.attributes.length; ai++) {
	        var attr = this.attributes[ai];
	        var attrMatch = attr.name.match(/^state-(.+)/);
	        if (attrMatch) {
	          var num = Number(attr.value);
	          state[attrMatch[1]] = isNaN(num) ? attr.value : num;
	        }
	      }
	
	      return state;
	    }
	  }, {
	    key: 'config',
	
	
	    /**
	     * Defines standard component configuration.
	     * @type {object}
	     * @property {function} template - function transforming state object to virtual-dom tree
	     * @property {object} [helpers={}] - properties and functions injected automatically into template state object
	     * @property {object} [routes={}] - object mapping string route expressions to handler functions
	     * @property {boolean} [updateSync=false] - whether to apply updates to DOM
	     * immediately, instead of batching to one update per frame
	     * @property {boolean} [useShadowDom=false] - whether to use Shadow DOM
	     * @property {string} [css=''] - component-specific Shadow DOM stylesheet
	     * @example
	     * get config() {
	     *   return {
	     *     template: state => h('.name', `My name is ${name}`),
	     *     routes: {
	     *       'wombat/:wombatId': (stateUpdate={}, wombatId) => {
	     *         // route handler implementation
	     *       },
	     *     },
	     *   };
	     * }
	     */
	    get: function get() {
	      return {};
	    }
	
	    /**
	     * Template helper functions defined in config object, and exposed to template code
	     * as $helpers. This getter uses the component's internal config cache.
	     * @type {object}
	     * @example
	     * {
	     *   myHelper: () => 'some return value',
	     * }
	     */
	
	  }, {
	    key: 'helpers',
	    get: function get() {
	      return this.getConfig('helpers');
	    }
	  }]);
	
	  return Component;
	}(_webcomponent2.default);
	
	exports.default = Component;

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * cuid.js
	 * Collision-resistant UID generator for browsers and node.
	 * Sequential for fast db lookups and recency sorting.
	 * Safe for element IDs and server-side lookups.
	 *
	 * Extracted from CLCTR
	 *
	 * Copyright (c) Eric Elliott 2012
	 * MIT License
	 */
	
	/*global window, navigator, document, require, process, module */
	(function (app) {
	  'use strict';
	  var namespace = 'cuid',
	    c = 0,
	    blockSize = 4,
	    base = 36,
	    discreteValues = Math.pow(base, blockSize),
	
	    pad = function pad(num, size) {
	      var s = "000000000" + num;
	      return s.substr(s.length-size);
	    },
	
	    randomBlock = function randomBlock() {
	      return pad((Math.random() *
	            discreteValues << 0)
	            .toString(base), blockSize);
	    },
	
	    safeCounter = function () {
	      c = (c < discreteValues) ? c : 0;
	      c++; // this is not subliminal
	      return c - 1;
	    },
	
	    api = function cuid() {
	      // Starting with a lowercase letter makes
	      // it HTML element ID friendly.
	      var letter = 'c', // hard-coded allows for sequential access
	
	        // timestamp
	        // warning: this exposes the exact date and time
	        // that the uid was created.
	        timestamp = (new Date().getTime()).toString(base),
	
	        // Prevent same-machine collisions.
	        counter,
	
	        // A few chars to generate distinct ids for different
	        // clients (so different computers are far less
	        // likely to generate the same id)
	        fingerprint = api.fingerprint(),
	
	        // Grab some more chars from Math.random()
	        random = randomBlock() + randomBlock();
	
	        counter = pad(safeCounter().toString(base), blockSize);
	
	      return  (letter + timestamp + counter + fingerprint + random);
	    };
	
	  api.slug = function slug() {
	    var date = new Date().getTime().toString(36),
	      counter,
	      print = api.fingerprint().slice(0,1) +
	        api.fingerprint().slice(-1),
	      random = randomBlock().slice(-2);
	
	      counter = safeCounter().toString(36).slice(-4);
	
	    return date.slice(-2) +
	      counter + print + random;
	  };
	
	  api.globalCount = function globalCount() {
	    // We want to cache the results of this
	    var cache = (function calc() {
	        var i,
	          count = 0;
	
	        for (i in window) {
	          count++;
	        }
	
	        return count;
	      }());
	
	    api.globalCount = function () { return cache; };
	    return cache;
	  };
	
	  api.fingerprint = function browserPrint() {
	    return pad((navigator.mimeTypes.length +
	      navigator.userAgent.length).toString(36) +
	      api.globalCount().toString(36), 4);
	  };
	
	  // don't change anything from here down.
	  if (app.register) {
	    app.register(namespace, api);
	  } else if (true) {
	    module.exports = api;
	  } else {
	    app[namespace] = api;
	  }
	
	}(this.applitude || this));


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var vnode_1 = __webpack_require__(236);
	var is = __webpack_require__(237);
	function addNS(data, children, sel) {
	    data.ns = 'http://www.w3.org/2000/svg';
	    if (sel !== 'foreignObject' && children !== undefined) {
	        for (var i = 0; i < children.length; ++i) {
	            var childData = children[i].data;
	            if (childData !== undefined) {
	                addNS(childData, children[i].children, children[i].sel);
	            }
	        }
	    }
	}
	function h(sel, b, c) {
	    var data = {}, children, text, i;
	    if (c !== undefined) {
	        data = b;
	        if (is.array(c)) {
	            children = c;
	        }
	        else if (is.primitive(c)) {
	            text = c;
	        }
	        else if (c && c.sel) {
	            children = [c];
	        }
	    }
	    else if (b !== undefined) {
	        if (is.array(b)) {
	            children = b;
	        }
	        else if (is.primitive(b)) {
	            text = b;
	        }
	        else if (b && b.sel) {
	            children = [b];
	        }
	        else {
	            data = b;
	        }
	    }
	    if (is.array(children)) {
	        for (i = 0; i < children.length; ++i) {
	            if (is.primitive(children[i]))
	                children[i] = vnode_1.vnode(undefined, undefined, undefined, children[i]);
	        }
	    }
	    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&
	        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {
	        addNS(data, children, sel);
	    }
	    return vnode_1.vnode(sel, data, children, text, undefined);
	}
	exports.h = h;
	;
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = h;
	//# sourceMappingURL=h.js.map

/***/ },
/* 236 */
/***/ function(module, exports) {

	"use strict";
	function vnode(sel, data, children, text, elm) {
	    var key = data === undefined ? undefined : data.key;
	    return { sel: sel, data: data, children: children,
	        text: text, elm: elm, key: key };
	}
	exports.vnode = vnode;
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = vnode;
	//# sourceMappingURL=vnode.js.map

/***/ },
/* 237 */
/***/ function(module, exports) {

	"use strict";
	exports.array = Array.isArray;
	function primitive(s) {
	    return typeof s === 'string' || typeof s === 'number';
	}
	exports.primitive = primitive;
	//# sourceMappingURL=is.js.map

/***/ },
/* 238 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	// shim HTMLElement if necessary
	// Safari breaks when attempting to inherit from HTMLElement
	// Babel marked as wontfix because, well, it's not really
	// a language issue: https://phabricator.babeljs.io/T1548
	if (typeof HTMLElement !== 'function') {
	  var _HTMLElement = function _HTMLElement() {};
	  _HTMLElement.prototype = HTMLElement.prototype;
	  HTMLElement = _HTMLElement;
	}
	
	// thin wrapper around HTMLElement with convenience methods
	
	var WebComponent = function (_HTMLElement2) {
	  _inherits(WebComponent, _HTMLElement2);
	
	  function WebComponent() {
	    _classCallCheck(this, WebComponent);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(WebComponent).apply(this, arguments));
	  }
	
	  _createClass(WebComponent, [{
	    key: 'getJSONAttribute',
	
	
	    // parse an attribute which has been serialized as JSON
	    // pass an optional errorHandler in case JSON.parse() fails
	    value: function getJSONAttribute(attrName) {
	      var errorHandler = arguments.length <= 1 || arguments[1] === undefined ? function () {
	        return null;
	      } : arguments[1];
	
	      try {
	        return JSON.parse(this.getAttribute(attrName));
	      } catch (e) {
	        return errorHandler(attrName, e);
	      }
	    }
	
	    // check whether a boolean attribute is 'enabled' in an element instance
	    // taking into account usages such as:
	    // <my-element myattr="true">    -> enabled
	    // <my-element myattr>           -> enabled
	    // <my-element myattr="myattr">  -> enabled
	    // <my-element myattr="false">   -> disabled
	    // <my-element>                  -> disabled
	
	  }, {
	    key: 'isAttributeEnabled',
	    value: function isAttributeEnabled(attrName) {
	      var attrVal = this.getAttribute(attrName);
	      return typeof attrVal === 'string' && ['', 'true', attrName.toLowerCase()].indexOf(attrVal.toLowerCase()) !== -1;
	    }
	  }]);
	
	  return WebComponent;
	}(HTMLElement);
	
	exports.default = WebComponent;

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _snabbdom = __webpack_require__(240);
	
	var _snabbdom2 = _interopRequireDefault(_snabbdom);
	
	var _h = __webpack_require__(235);
	
	var _h2 = _interopRequireDefault(_h);
	
	var _attributes = __webpack_require__(243);
	
	var _attributes2 = _interopRequireDefault(_attributes);
	
	var _dataset = __webpack_require__(244);
	
	var _dataset2 = _interopRequireDefault(_dataset);
	
	var _snabbdomDelayedClass = __webpack_require__(245);
	
	var _snabbdomDelayedClass2 = _interopRequireDefault(_snabbdomDelayedClass);
	
	var _eventlisteners = __webpack_require__(246);
	
	var _eventlisteners2 = _interopRequireDefault(_eventlisteners);
	
	var _props = __webpack_require__(247);
	
	var _props2 = _interopRequireDefault(_props);
	
	var _style = __webpack_require__(248);
	
	var _style2 = _interopRequireDefault(_style);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var patch = _snabbdom2.default.init([_attributes2.default, _dataset2.default, _snabbdomDelayedClass2.default, _eventlisteners2.default, _props2.default, _style2.default]);
	
	var DOMPatcher = function () {
	  function DOMPatcher(initialState, renderFunc) {
	    var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	
	    _classCallCheck(this, DOMPatcher);
	
	    this.updateMode = options.updateMode || 'async';
	
	    this.state = Object.assign({}, initialState);
	    this.renderFunc = renderFunc;
	    this.vnode = this.renderFunc(this.state);
	
	    // prepare root element
	    var tagName = this.vnode.sel.split(/[#\.]/)[0];
	    var classMatches = this.vnode.sel.match(/\.[^\.#]+/g);
	    var idMatch = this.vnode.sel.match(/#[^\.#]+/);
	    this.el = document.createElement(tagName);
	    if (classMatches) {
	      this.el.className = classMatches.map(function (c) {
	        return c.slice(1);
	      }).join(' ');
	    }
	    if (idMatch) {
	      this.el.id = idMatch.slice(1);
	    }
	
	    patch(this.el, this.vnode);
	  }
	
	  _createClass(DOMPatcher, [{
	    key: 'update',
	    value: function update(newState) {
	      var _this = this;
	
	      if (this.rendering) {
	        console.error('Applying new DOM update while render is already in progress!');
	      }
	
	      this.pendingState = newState;
	      switch (this.updateMode) {
	        case 'async':
	          if (!this.pending) {
	            this.pending = true;
	            requestAnimationFrame(function () {
	              return _this.render();
	            });
	          }
	          break;
	        case 'sync':
	          this.render();
	          break;
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      this.rendering = true;
	      this.pending = false;
	      this.state = this.pendingState;
	      var newVnode = this.renderFunc(this.state);
	      this.rendering = false;
	
	      patch(this.vnode, newVnode);
	      this.vnode = newVnode;
	    }
	  }]);
	
	  return DOMPatcher;
	}();
	
	exports.default = DOMPatcher;

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var vnode_1 = __webpack_require__(236);
	var is = __webpack_require__(237);
	var htmldomapi_1 = __webpack_require__(241);
	function isUndef(s) { return s === undefined; }
	function isDef(s) { return s !== undefined; }
	var emptyNode = vnode_1.default('', {}, [], undefined, undefined);
	function sameVnode(vnode1, vnode2) {
	    return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;
	}
	function isVnode(vnode) {
	    return vnode.sel !== undefined;
	}
	function createKeyToOldIdx(children, beginIdx, endIdx) {
	    var i, map = {}, key;
	    for (i = beginIdx; i <= endIdx; ++i) {
	        key = children[i].key;
	        if (key !== undefined)
	            map[key] = i;
	    }
	    return map;
	}
	var hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];
	var h_1 = __webpack_require__(235);
	exports.h = h_1.h;
	var thunk_1 = __webpack_require__(242);
	exports.thunk = thunk_1.thunk;
	function init(modules, domApi) {
	    var i, j, cbs = {};
	    var api = domApi !== undefined ? domApi : htmldomapi_1.default;
	    for (i = 0; i < hooks.length; ++i) {
	        cbs[hooks[i]] = [];
	        for (j = 0; j < modules.length; ++j) {
	            if (modules[j][hooks[i]] !== undefined)
	                cbs[hooks[i]].push(modules[j][hooks[i]]);
	        }
	    }
	    function emptyNodeAt(elm) {
	        var id = elm.id ? '#' + elm.id : '';
	        var c = elm.className ? '.' + elm.className.split(' ').join('.') : '';
	        return vnode_1.default(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);
	    }
	    function createRmCb(childElm, listeners) {
	        return function rmCb() {
	            if (--listeners === 0) {
	                var parent_1 = api.parentNode(childElm);
	                api.removeChild(parent_1, childElm);
	            }
	        };
	    }
	    function createElm(vnode, insertedVnodeQueue) {
	        var i, data = vnode.data;
	        if (data !== undefined) {
	            if (isDef(i = data.hook) && isDef(i = i.init)) {
	                i(vnode);
	                data = vnode.data;
	            }
	        }
	        var children = vnode.children, sel = vnode.sel;
	        if (sel !== undefined) {
	            // Parse selector
	            var hashIdx = sel.indexOf('#');
	            var dotIdx = sel.indexOf('.', hashIdx);
	            var hash = hashIdx > 0 ? hashIdx : sel.length;
	            var dot = dotIdx > 0 ? dotIdx : sel.length;
	            var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;
	            var elm = vnode.elm = isDef(data) && isDef(i = data.ns) ? api.createElementNS(i, tag)
	                : api.createElement(tag);
	            if (hash < dot)
	                elm.id = sel.slice(hash + 1, dot);
	            if (dotIdx > 0)
	                elm.className = sel.slice(dot + 1).replace(/\./g, ' ');
	            if (is.array(children)) {
	                for (i = 0; i < children.length; ++i) {
	                    api.appendChild(elm, createElm(children[i], insertedVnodeQueue));
	                }
	            }
	            else if (is.primitive(vnode.text)) {
	                api.appendChild(elm, api.createTextNode(vnode.text));
	            }
	            for (i = 0; i < cbs.create.length; ++i)
	                cbs.create[i](emptyNode, vnode);
	            i = vnode.data.hook; // Reuse variable
	            if (isDef(i)) {
	                if (i.create)
	                    i.create(emptyNode, vnode);
	                if (i.insert)
	                    insertedVnodeQueue.push(vnode);
	            }
	        }
	        else {
	            vnode.elm = api.createTextNode(vnode.text);
	        }
	        return vnode.elm;
	    }
	    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {
	        for (; startIdx <= endIdx; ++startIdx) {
	            api.insertBefore(parentElm, createElm(vnodes[startIdx], insertedVnodeQueue), before);
	        }
	    }
	    function invokeDestroyHook(vnode) {
	        var i, j, data = vnode.data;
	        if (data !== undefined) {
	            if (isDef(i = data.hook) && isDef(i = i.destroy))
	                i(vnode);
	            for (i = 0; i < cbs.destroy.length; ++i)
	                cbs.destroy[i](vnode);
	            if (vnode.children !== undefined) {
	                for (j = 0; j < vnode.children.length; ++j) {
	                    i = vnode.children[j];
	                    if (typeof i !== "string") {
	                        invokeDestroyHook(i);
	                    }
	                }
	            }
	        }
	    }
	    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
	        for (; startIdx <= endIdx; ++startIdx) {
	            var i_1 = void 0, listeners = void 0, rm = void 0, ch = vnodes[startIdx];
	            if (isDef(ch)) {
	                if (isDef(ch.sel)) {
	                    invokeDestroyHook(ch);
	                    listeners = cbs.remove.length + 1;
	                    rm = createRmCb(ch.elm, listeners);
	                    for (i_1 = 0; i_1 < cbs.remove.length; ++i_1)
	                        cbs.remove[i_1](ch, rm);
	                    if (isDef(i_1 = ch.data) && isDef(i_1 = i_1.hook) && isDef(i_1 = i_1.remove)) {
	                        i_1(ch, rm);
	                    }
	                    else {
	                        rm();
	                    }
	                }
	                else {
	                    api.removeChild(parentElm, ch.elm);
	                }
	            }
	        }
	    }
	    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {
	        var oldStartIdx = 0, newStartIdx = 0;
	        var oldEndIdx = oldCh.length - 1;
	        var oldStartVnode = oldCh[0];
	        var oldEndVnode = oldCh[oldEndIdx];
	        var newEndIdx = newCh.length - 1;
	        var newStartVnode = newCh[0];
	        var newEndVnode = newCh[newEndIdx];
	        var oldKeyToIdx;
	        var idxInOld;
	        var elmToMove;
	        var before;
	        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
	            if (isUndef(oldStartVnode)) {
	                oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
	            }
	            else if (isUndef(oldEndVnode)) {
	                oldEndVnode = oldCh[--oldEndIdx];
	            }
	            else if (sameVnode(oldStartVnode, newStartVnode)) {
	                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
	                oldStartVnode = oldCh[++oldStartIdx];
	                newStartVnode = newCh[++newStartIdx];
	            }
	            else if (sameVnode(oldEndVnode, newEndVnode)) {
	                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
	                oldEndVnode = oldCh[--oldEndIdx];
	                newEndVnode = newCh[--newEndIdx];
	            }
	            else if (sameVnode(oldStartVnode, newEndVnode)) {
	                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
	                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));
	                oldStartVnode = oldCh[++oldStartIdx];
	                newEndVnode = newCh[--newEndIdx];
	            }
	            else if (sameVnode(oldEndVnode, newStartVnode)) {
	                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
	                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
	                oldEndVnode = oldCh[--oldEndIdx];
	                newStartVnode = newCh[++newStartIdx];
	            }
	            else {
	                if (oldKeyToIdx === undefined) {
	                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
	                }
	                idxInOld = oldKeyToIdx[newStartVnode.key];
	                if (isUndef(idxInOld)) {
	                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
	                    newStartVnode = newCh[++newStartIdx];
	                }
	                else {
	                    elmToMove = oldCh[idxInOld];
	                    if (elmToMove.sel !== newStartVnode.sel) {
	                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
	                    }
	                    else {
	                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
	                        oldCh[idxInOld] = undefined;
	                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);
	                    }
	                    newStartVnode = newCh[++newStartIdx];
	                }
	            }
	        }
	        if (oldStartIdx > oldEndIdx) {
	            before = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
	            addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
	        }
	        else if (newStartIdx > newEndIdx) {
	            removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
	        }
	    }
	    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {
	        var i, hook;
	        if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {
	            i(oldVnode, vnode);
	        }
	        var elm = vnode.elm = oldVnode.elm, oldCh = oldVnode.children, ch = vnode.children;
	        if (oldVnode === vnode)
	            return;
	        if (isDef(vnode.data)) {
	            for (i = 0; i < cbs.update.length; ++i)
	                cbs.update[i](oldVnode, vnode);
	            i = vnode.data.hook;
	            if (isDef(i) && isDef(i = i.update))
	                i(oldVnode, vnode);
	        }
	        if (isUndef(vnode.text)) {
	            if (isDef(oldCh) && isDef(ch)) {
	                if (oldCh !== ch)
	                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);
	            }
	            else if (isDef(ch)) {
	                if (isDef(oldVnode.text))
	                    api.setTextContent(elm, '');
	                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
	            }
	            else if (isDef(oldCh)) {
	                removeVnodes(elm, oldCh, 0, oldCh.length - 1);
	            }
	            else if (isDef(oldVnode.text)) {
	                api.setTextContent(elm, '');
	            }
	        }
	        else if (oldVnode.text !== vnode.text) {
	            api.setTextContent(elm, vnode.text);
	        }
	        if (isDef(hook) && isDef(i = hook.postpatch)) {
	            i(oldVnode, vnode);
	        }
	    }
	    return function patch(oldVnode, vnode) {
	        var i, elm, parent;
	        var insertedVnodeQueue = [];
	        for (i = 0; i < cbs.pre.length; ++i)
	            cbs.pre[i]();
	        if (!isVnode(oldVnode)) {
	            oldVnode = emptyNodeAt(oldVnode);
	        }
	        if (sameVnode(oldVnode, vnode)) {
	            patchVnode(oldVnode, vnode, insertedVnodeQueue);
	        }
	        else {
	            elm = oldVnode.elm;
	            parent = api.parentNode(elm);
	            createElm(vnode, insertedVnodeQueue);
	            if (parent !== null) {
	                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));
	                removeVnodes(parent, [oldVnode], 0, 0);
	            }
	        }
	        for (i = 0; i < insertedVnodeQueue.length; ++i) {
	            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);
	        }
	        for (i = 0; i < cbs.post.length; ++i)
	            cbs.post[i]();
	        return vnode;
	    };
	}
	exports.init = init;
	//# sourceMappingURL=snabbdom.js.map

/***/ },
/* 241 */
/***/ function(module, exports) {

	"use strict";
	function createElement(tagName) {
	    return document.createElement(tagName);
	}
	function createElementNS(namespaceURI, qualifiedName) {
	    return document.createElementNS(namespaceURI, qualifiedName);
	}
	function createTextNode(text) {
	    return document.createTextNode(text);
	}
	function insertBefore(parentNode, newNode, referenceNode) {
	    parentNode.insertBefore(newNode, referenceNode);
	}
	function removeChild(node, child) {
	    node.removeChild(child);
	}
	function appendChild(node, child) {
	    node.appendChild(child);
	}
	function parentNode(node) {
	    return node.parentNode;
	}
	function nextSibling(node) {
	    return node.nextSibling;
	}
	function tagName(elm) {
	    return elm.tagName;
	}
	function setTextContent(node, text) {
	    node.textContent = text;
	}
	exports.htmlDomApi = {
	    createElement: createElement,
	    createElementNS: createElementNS,
	    createTextNode: createTextNode,
	    insertBefore: insertBefore,
	    removeChild: removeChild,
	    appendChild: appendChild,
	    parentNode: parentNode,
	    nextSibling: nextSibling,
	    tagName: tagName,
	    setTextContent: setTextContent,
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = exports.htmlDomApi;
	//# sourceMappingURL=htmldomapi.js.map

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var h_1 = __webpack_require__(235);
	function copyToThunk(vnode, thunk) {
	    thunk.elm = vnode.elm;
	    vnode.data.fn = thunk.data.fn;
	    vnode.data.args = thunk.data.args;
	    thunk.data = vnode.data;
	    thunk.children = vnode.children;
	    thunk.text = vnode.text;
	    thunk.elm = vnode.elm;
	}
	function init(thunk) {
	    var cur = thunk.data;
	    var vnode = cur.fn.apply(undefined, cur.args);
	    copyToThunk(vnode, thunk);
	}
	function prepatch(oldVnode, thunk) {
	    var i, old = oldVnode.data, cur = thunk.data;
	    var oldArgs = old.args, args = cur.args;
	    if (old.fn !== cur.fn || oldArgs.length !== args.length) {
	        copyToThunk(cur.fn.apply(undefined, args), thunk);
	    }
	    for (i = 0; i < args.length; ++i) {
	        if (oldArgs[i] !== args[i]) {
	            copyToThunk(cur.fn.apply(undefined, args), thunk);
	            return;
	        }
	    }
	    copyToThunk(oldVnode, thunk);
	}
	exports.thunk = function thunk(sel, key, fn, args) {
	    if (args === undefined) {
	        args = fn;
	        fn = key;
	        key = undefined;
	    }
	    return h_1.h(sel, {
	        key: key,
	        hook: { init: init, prepatch: prepatch },
	        fn: fn,
	        args: args
	    });
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = exports.thunk;
	//# sourceMappingURL=thunk.js.map

/***/ },
/* 243 */
/***/ function(module, exports) {

	"use strict";
	var NamespaceURIs = {
	    "xlink": "http://www.w3.org/1999/xlink"
	};
	var booleanAttrs = ["allowfullscreen", "async", "autofocus", "autoplay", "checked", "compact", "controls", "declare",
	    "default", "defaultchecked", "defaultmuted", "defaultselected", "defer", "disabled", "draggable",
	    "enabled", "formnovalidate", "hidden", "indeterminate", "inert", "ismap", "itemscope", "loop", "multiple",
	    "muted", "nohref", "noresize", "noshade", "novalidate", "nowrap", "open", "pauseonexit", "readonly",
	    "required", "reversed", "scoped", "seamless", "selected", "sortable", "spellcheck", "translate",
	    "truespeed", "typemustmatch", "visible"];
	var booleanAttrsDict = Object.create(null);
	for (var i = 0, len = booleanAttrs.length; i < len; i++) {
	    booleanAttrsDict[booleanAttrs[i]] = true;
	}
	function updateAttrs(oldVnode, vnode) {
	    var key, cur, old, elm = vnode.elm, oldAttrs = oldVnode.data.attrs, attrs = vnode.data.attrs, namespaceSplit;
	    if (!oldAttrs && !attrs)
	        return;
	    oldAttrs = oldAttrs || {};
	    attrs = attrs || {};
	    // update modified attributes, add new attributes
	    for (key in attrs) {
	        cur = attrs[key];
	        old = oldAttrs[key];
	        if (old !== cur) {
	            if (!cur && booleanAttrsDict[key])
	                elm.removeAttribute(key);
	            else {
	                namespaceSplit = key.split(":");
	                if (namespaceSplit.length > 1 && NamespaceURIs.hasOwnProperty(namespaceSplit[0]))
	                    elm.setAttributeNS(NamespaceURIs[namespaceSplit[0]], key, cur);
	                else
	                    elm.setAttribute(key, cur);
	            }
	        }
	    }
	    //remove removed attributes
	    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)
	    // the other option is to remove all attributes with value == undefined
	    for (key in oldAttrs) {
	        if (!(key in attrs)) {
	            elm.removeAttribute(key);
	        }
	    }
	}
	exports.attributesModule = { create: updateAttrs, update: updateAttrs };
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = exports.attributesModule;
	//# sourceMappingURL=attributes.js.map

/***/ },
/* 244 */
/***/ function(module, exports) {

	"use strict";
	function updateDataset(oldVnode, vnode) {
	    var elm = vnode.elm, oldDataset = oldVnode.data.dataset, dataset = vnode.data.dataset, key;
	    if (!oldDataset && !dataset)
	        return;
	    oldDataset = oldDataset || {};
	    dataset = dataset || {};
	    for (key in oldDataset) {
	        if (!dataset[key]) {
	            delete elm.dataset[key];
	        }
	    }
	    for (key in dataset) {
	        if (oldDataset[key] !== dataset[key]) {
	            elm.dataset[key] = dataset[key];
	        }
	    }
	}
	exports.datasetModule = { create: updateDataset, update: updateDataset };
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = exports.datasetModule;
	//# sourceMappingURL=dataset.js.map

/***/ },
/* 245 */
/***/ function(module, exports) {

	'use strict';
	
	var raf = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame) || setTimeout;
	
	function addOrRemoveClass(el, className, add) {
	  el.classList[add ? 'add' : 'remove'](className);
	}
	
	function nextFrame(fn) {
	  raf(function() {
	    raf(fn);
	  });
	}
	
	function changeClassNextFrame(el, className, add) {
	  nextFrame(function() {
	    addOrRemoveClass(el, className, add);
	  });
	}
	
	function updateClass(oldVnode, newVnode) {
	  var el = newVnode.elm;
	  var oldClass = oldVnode.data.class;
	  var newClass = newVnode.data.class;
	
	  if (!oldClass && !newClass) {
	    return;
	  }
	  oldClass = oldClass || {};
	  newClass = newClass || {};
	
	  // remove classes which are no longer in vnode class obj
	  for (var name in oldClass) {
	    if (!(name in newClass)) {
	      el.classList.remove(name);
	    }
	  }
	
	  // handle new classes, taking into account special delayed classes
	  var oldHasDelay = 'delayed' in oldClass;
	  for (var name in newClass) {
	    var val = newClass[name];
	
	    if (typeof val === 'object') {
	
	      // special 'delayed'/'remove' class objects
	      if (name === 'delayed') {
	        for (var delayedName in val) {
	          var delayedVal = val[delayedName];
	          if (!oldHasDelay || delayedVal !== oldClass.delayed[delayedName]) {
	            changeClassNextFrame(el, delayedName, delayedVal);
	          }
	        }
	      }
	
	    } else if (val !== oldClass[name]) {
	
	      // normal class string, handle immediately
	      addOrRemoveClass(el, name, val);
	
	    }
	  }
	}
	
	function applyDestroyClass(vnode) {
	  var classObj = vnode.data.class;
	  var onDestroy = classObj && classObj.destroy;
	  if (typeof onDestroy !== 'object') {
	    return;
	  }
	
	  var el = vnode.elm;
	  for (var name in onDestroy) {
	    addOrRemoveClass(el, name, onDestroy[name]);
	  }
	}
	
	function applyRemoveClass(vnode, rmFunc) {
	  var classObj = vnode.data.class;
	  var onRemove = classObj && classObj.remove;
	  if (typeof onRemove !== 'object') {
	    rmFunc();
	    return;
	  }
	
	  var el = vnode.elm;
	  var delayRemove = 0;
	  for (var name in onRemove) {
	    var val = onRemove[name];
	    if (name === 'delayRemove') {
	      delayRemove = val;
	    } else {
	      addOrRemoveClass(el, name, val);
	    }
	  }
	
	  setTimeout(rmFunc, delayRemove);
	}
	
	module.exports = {
	  create:  updateClass,
	  update:  updateClass,
	  destroy: applyDestroyClass,
	  remove:  applyRemoveClass,
	};


/***/ },
/* 246 */
/***/ function(module, exports) {

	"use strict";
	function invokeHandler(handler, vnode, event) {
	    if (typeof handler === "function") {
	        // call function handler
	        handler.call(vnode, event, vnode);
	    }
	    else if (typeof handler === "object") {
	        // call handler with arguments
	        if (typeof handler[0] === "function") {
	            // special case for single argument for performance
	            if (handler.length === 2) {
	                handler[0].call(vnode, handler[1], event, vnode);
	            }
	            else {
	                var args = handler.slice(1);
	                args.push(event);
	                args.push(vnode);
	                handler[0].apply(vnode, args);
	            }
	        }
	        else {
	            // call multiple handlers
	            for (var i = 0; i < handler.length; i++) {
	                invokeHandler(handler[i]);
	            }
	        }
	    }
	}
	function handleEvent(event, vnode) {
	    var name = event.type, on = vnode.data.on;
	    // call event handler(s) if exists
	    if (on && on[name]) {
	        invokeHandler(on[name], vnode, event);
	    }
	}
	function createListener() {
	    return function handler(event) {
	        handleEvent(event, handler.vnode);
	    };
	}
	function updateEventListeners(oldVnode, vnode) {
	    var oldOn = oldVnode.data.on, oldListener = oldVnode.listener, oldElm = oldVnode.elm, on = vnode && vnode.data.on, elm = (vnode && vnode.elm), name;
	    // optimization for reused immutable handlers
	    if (oldOn === on) {
	        return;
	    }
	    // remove existing listeners which no longer used
	    if (oldOn && oldListener) {
	        // if element changed or deleted we remove all existing listeners unconditionally
	        if (!on) {
	            for (name in oldOn) {
	                // remove listener if element was changed or existing listeners removed
	                oldElm.removeEventListener(name, oldListener, false);
	            }
	        }
	        else {
	            for (name in oldOn) {
	                // remove listener if existing listener removed
	                if (!on[name]) {
	                    oldElm.removeEventListener(name, oldListener, false);
	                }
	            }
	        }
	    }
	    // add new listeners which has not already attached
	    if (on) {
	        // reuse existing listener or create new
	        var listener = vnode.listener = oldVnode.listener || createListener();
	        // update vnode for listener
	        listener.vnode = vnode;
	        // if element changed or added we add all needed listeners unconditionally
	        if (!oldOn) {
	            for (name in on) {
	                // add listener if element was changed or new listeners added
	                elm.addEventListener(name, listener, false);
	            }
	        }
	        else {
	            for (name in on) {
	                // add listener if new listener added
	                if (!oldOn[name]) {
	                    elm.addEventListener(name, listener, false);
	                }
	            }
	        }
	    }
	}
	exports.eventListenersModule = {
	    create: updateEventListeners,
	    update: updateEventListeners,
	    destroy: updateEventListeners
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = exports.eventListenersModule;
	//# sourceMappingURL=eventlisteners.js.map

/***/ },
/* 247 */
/***/ function(module, exports) {

	"use strict";
	function updateProps(oldVnode, vnode) {
	    var key, cur, old, elm = vnode.elm, oldProps = oldVnode.data.props, props = vnode.data.props;
	    if (!oldProps && !props)
	        return;
	    oldProps = oldProps || {};
	    props = props || {};
	    for (key in oldProps) {
	        if (!props[key]) {
	            delete elm[key];
	        }
	    }
	    for (key in props) {
	        cur = props[key];
	        old = oldProps[key];
	        if (old !== cur && (key !== 'value' || elm[key] !== cur)) {
	            elm[key] = cur;
	        }
	    }
	}
	exports.propsModule = { create: updateProps, update: updateProps };
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = exports.propsModule;
	//# sourceMappingURL=props.js.map

/***/ },
/* 248 */
/***/ function(module, exports) {

	"use strict";
	var raf = (typeof window !== 'undefined' && window.requestAnimationFrame) || setTimeout;
	var nextFrame = function (fn) { raf(function () { raf(fn); }); };
	function setNextFrame(obj, prop, val) {
	    nextFrame(function () { obj[prop] = val; });
	}
	function updateStyle(oldVnode, vnode) {
	    var cur, name, elm = vnode.elm, oldStyle = oldVnode.data.style, style = vnode.data.style;
	    if (!oldStyle && !style)
	        return;
	    oldStyle = oldStyle || {};
	    style = style || {};
	    var oldHasDel = 'delayed' in oldStyle;
	    for (name in oldStyle) {
	        if (!style[name]) {
	            if (name.startsWith('--')) {
	                elm.style.removeProperty(name);
	            }
	            else {
	                elm.style[name] = '';
	            }
	        }
	    }
	    for (name in style) {
	        cur = style[name];
	        if (name === 'delayed') {
	            for (name in style.delayed) {
	                cur = style.delayed[name];
	                if (!oldHasDel || cur !== oldStyle.delayed[name]) {
	                    setNextFrame(elm.style, name, cur);
	                }
	            }
	        }
	        else if (name !== 'remove' && cur !== oldStyle[name]) {
	            if (name.startsWith('--')) {
	                elm.style.setProperty(name, cur);
	            }
	            else {
	                elm.style[name] = cur;
	            }
	        }
	    }
	}
	function applyDestroyStyle(vnode) {
	    var style, name, elm = vnode.elm, s = vnode.data.style;
	    if (!s || !(style = s.destroy))
	        return;
	    for (name in style) {
	        elm.style[name] = style[name];
	    }
	}
	function applyRemoveStyle(vnode, rm) {
	    var s = vnode.data.style;
	    if (!s || !s.remove) {
	        rm();
	        return;
	    }
	    var name, elm = vnode.elm, i = 0, compStyle, style = s.remove, amount = 0, applied = [];
	    for (name in style) {
	        applied.push(name);
	        elm.style[name] = style[name];
	    }
	    compStyle = getComputedStyle(elm);
	    var props = compStyle['transition-property'].split(', ');
	    for (; i < props.length; ++i) {
	        if (applied.indexOf(props[i]) !== -1)
	            amount++;
	    }
	    elm.addEventListener('transitionend', function (ev) {
	        if (ev.target === elm)
	            --amount;
	        if (amount === 0)
	            rm();
	    });
	}
	exports.styleModule = {
	    create: updateStyle,
	    update: updateStyle,
	    destroy: applyDestroyStyle,
	    remove: applyRemoveStyle
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = exports.styleModule;
	//# sourceMappingURL=style.js.map

/***/ },
/* 249 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	// just the necessary bits of Backbone router+history
	
	var Router = function () {
	  function Router(app) {
	    var _this = this;
	
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
	    _classCallCheck(this, Router);
	
	    // allow injecting window dep
	    var routerWindow = this.window = options.window || window;
	
	    this.app = app;
	    var routeDefs = this.app.getConfig('routes');
	
	    // https://github.com/jashkenas/backbone/blob/d682061a/backbone.js#L1476-L1479
	    // Cached regular expressions for matching named param parts and splatted
	    // parts of route strings.
	    var optionalParam = /\((.*?)\)/g;
	    var namedParam = /(\(\?)?:\w+/g;
	    var splatParam = /\*\w+/g;
	    var escapeRegExp = /[\-{}\[\]+?.,\\\^$|#\s]/g;
	    this.compiledRoutes = Object.keys(routeDefs).map(function (routeExpr) {
	      // https://github.com/jashkenas/backbone/blob/d682061a/backbone.js#L1537-L1547
	      var expr = routeExpr.replace(escapeRegExp, '\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {
	        return optional ? match : '([^/?]+)';
	      }).replace(splatParam, '([^?]*?)');
	      expr = new RegExp('^' + expr + '(?:\\?([\\s\\S]*))?$');
	
	      // hook up route handler function
	      var handler = routeDefs[routeExpr];
	      if (typeof handler === 'string') {
	        // reference to another handler rather than its own function
	        handler = routeDefs[handler];
	      }
	
	      return { expr: expr, handler: handler };
	    });
	
	    var navigateToHash = function navigateToHash() {
	      return _this.navigate(routerWindow.location.hash);
	    };
	    routerWindow.addEventListener('popstate', function () {
	      return navigateToHash();
	    });
	
	    this.historyMethod = options.historyMethod || 'pushState';
	    var origChangeState = routerWindow.history[this.historyMethod];
	    routerWindow.history[this.historyMethod] = function () {
	      origChangeState.apply(routerWindow.history, arguments);
	      navigateToHash();
	    };
	  }
	
	  _createClass(Router, [{
	    key: 'navigate',
	    value: function navigate(fragment) {
	      var _this2 = this;
	
	      var stateUpdate = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
	      fragment = stripHash(fragment);
	      if (fragment === this.app.state.$fragment && !Object.keys(stateUpdate).length) {
	        return;
	      }
	
	      stateUpdate.$fragment = fragment;
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = this.compiledRoutes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var route = _step.value;
	
	          var matches = route.expr.exec(fragment);
	          if (matches) {
	            var _ret = function () {
	              // extract params
	              // https://github.com/jashkenas/backbone/blob/d682061a/backbone.js#L1553-L1558
	              var params = matches.slice(1);
	              params = params.map(function (param, i) {
	                // Don't decode the search params.
	                if (i === params.length - 1) {
	                  return param || null;
	                }
	                return param ? decodeURIComponent(param) : null;
	              });
	
	              var routeHandler = route.handler;
	              if (!routeHandler) {
	                throw 'No route handler defined for #' + fragment;
	              }
	              var routeStateUpdate = routeHandler.call.apply(routeHandler, [_this2.app, stateUpdate].concat(_toConsumableArray(params)));
	              if (routeStateUpdate) {
	                // don't update if route handler returned a falsey result
	                _this2.app.update(Object.assign({}, stateUpdate, routeStateUpdate));
	              }
	              return {
	                v: void 0
	              };
	            }();
	
	            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	          }
	        }
	
	        // no route matched
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      console.error('No route found matching #' + fragment);
	    }
	  }, {
	    key: 'replaceHash',
	    value: function replaceHash(fragment) {
	      fragment = stripHash(fragment);
	      if (fragment !== stripHash(this.window.location.hash)) {
	        this.window.history[this.historyMethod](null, null, '#' + fragment);
	      }
	    }
	  }]);
	
	  return Router;
	}();
	
	exports.default = Router;
	
	
	function stripHash(fragment) {
	  return fragment.replace(/^#*/, '');
	}

/***/ },
/* 250 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.mirrorLocationHash = mirrorLocationHash;
	function mirrorLocationHash(parentFrame) {
	  // use replaceState in child frame so it doesn't touch browser
	  // history except through communication with parent frame
	  var origReplaceState = window.history.replaceState;
	  window.history.replaceState = function () {
	    origReplaceState.apply(this, arguments);
	    parentFrame.send("hashChange", window.location.hash);
	  };
	
	  parentFrame.addHandler("hashChange", function (hash) {
	    if (hash !== window.location.hash) {
	      window.history.replaceState(null, null, hash.replace(/^#*/, "#"));
	    }
	  });
	
	  window.addEventListener("popstate", function () {
	    return parentFrame.send("hashChange", window.location.hash);
	  });
	}

/***/ },
/* 251 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	// safe namespaced in-browser persistence (currently localStorage only)
	
	var Persistence = function () {
	  function Persistence(namespace) {
	    _classCallCheck(this, Persistence);
	
	    this.namespace = namespace;
	  }
	
	  _createClass(Persistence, [{
	    key: "get",
	    value: function get(key) {
	      try {
	        return window.localStorage.getItem(this.keyFor(key));
	      } catch (err) {
	        return null;
	      }
	    }
	  }, {
	    key: "keyFor",
	    value: function keyFor(key) {
	      return this.namespace + ":" + key;
	    }
	  }, {
	    key: "set",
	    value: function set(key, val) {
	      try {
	        window.localStorage.setItem(this.keyFor(key), val);
	      } catch (err) {
	        return;
	      }
	    }
	  }]);
	
	  return Persistence;
	}();
	
	exports.default = Persistence;

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _util = __webpack_require__(2);
	
	var _section = __webpack_require__(253);
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var BuilderSections = function () {
	  function BuilderSections() {
	    var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, BuilderSections);
	
	    this.show = attrs.show || new _section.ShowSection();
	    this.group = attrs.group || new _section.GroupSection();
	    this.filter = attrs.filter || new _section.FilterSection();
	    this.time = attrs.time || new _section.TimeSection();
	  }
	
	  _createClass(BuilderSections, [{
	    key: 'getClause',
	    value: function getClause(type, clauseIndex) {
	      return this[type].clauses[clauseIndex];
	    }
	  }, {
	    key: 'replaceSection',
	    value: function replaceSection(section) {
	      return this.validate(new BuilderSections((0, _util.extend)(this.attrs, _defineProperty({}, section.TYPE, section))));
	    }
	  }, {
	    key: 'serialize',
	    value: function serialize() {
	      return (0, _util.mapValues)(this.attrs, function (section) {
	        return section.serialize();
	      });
	    }
	  }, {
	    key: 'toUrlData',
	    value: function toUrlData() {
	      var _this = this;
	
	      return Object.keys(this.attrs).reduce(function (obj, clause) {
	        if (_this.attrs[clause].hasClauses()) {
	          obj[clause] = _this.attrs[clause].toUrlData();
	        }
	        return obj;
	      }, {});
	    }
	  }, {
	    key: 'validate',
	    value: function validate(newSections) {
	      var valid = newSections.valid;
	
	      if (!valid) {
	        _util.debug.warn('sections invalid:', newSections);
	      }
	
	      return valid ? newSections : this;
	    }
	  }, {
	    key: 'attrs',
	    get: function get() {
	      return (0, _util.pick)(this, ['show', 'group', 'filter', 'time']);
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      return this.show instanceof _section.ShowSection && this.show.valid && this.group instanceof _section.GroupSection && this.group.valid && this.filter instanceof _section.FilterSection && this.filter.valid && this.time instanceof _section.TimeSection && this.time.valid;
	    }
	  }], [{
	    key: 'deserialize',
	    value: function deserialize(attrs) {
	      return new BuilderSections((0, _util.mapValues)(attrs, function (clauseAttrs, sectionType) {
	        return _section.Section.deserialize(sectionType, clauseAttrs);
	      }));
	    }
	  }]);
	
	  return BuilderSections;
	}();
	
	exports.default = BuilderSections;
	
	BuilderSections.TYPES = BuilderSections.prototype.TYPES = ['show', 'group', 'time', 'filter'];

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.TimeSection = exports.FilterSection = exports.GroupSection = exports.ShowSection = exports.Section = undefined;
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _util = __webpack_require__(2);
	
	var _util2 = __webpack_require__(9);
	
	var _clause = __webpack_require__(14);
	
	var _util3 = __webpack_require__(8);
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Section = exports.Section = function () {
	  function Section() {
	    var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, Section);
	
	    var clauseArgs = Array.prototype.slice.call(arguments).filter(function (arg) {
	      return arg instanceof _clause.Clause;
	    });
	    this.clauses = [].concat(_toConsumableArray(clauseArgs), _toConsumableArray(attrs.clauses || []));
	  }
	
	  _createClass(Section, [{
	    key: 'create',
	    value: function create() {
	      return Section.create.apply(Section, arguments);
	    }
	  }, {
	    key: 'serialize',
	    value: function serialize() {
	      return this.clauses.map(function (c) {
	        return c.serialize();
	      });
	    }
	  }, {
	    key: 'toUrlData',
	    value: function toUrlData() {
	      return this.clauses.map(function (c) {
	        return c.toUrlData();
	      });
	    }
	  }, {
	    key: 'validate',
	    value: function validate(newSection) {
	      var valid = newSection.valid;
	
	      if (!valid) {
	        _util2.debug.warn(this.TYPE + ' section invalid:', newSection);
	      }
	
	      return valid ? newSection : this;
	    }
	  }, {
	    key: 'hasClauses',
	    value: function hasClauses() {
	      return !!this.clauses.length;
	    }
	  }, {
	    key: 'appendClause',
	    value: function appendClause(newClause) {
	      return this.validate(Section.create(this.TYPE, (0, _util3.extend)(this, { clauses: (0, _util.insertAtIndex)(this.clauses, this.clauses.length, newClause) })));
	    }
	  }, {
	    key: 'insertClause',
	    value: function insertClause(index, newClause) {
	      return this.validate(Section.create(this.TYPE, (0, _util3.extend)(this, { clauses: (0, _util.insertAtIndex)(this.clauses, index, newClause) })));
	    }
	  }, {
	    key: 'replaceClause',
	    value: function replaceClause(index, newClause) {
	      return this.validate(Section.create(this.TYPE, (0, _util3.extend)(this, { clauses: (0, _util.replaceByIndex)(this.clauses, index, newClause) })));
	    }
	  }, {
	    key: 'removeClause',
	    value: function removeClause(index) {
	      return this.validate(Section.create(this.TYPE, (0, _util3.extend)(this, { clauses: (0, _util.removeByIndex)(this.clauses, index) })));
	    }
	  }, {
	    key: 'removeAllClauses',
	    value: function removeAllClauses() {
	      return this.validate(Section.create(this.TYPE, (0, _util3.extend)(this, { clauses: [] })));
	    }
	  }, {
	    key: 'attrs',
	    get: function get() {
	      var clauses = this.clauses;
	
	      return { clauses: clauses };
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      return this.clauses.every(function (clause) {
	        return clause.valid;
	      });
	    }
	  }], [{
	    key: 'create',
	    value: function create(sectionType, attrs) {
	      switch (sectionType) {
	        case 'show':
	          return new ShowSection(attrs);
	        case 'group':
	          return new GroupSection(attrs);
	        case 'filter':
	          return new FilterSection(attrs);
	        case 'time':
	          return new TimeSection(attrs);
	      }
	    }
	  }, {
	    key: 'deserialize',
	    value: function deserialize(sectionType, clauseAttrs) {
	      var section = { clauses: [] };
	      if (Array.isArray(clauseAttrs)) {
	        section = Section.create(sectionType, {
	          clauses: clauseAttrs.map(function (c) {
	            return _clause.Clause.create(sectionType, c);
	          })
	        });
	      } else if (typeof clauseAttrs === 'object' && Array.isArray(clauseAttrs.clauses)) {
	        section = Section.create(sectionType, (0, _util3.extend)(clauseAttrs, {
	          clauses: clauseAttrs.clauses.map(function (c) {
	            return _clause.Clause.create(sectionType, c);
	          })
	        }));
	      }
	      return section;
	    }
	  }]);
	
	  return Section;
	}();
	
	var ShowSection = exports.ShowSection = function (_Section) {
	  _inherits(ShowSection, _Section);
	
	  function ShowSection() {
	    _classCallCheck(this, ShowSection);
	
	    return _possibleConstructorReturn(this, (ShowSection.__proto__ || Object.getPrototypeOf(ShowSection)).apply(this, arguments));
	  }
	
	  _createClass(ShowSection, [{
	    key: 'clauseResourceTypes',
	    value: function clauseResourceTypes() {
	      var uniqueShowTypes = this.clauses.reduce(function (types, clause) {
	        return types.add(clause.resourceType === _clause.Clause.RESOURCE_TYPE_ALL ? _clause.Clause.RESOURCE_TYPE_EVENTS : clause.resourceType);
	      }, new Set());
	      uniqueShowTypes = Array.from(uniqueShowTypes);
	      return uniqueShowTypes.length === 1 ? uniqueShowTypes[0] : uniqueShowTypes;
	    }
	  }, {
	    key: 'isPeopleOnlyQuery',
	    value: function isPeopleOnlyQuery() {
	      return this.clauseResourceTypes() === _clause.Clause.RESOURCE_TYPE_PEOPLE;
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      return _get(ShowSection.prototype.__proto__ || Object.getPrototypeOf(ShowSection.prototype), 'valid', this) && this.clauses.every(function (clause) {
	        return clause instanceof _clause.ShowClause;
	      });
	    }
	  }]);
	
	  return ShowSection;
	}(Section);
	
	ShowSection.TYPE = ShowSection.prototype.TYPE = 'show';
	
	var GroupSection = exports.GroupSection = function (_Section2) {
	  _inherits(GroupSection, _Section2);
	
	  function GroupSection() {
	    _classCallCheck(this, GroupSection);
	
	    return _possibleConstructorReturn(this, (GroupSection.__proto__ || Object.getPrototypeOf(GroupSection)).apply(this, arguments));
	  }
	
	  _createClass(GroupSection, [{
	    key: 'isPeopleTimeSeries',
	    value: function isPeopleTimeSeries() {
	      return this.clauses.length && this.clauses[this.clauses.length - 1].propertyType === 'datetime';
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      return _get(GroupSection.prototype.__proto__ || Object.getPrototypeOf(GroupSection.prototype), 'valid', this) && this.clauses.every(function (clause) {
	        return clause instanceof _clause.GroupClause;
	      });
	    }
	  }]);
	
	  return GroupSection;
	}(Section);
	
	GroupSection.TYPE = GroupSection.prototype.TYPE = 'group';
	
	var FilterSection = exports.FilterSection = function (_Section3) {
	  _inherits(FilterSection, _Section3);
	
	  function FilterSection() {
	    var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, FilterSection);
	
	    var _this3 = _possibleConstructorReturn(this, (FilterSection.__proto__ || Object.getPrototypeOf(FilterSection)).apply(this, arguments));
	
	    if (attrs && attrs.determiner && FilterSection.DETERMINER_TYPES.includes(attrs.determiner)) {
	      _this3.determiner = attrs.determiner;
	    } else {
	      _this3.determiner = FilterSection.DETERMINER_ALL;
	    }
	    if (_this3.clauses && _this3.clauses.length < 2) {
	      // reset to all when only one clause
	      _this3.determiner = FilterSection.DETERMINER_ALL;
	    }
	
	    return _this3;
	  }
	
	  _createClass(FilterSection, [{
	    key: 'toUrlData',
	    value: function toUrlData() {
	      var clauses = _get(FilterSection.prototype.__proto__ || Object.getPrototypeOf(FilterSection.prototype), 'toUrlData', this).call(this);
	      return clauses.length ? { clauses: clauses, determiner: this.determiner } : {};
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      return _get(FilterSection.prototype.__proto__ || Object.getPrototypeOf(FilterSection.prototype), 'valid', this) && this.clauses.every(function (clause) {
	        return clause instanceof _clause.FilterClause;
	      }) && FilterSection.DETERMINER_TYPES.includes(this.determiner);
	    }
	  }]);
	
	  return FilterSection;
	}(Section);
	
	FilterSection.TYPE = FilterSection.prototype.TYPE = 'filter';
	FilterSection.DETERMINER_ALL = FilterSection.prototype.DETERMINER_ALL = 'all';
	FilterSection.DETERMINER_ANY = FilterSection.prototype.DETERMINER_ANY = 'any';
	FilterSection.DETERMINER_TYPES = FilterSection.prototype.DETERMINER_TYPES = [FilterSection.DETERMINER_ALL, FilterSection.DETERMINER_ANY];
	
	var TimeSection = exports.TimeSection = function (_Section4) {
	  _inherits(TimeSection, _Section4);
	
	  function TimeSection() {
	    _classCallCheck(this, TimeSection);
	
	    return _possibleConstructorReturn(this, (TimeSection.__proto__ || Object.getPrototypeOf(TimeSection)).apply(this, arguments));
	  }
	
	  _createClass(TimeSection, [{
	    key: 'valid',
	    get: function get() {
	      return _get(TimeSection.prototype.__proto__ || Object.getPrototypeOf(TimeSection.prototype), 'valid', this) && this.clauses.length === 1 && this.clauses.every(function (clause) {
	        return clause instanceof _clause.TimeClause;
	      });
	    }
	  }]);
	
	  return TimeSection;
	}(Section);
	
	TimeSection.TYPE = TimeSection.prototype.TYPE = 'time';

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _util = __webpack_require__(8);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var legendID = 1;
	
	var Legend = function () {
	  function Legend(attrs) {
	    _classCallCheck(this, Legend);
	
	    Object.assign(this, (0, _util.pick)(attrs, ['data']));
	    this.id = legendID++;
	    this.changeID = 1;
	  }
	
	  _createClass(Legend, [{
	    key: 'isAnyDisplayExpanded',
	    value: function isAnyDisplayExpanded() {
	      return this.seriesShowing.some(function (displaySetting) {
	        return displaySetting === 'expanded';
	      });
	    }
	  }, {
	    key: '_seriesDisplaySetting',
	    value: function _seriesDisplaySetting(series) {
	      return Object.keys(series.seriesData).length > 20 ? 'minimized' : 'all';
	    }
	  }, {
	    key: '_buildColorMap',
	    value: function _buildColorMap(mapName, dataType, numColors) {
	      var _this = this;
	
	      this[mapName] = {};
	      if (this.data && this.data.length) {
	        (function () {
	          var colorIdx = 0;
	          _this.data[0][dataType + 'SortedKeys'].forEach(function (series) {
	            _this[mapName][series] = _this[mapName][series] || colorIdx++ % numColors + 1;
	          });
	        })();
	      }
	    }
	  }, {
	    key: 'buildColorMap',
	    value: function buildColorMap() {
	      var numColors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;
	
	      var data = this.data[0];
	      if (data) {
	        if (!data.flattenedData || !data.seriesData) {
	          Object.assign(this.data[0], {
	            flattenedData: {},
	            flattenedDataPaths: {},
	            flattenedDataSortedKeys: [],
	            seriesDataSortedKeys: []
	          });
	        } else {
	          this._buildColorMap('_colorMap', Legend.SERIES_DATA, numColors);
	          this._buildColorMap('_flattenedColorMap', Legend.FLAT_DATA, numColors);
	        }
	      }
	      this.changeID++;
	      return this;
	    }
	  }, {
	    key: 'getSeriesDisplayAtIndex',
	    value: function getSeriesDisplayAtIndex(seriesIdx) {
	      return this.seriesShowing[seriesIdx] || null;
	    }
	  }, {
	    key: 'getColorForSeries',
	    value: function getColorForSeries(series) {
	      var flattenedData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	      return this[flattenedData ? '_flattenedColorMap' : '_colorMap'][series];
	    }
	  }, {
	    key: 'setDefaultSeriesShowing',
	    value: function setDefaultSeriesShowing() {
	      this._seriesShowing = null;
	      return this;
	    }
	  }, {
	    key: 'showAllSeries',
	    value: function showAllSeries() {
	      this.changeID++;
	      this.seriesShowing = this.seriesShowing.map(function () {
	        return 'all';
	      });
	      return this;
	    }
	  }, {
	    key: 'isSeriesShowing',
	    value: function isSeriesShowing(seriesIdx) {
	      return this.seriesShowing[seriesIdx] !== 'hidden';
	    }
	  }, {
	    key: 'toggleShowSeries',
	    value: function toggleShowSeries(seriesIdx) {
	      if (this.seriesShowing && this.seriesShowing.length >= seriesIdx) {
	        this.seriesShowing[seriesIdx] = this.isSeriesShowing(seriesIdx) ? 'hidden' : this._seriesDisplaySetting(this.data[seriesIdx]);
	        this.changeID++;
	      }
	      return this;
	    }
	  }, {
	    key: 'toggleSeriesDisplaySetting',
	    value: function toggleSeriesDisplaySetting(seriesIdx) {
	      if (['minimized', 'expanded'].includes(this.seriesShowing[seriesIdx])) {
	        var oldDisplaySetting = this.seriesShowing[seriesIdx];
	        this.seriesShowing = this.seriesShowing.map(function (displaySetting) {
	          return displaySetting === 'expanded' ? 'minimized' : displaySetting;
	        });
	        this.seriesShowing[seriesIdx] = oldDisplaySetting === 'minimized' ? 'expanded' : 'minimized';
	        this.changeID++;
	      }
	      return this;
	    }
	  }, {
	    key: 'update',
	    value: function update(attrs) {
	      this.changeID++;
	      return Object.assign(this, attrs);
	    }
	  }, {
	    key: 'updateSeriesAtIndex',
	    value: function updateSeriesAtIndex(_ref) {
	      var _this2 = this;
	
	      var _ref$dataType = _ref.dataType,
	          dataType = _ref$dataType === undefined ? this.SERIES_DATA : _ref$dataType,
	          _ref$legendUpdate = _ref.legendUpdate,
	          legendUpdate = _ref$legendUpdate === undefined ? {} : _ref$legendUpdate;
	
	      this.changeID++;
	      Object.keys(legendUpdate).forEach(function (seriesIdx) {
	        Object.assign(_this2.data[seriesIdx][dataType], legendUpdate[seriesIdx]);
	      });
	      return this;
	    }
	  }, {
	    key: 'showAllLegendSeries',
	    value: function showAllLegendSeries(dataType) {
	      var _this3 = this;
	
	      this.changeID++;
	      Object.keys(this.data).forEach(function (seriesIdx) {
	        var series = _this3.data[seriesIdx][dataType];
	        Object.keys(series).forEach(function (key) {
	          return series[key] = true;
	        });
	      });
	      return this;
	    }
	  }, {
	    key: '_sortAndLimitSeries',
	    value: function _sortAndLimitSeries(series, defaultValue, showLimit) {
	      var prevLegendData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
	
	      var sortedKeys = (0, _util.sorted)(Object.keys(series), {
	        order: 'desc',
	        transform: function transform(item) {
	          return series[item];
	        }
	      });
	
	      var defaultStates = sortedKeys.reduce(function (obj, key, idx) {
	        obj[key] = idx < showLimit ? defaultValue : false;
	        if (prevLegendData.hasOwnProperty(key)) {
	          obj[key] = prevLegendData[key];
	        }
	        return obj;
	      }, {});
	      return { sortedKeys: sortedKeys, defaultStates: defaultStates };
	    }
	  }, {
	    key: 'updateLegendData',
	    value: function updateLegendData(result) {
	      var _this4 = this;
	
	      var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	
	      var segments = result.headers.slice();
	      var sumNestedResults = result.series;
	
	      var prevSeriesHeaders = (this.data || []).map(function (series) {
	        return series.seriesName;
	      });
	
	      var data = segments.reverse().map(function (seriesName, idx) {
	        var dataSegment = { seriesName: seriesName };
	        var prevSeriesLegend = {};
	        if (prevSeriesHeaders.includes(seriesName)) {
	          prevSeriesLegend = _this4.data[prevSeriesHeaders.indexOf(seriesName)];
	        }
	
	        sumNestedResults = (0, _util.nestedObjectSum)(sumNestedResults);
	        dataSegment.combinedResults = (0, _util.combineNestedObjKeys)(sumNestedResults);
	        var seriesResults = _this4._sortAndLimitSeries(dataSegment.combinedResults, defaultValue, 24, prevSeriesLegend.seriesData);
	        dataSegment.seriesData = seriesResults.defaultStates;
	
	        if (!idx) {
	          // Flattened Data for Line Chart
	          var sumNestedLineResults = (0, _util.nestedObjectSum)(result.dataForLineChart());
	          var resultsFlattened = (0, _util.flattenNestedObjectToPath)(sumNestedLineResults);
	          var flatResults = _this4._sortAndLimitSeries(resultsFlattened.values, defaultValue, 20, prevSeriesLegend.flattenedData);
	
	          Object.assign(dataSegment, {
	            flattenedData: flatResults.defaultStates,
	            flattenedDataPaths: resultsFlattened.paths,
	            flattenedDataSortedKeys: flatResults.sortedKeys,
	            seriesDataSortedKeys: seriesResults.sortedKeys
	          });
	        }
	        return dataSegment;
	      });
	
	      return Object.assign(this, { data: data }).buildColorMap().setDefaultSeriesShowing();
	    }
	  }, {
	    key: 'unselectedCount',
	    value: function unselectedCount(seriesIdx, dataType) {
	      return Object.values(this.data[seriesIdx][dataType]).filter(function (value) {
	        return !value;
	      }).length;
	    }
	  }, {
	    key: 'revisionStr',
	    get: function get() {
	      return this.id + '-' + this.changeID;
	    }
	  }, {
	    key: 'colorMap',
	    get: function get() {
	      if (!Object.keys(this._colorMap || {}).length) {
	        this.buildColorMap();
	      }
	      return this._colorMap;
	    }
	  }, {
	    key: 'seriesShowing',
	    get: function get() {
	      var _this5 = this;
	
	      if (!this._seriesShowing) {
	        this._seriesShowing = this.data.map(function (series, idx) {
	          return idx === 0 ? _this5._seriesDisplaySetting(series) : 'hidden';
	        });
	      }
	      return this._seriesShowing;
	    },
	    set: function set(value) {
	      this.changeID++;
	      this._seriesShowing = value;
	    }
	  }]);
	
	  return Legend;
	}();
	
	exports.default = Legend;
	
	
	Legend.SERIES_DATA = Legend.prototype.SERIES_DATA = 'seriesData';
	Legend.FLAT_DATA = Legend.prototype.FLAT_DATA = 'flattenedData';

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _base = __webpack_require__(256);
	
	var _base2 = _interopRequireDefault(_base);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TopEventsQuery = function (_BaseQuery) {
	  _inherits(TopEventsQuery, _BaseQuery);
	
	  function TopEventsQuery() {
	    _classCallCheck(this, TopEventsQuery);
	
	    return _possibleConstructorReturn(this, (TopEventsQuery.__proto__ || Object.getPrototypeOf(TopEventsQuery)).apply(this, arguments));
	  }
	
	  _createClass(TopEventsQuery, [{
	    key: 'buildUrl',
	    value: function buildUrl() {
	      return 'api/2.0/events/names';
	    }
	  }, {
	    key: 'buildParams',
	    value: function buildParams() {
	      return {
	        sort_fn: 'desc', // eslint-disable-line camelcase
	        type: 'general',
	        limit: 255
	      };
	    }
	  }]);
	
	  return TopEventsQuery;
	}(_base2.default);
	
	exports.default = TopEventsQuery;

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _util = __webpack_require__(2);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var BaseQuery = function () {
	  function BaseQuery(apiAttrs) {
	    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    _classCallCheck(this, BaseQuery);
	
	    this.query = null; // used to check for obsolete queries
	    this.apiHost = apiAttrs.apiHost;
	    this.apiSecret = apiAttrs.apiSecret;
	
	    if (!this.apiHost) {
	      throw new Error('apiHost required for Query!');
	    }
	    if (!this.apiSecret) {
	      throw new Error('apiSecret required for Query!');
	    }
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;
	
	    try {
	      for (var _iterator = Object.keys(options)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        var attr = _step.value;
	
	        this[attr] = options[attr];
	      }
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }
	  }
	
	  _createClass(BaseQuery, [{
	    key: 'build',
	    value: function build(state, options) {
	      this.query = this.buildQuery(state, options);
	      return this;
	    }
	  }, {
	    key: 'run',
	    value: function run(cachedResult) {
	      var _this = this;
	
	      var query = this.query;
	
	      return new Promise(function (resolve, reject) {
	        if (_this.valid) {
	          if (cachedResult) {
	            resolve(cachedResult);
	          } else {
	            _this.executeQuery().then(function (rawResults) {
	              if (query === _this.query) {
	                // ignore obsolete queries
	                resolve(_this.processResults(rawResults));
	              }
	            }).catch(reject);
	          }
	        } else {
	          resolve(_this.processResults(null));
	        }
	      });
	    }
	  }, {
	    key: 'buildOptions',
	    value: function buildOptions() {
	      return {};
	    }
	  }, {
	    key: 'buildParams',
	    value: function buildParams() {
	      return {};
	    }
	  }, {
	    key: 'buildQuery',
	    value: function buildQuery() {
	      return {};
	    }
	  }, {
	    key: 'buildUrl',
	    value: function buildUrl() {
	      return '';
	    }
	  }, {
	    key: 'executeQuery',
	    value: function executeQuery() {
	      return this.fetch(this.buildUrl(), this.buildParams(), this.buildOptions());
	    }
	  }, {
	    key: 'fetch',
	    value: function (_fetch) {
	      function fetch(_x, _x2, _x3) {
	        return _fetch.apply(this, arguments);
	      }
	
	      fetch.toString = function () {
	        return _fetch.toString();
	      };
	
	      return fetch;
	    }(function (endpoint, params, queryOptions) {
	      var url = this.apiHost + '/' + endpoint;
	      return fetch(url, Object.assign({
	        headers: {
	          Authorization: 'Basic ' + btoa(this.apiSecret + ':')
	        },
	        method: 'POST',
	        body: (0, _util.objToQueryString)(params)
	      }, queryOptions)).then(function (response) {
	        if (response.status < 400 || response.body) {
	          return response.json();
	        } else {
	          return { error: response.statusText };
	        }
	      }).catch(function (e) {
	        return console.error('Error fetching ' + url, e);
	      });
	    })
	
	    // expected args: results, query (optional)
	
	  }, {
	    key: 'processResults',
	    value: function processResults(results) {
	      return results;
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      return true;
	    }
	  }]);
	
	  return BaseQuery;
	}();
	
	// special string value used to mark pieces of state as "loading"
	// while queries to populate the state are in flight
	
	
	exports.default = BaseQuery;
	BaseQuery.LOADING = '$IRB_QUERY_LOADING';

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.TopPeoplePropertiesQuery = exports.TopEventPropertiesQuery = undefined;
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _util = __webpack_require__(2);
	
	var _util2 = __webpack_require__(9);
	
	var _base = __webpack_require__(256);
	
	var _base2 = _interopRequireDefault(_base);
	
	var _clause = __webpack_require__(14);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var BaseTopPropertiesQuery = function (_BaseQuery) {
	  _inherits(BaseTopPropertiesQuery, _BaseQuery);
	
	  function BaseTopPropertiesQuery() {
	    _classCallCheck(this, BaseTopPropertiesQuery);
	
	    return _possibleConstructorReturn(this, (BaseTopPropertiesQuery.__proto__ || Object.getPrototypeOf(BaseTopPropertiesQuery)).apply(this, arguments));
	  }
	
	  _createClass(BaseTopPropertiesQuery, [{
	    key: 'buildParams',
	    value: function buildParams() {
	      return { limit: 255 };
	    }
	  }, {
	    key: 'processResults',
	    value: function processResults(results) {
	      var _this2 = this;
	
	      var properties = Object.keys(results).map(function (name) {
	        var _results$name = results[name],
	            count = _results$name.count,
	            type = _results$name.type;
	
	        return { count: count, type: type, name: name, resourceType: _this2.resourceType };
	      }).filter(function (prop) {
	        return _clause.PROPERTY_TYPES.includes(prop.type);
	      });
	      // TODO: cassie investigate if we should be filtering these out or handling them better later
	
	      return (0, _util.sorted)(properties, {
	        transform: function transform(prop) {
	          return (0, _util2.renameProperty)(prop.name).toLowerCase();
	        }
	      });
	    }
	  }]);
	
	  return BaseTopPropertiesQuery;
	}(_base2.default);
	
	var TopEventPropertiesQuery = exports.TopEventPropertiesQuery = function (_BaseTopPropertiesQue) {
	  _inherits(TopEventPropertiesQuery, _BaseTopPropertiesQue);
	
	  function TopEventPropertiesQuery() {
	    _classCallCheck(this, TopEventPropertiesQuery);
	
	    return _possibleConstructorReturn(this, (TopEventPropertiesQuery.__proto__ || Object.getPrototypeOf(TopEventPropertiesQuery)).apply(this, arguments));
	  }
	
	  _createClass(TopEventPropertiesQuery, [{
	    key: 'buildQuery',
	    value: function buildQuery(state) {
	      var event = state.event;
	      return event ? { event: event } : {};
	    }
	  }, {
	    key: 'buildUrl',
	    value: function buildUrl() {
	      return 'api/2.0/events/properties/toptypes';
	    }
	  }, {
	    key: 'buildParams',
	    value: function buildParams() {
	      var params = _get(TopEventPropertiesQuery.prototype.__proto__ || Object.getPrototypeOf(TopEventPropertiesQuery.prototype), 'buildParams', this).call(this);
	      var event = this.query.event;
	
	      return event ? (0, _util.extend)(params, { event: event }) : params;
	    }
	  }, {
	    key: 'resourceType',
	    get: function get() {
	      return 'events';
	    }
	  }]);
	
	  return TopEventPropertiesQuery;
	}(BaseTopPropertiesQuery);
	
	var TopPeoplePropertiesQuery = exports.TopPeoplePropertiesQuery = function (_BaseTopPropertiesQue2) {
	  _inherits(TopPeoplePropertiesQuery, _BaseTopPropertiesQue2);
	
	  function TopPeoplePropertiesQuery() {
	    _classCallCheck(this, TopPeoplePropertiesQuery);
	
	    return _possibleConstructorReturn(this, (TopPeoplePropertiesQuery.__proto__ || Object.getPrototypeOf(TopPeoplePropertiesQuery)).apply(this, arguments));
	  }
	
	  _createClass(TopPeoplePropertiesQuery, [{
	    key: 'buildUrl',
	    value: function buildUrl() {
	      return 'api/2.0/engage/properties';
	    }
	  }, {
	    key: 'processResults',
	    value: function processResults(properties) {
	      return _get(TopPeoplePropertiesQuery.prototype.__proto__ || Object.getPrototypeOf(TopPeoplePropertiesQuery.prototype), 'processResults', this).call(this, properties.results);
	    }
	  }, {
	    key: 'resourceType',
	    get: function get() {
	      return 'people';
	    }
	  }]);
	
	  return TopPeoplePropertiesQuery;
	}(BaseTopPropertiesQuery);

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.TopPeoplePropertyValuesQuery = exports.TopEventPropertyValuesQuery = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _util = __webpack_require__(2);
	
	var _base = __webpack_require__(256);
	
	var _base2 = _interopRequireDefault(_base);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var BasePropertyValuesQuery = function (_BaseQuery) {
	  _inherits(BasePropertyValuesQuery, _BaseQuery);
	
	  function BasePropertyValuesQuery() {
	    _classCallCheck(this, BasePropertyValuesQuery);
	
	    return _possibleConstructorReturn(this, (BasePropertyValuesQuery.__proto__ || Object.getPrototypeOf(BasePropertyValuesQuery)).apply(this, arguments));
	  }
	
	  _createClass(BasePropertyValuesQuery, [{
	    key: 'buildQuery',
	    value: function buildQuery(state) {
	      var property = null;
	      if (typeof state.stageClauses === 'object' && state.stageClauses.length) {
	        property = state.stageClauses[state.stageClauses.length - 1].value;
	      }
	      return { property: property };
	    }
	  }]);
	
	  return BasePropertyValuesQuery;
	}(_base2.default);
	
	var TopEventPropertyValuesQuery = exports.TopEventPropertyValuesQuery = function (_BasePropertyValuesQu) {
	  _inherits(TopEventPropertyValuesQuery, _BasePropertyValuesQu);
	
	  function TopEventPropertyValuesQuery() {
	    _classCallCheck(this, TopEventPropertyValuesQuery);
	
	    return _possibleConstructorReturn(this, (TopEventPropertyValuesQuery.__proto__ || Object.getPrototypeOf(TopEventPropertyValuesQuery)).apply(this, arguments));
	  }
	
	  _createClass(TopEventPropertyValuesQuery, [{
	    key: 'buildUrl',
	    value: function buildUrl() {
	      return 'api/2.0/events/properties/values';
	    }
	  }, {
	    key: 'buildParams',
	    value: function buildParams() {
	      return { name: this.query.property };
	    }
	  }, {
	    key: 'processResults',
	    value: function processResults(results) {
	      return (0, _util.sorted)(results, {
	        transform: function transform(value) {
	          return value.toLowerCase();
	        }
	      });
	    }
	  }]);
	
	  return TopEventPropertyValuesQuery;
	}(BasePropertyValuesQuery);
	
	var TopPeoplePropertyValuesQuery = exports.TopPeoplePropertyValuesQuery = function (_BasePropertyValuesQu2) {
	  _inherits(TopPeoplePropertyValuesQuery, _BasePropertyValuesQu2);
	
	  function TopPeoplePropertyValuesQuery() {
	    _classCallCheck(this, TopPeoplePropertyValuesQuery);
	
	    return _possibleConstructorReturn(this, (TopPeoplePropertyValuesQuery.__proto__ || Object.getPrototypeOf(TopPeoplePropertyValuesQuery)).apply(this, arguments));
	  }
	
	  _createClass(TopPeoplePropertyValuesQuery, [{
	    key: 'buildUrl',
	    value: function buildUrl() {
	      return 'api/2.0/engage/values';
	    }
	  }, {
	    key: 'buildParams',
	    value: function buildParams() {
	      return { property: this.query.property };
	    }
	  }, {
	    key: 'processResults',
	    value: function processResults(results) {
	      return (0, _util.sorted)(results.results, {
	        transform: function transform(value) {
	          return value.toLowerCase();
	        }
	      });
	    }
	  }]);
	
	  return TopPeoplePropertyValuesQuery;
	}(BasePropertyValuesQuery);

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _moment = __webpack_require__(15);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _base = __webpack_require__(256);
	
	var _base2 = _interopRequireDefault(_base);
	
	var _clause = __webpack_require__(14);
	
	var _section = __webpack_require__(253);
	
	var _extrema = __webpack_require__(260);
	
	var _extrema2 = _interopRequireDefault(_extrema);
	
	var _result = __webpack_require__(262);
	
	var _result2 = _interopRequireDefault(_result);
	
	var _segmentationJql = __webpack_require__(263);
	
	var _segmentationJql2 = _interopRequireDefault(_segmentationJql);
	
	var _queryCache = __webpack_require__(264);
	
	var _queryCache2 = _interopRequireDefault(_queryCache);
	
	var _util = __webpack_require__(8);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var JQLQuery = function () {
	  function JQLQuery(showClause, state) {
	    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	    _classCallCheck(this, JQLQuery);
	
	    this.chartType = options.chartType || state.report.displayOptions.chartType;
	    this.customEvents = options.customEvents || [];
	
	    this.type = showClause.math;
	    this.property = showClause.property && (0, _util.pick)(showClause.property, ['name', 'resourceType']) || null;
	    this.resourceType = showClause.value.resourceType || 'events';
	    this.displayNames = {};
	
	    if (this.resourceType === 'events') {
	      // event query
	      var ev = showClause.value;
	      var events = void 0;
	      if (ev.custom) {
	        events = this.customEventToSelectors(ev);
	      } else {
	        switch (ev.name) {
	          case _clause.ShowClause.ALL_EVENTS.name:
	            events = [];
	            break;
	          case _clause.ShowClause.TOP_EVENTS.name:
	            events = state.topEvents.slice(0, 12);
	            break;
	          default:
	            events = [ev];
	            break;
	        }
	        events = events.map(function (ev) {
	          return { event: ev.name };
	        });
	      }
	
	      this.custom = ev.custom;
	      this.events = events;
	
	      // Custom events and 'All Events' are a special case since they can't be used in the JQL
	      // 'event_selectors' directly but we still want to track their display names.
	      if (ev.custom || ev.name === _clause.ShowClause.ALL_EVENTS.name) {
	        this.outputName = ev.name;
	      }
	
	      this.unit = state.report.sections.time.clauses[0].unit;
	      if (['min', 'max', 'unique', 'average', 'median'].includes(this.type) && this.chartType !== 'line') {
	        this.unit = 'all';
	      }
	    } else {
	      // people query
	      this.outputName = showClause.property && showClause.property.name || showClause.value.name;
	      if (!this.property) {
	        this.type = _clause.ShowClause.MATH_TYPE_TOTAL;
	      }
	    }
	  }
	
	  _createClass(JQLQuery, [{
	    key: 'eventNames',
	    value: function eventNames() {
	      return this.outputName ? [this.outputName] : this.events.map(function (ev) {
	        return ev.event;
	      });
	    }
	  }, {
	    key: 'displayName',
	    value: function displayName(name) {
	      var operation = this.type;
	
	      var isEventQuery = this.resourceType === _clause.ShowClause.RESOURCE_TYPE_EVENTS;
	      name = isEventQuery ? (0, _util.renameEvent)(name) : (0, _util.renameProperty)(name);
	      var display = void 0;
	      if (this.property) {
	        var onEvent = isEventQuery ? ' on ' + name : '';
	        display = operation + ' of ' + (0, _util.renameProperty)(this.property.name) + onEvent;
	      } else {
	        display = operation + ' number of ' + name;
	      }
	
	      return (0, _util.capitalize)(display);
	    }
	
	    // convert custom event data struct to format for JQL selectors:
	    // [{event: 'foo', selector: 'bar'}, {event: 'foo', selector: 'bar'}]
	    // including merging nested custom events
	
	  }, {
	    key: 'customEventToSelectors',
	    value: function customEventToSelectors(ce) {
	      var _this = this;
	
	      return ce.alternatives.reduce(function (selectors, ev) {
	
	        var selector = {
	          event: ev.event,
	          selector: ev.serialized
	        };
	        var currentSelectors = [];
	
	        var cidMatch = selector.event.match(/\$custom_event:(\d+)/);
	        if (cidMatch) {
	          (function () {
	            // nested custom event
	            var cid = Number(cidMatch[1]);
	            var nestedCE = _this.customEvents.find(function (c) {
	              return c.id === cid;
	            });
	            if (!nestedCE) {
	              console.error('No custom event with ID ' + cid + ' found!');
	            } else {
	              // merge nested CE's selectors with this one's
	              var nestedSelectors = _this.customEventToSelectors(nestedCE).map(function (nestedSelector) {
	                return (0, _util.extend)(nestedSelector, {
	                  selector: [nestedSelector.selector, selector.selector].filter(Boolean).join(' and ')
	                });
	              });
	              currentSelectors = currentSelectors.concat(nestedSelectors);
	            }
	          })();
	        } else {
	          // unnested
	          currentSelectors.push(selector);
	        }
	
	        return selectors.concat(currentSelectors);
	      }, []);
	    }
	  }]);
	
	  return JQLQuery;
	}();
	
	var SegmentationQuery = function (_BaseQuery) {
	  _inherits(SegmentationQuery, _BaseQuery);
	
	  function SegmentationQuery() {
	    _classCallCheck(this, SegmentationQuery);
	
	    var _this2 = _possibleConstructorReturn(this, (SegmentationQuery.__proto__ || Object.getPrototypeOf(SegmentationQuery)).apply(this, arguments));
	
	    _this2.extremaCache = new _queryCache2.default();
	    return _this2;
	  }
	
	  _createClass(SegmentationQuery, [{
	    key: 'buildQuery',
	    value: function buildQuery(state, options) {
	      var _this3 = this;
	
	      var sections = state.report.sections;
	
	      // fire one query per show clause
	      var jqlQueries = sections.show.clauses.map(function (showClause) {
	        return new JQLQuery(showClause, state, (0, _util.extend)(options, (0, _util.pick)(_this3, ['customEvents'])));
	      });
	
	      // data global to all JQL queries.
	      var segments = sections.group.clauses.map(function (clause) {
	        return (0, _util.pick)(clause, ['value', 'propertyType', 'resourceType', 'typeCast', 'unit']);
	      }).map(function (clause) {
	        return clause.value === _clause.GroupClause.EVENT_DATE.name ? (0, _util.extend)(clause, { isEventDate: true }) : clause;
	      });
	
	      var conjunction = sections.filter.determiner === _section.FilterSection.DETERMINER_ANY ? 'or' : 'and';
	      var filterArbSelectors = sections.filter.clauses.map(function (clause) {
	        return clause.attrs;
	      }).filter(function (filter) {
	        return (0, _util.isFilterValid)(filter);
	      }).map(function (filter) {
	        return (0, _util.filterToArbSelectorString)(filter);
	      }).join(' ' + conjunction + ' ');
	
	      // TODO (jordan): handle resetting dates when building params
	      var time = sections.time.clauses[0];
	      var unit = time.unit;
	
	      var from = void 0,
	          to = void 0;
	      if (Array.isArray(time.value)) {
	        var _time$value$map = time.value.map(function (ts) {
	          return Number(_moment2.default.utc(ts));
	        });
	
	        var _time$value$map2 = _slicedToArray(_time$value$map, 2);
	
	        from = _time$value$map2[0];
	        to = _time$value$map2[1];
	      } else {
	        to = Number(_moment2.default.utc());
	        from = to - _util.MS_BY_UNIT[unit] * time.value;
	      }
	
	      return { jqlQueries: jqlQueries, segments: segments, filterArbSelectors: filterArbSelectors, from: from, to: to };
	    }
	  }, {
	    key: 'buildUrl',
	    value: function buildUrl() {
	      return 'api/2.0/jql';
	    }
	  }, {
	    key: 'buildGroups',
	    value: function buildGroups() {
	      var _this4 = this;
	
	      this.resetBucketRanges();
	      var eventsToQuery = this.allEventsInAllQueries();
	      return Promise.all(this.query.segments.map(function (segment, idx) {
	        return new Promise(function (resolve) {
	          var segmentType = segment.typeCast || segment.propertyType;
	          if (segmentType === 'number') {
	            (function () {
	              var params = {
	                from: new Date(_this4.query.from),
	                to: new Date(_this4.query.to),
	                isPeopleProperty: segment.resourceType === 'people',
	                property: segment.value,
	                selectors: eventsToQuery
	              };
	
	              if (_this4.query.filterArbSelectors) {
	                if (eventsToQuery.length) {
	                  params.selectors = eventsToQuery.map(function (event) {
	                    var selector = event.selector ? '(' + event.selector + ' and ' + _this4.query.filterArbSelectors + ')' : _this4.query.filterArbSelectors;
	                    return (0, _util.extend)(event, { selector: selector });
	                  });
	                } else {
	                  params.selectors = [{ selector: _this4.query.filterArbSelectors }];
	                }
	              }
	
	              var extremaQuery = new _extrema2.default({
	                apiHost: _this4.apiHost,
	                apiSecret: _this4.apiSecret
	              });
	              var builtExtremaQuery = extremaQuery.build(params);
	              var cachedExtremaQuery = _this4.extremaCache.get(builtExtremaQuery.query);
	              builtExtremaQuery.run(cachedExtremaQuery).then(function (result) {
	                _this4.extremaCache.set(builtExtremaQuery.query, result, 120);
	                _this4.storeBucketRange(idx, result.bucketRanges);
	                return resolve((0, _util.extend)(segment, { buckets: result.buckets }));
	              });
	            })();
	          } else {
	            return resolve(segment);
	          }
	        });
	      }));
	    }
	  }, {
	    key: 'buildJQLParams',
	    value: function buildJQLParams(jqlQuery) {
	      var _this5 = this;
	
	      // prepare JQL params for one JQL query.
	      return this.buildGroups(jqlQuery).then(function (groups) {
	        // base params
	        var scriptParams = {
	          // filter clauses are global to all show clauses.
	          outputName: jqlQuery.outputName,
	          groups: groups,
	          type: jqlQuery.type,
	          property: jqlQuery.property
	        };
	
	        if (jqlQuery.events) {
	          scriptParams.dates = {
	            from: new Date(_this5.query.from).toISOString().split('T')[0],
	            to: new Date(_this5.query.to).toISOString().split('T')[0],
	            unit: jqlQuery.unit
	          };
	          if (jqlQuery.events.length) {
	            scriptParams.selectors = jqlQuery.events.map(function (selector) {
	              if (selector.selector) {
	                if (_this5.query.filterArbSelectors) {
	                  selector.selector += ' and ' + _this5.query.filterArbSelectors;
	                }
	              } else {
	                selector.selector = _this5.query.filterArbSelectors;
	              }
	              return selector;
	            });
	          } else if (_this5.query.filterArbSelectors) {
	            // include arbselectors for $all_events
	            scriptParams.selectors = [{ selector: _this5.query.filterArbSelectors }];
	          }
	        } else {
	          if (_this5.query.filterArbSelectors) {
	            scriptParams.selectors = [{ selector: _this5.query.filterArbSelectors }];
	          }
	        }
	
	        if (groups.length) {
	          scriptParams.groupLimits = [-1].concat(groups.map(function () {
	            return 100;
	          }));
	        }
	
	        var hasPeopleFilters = groups.concat([scriptParams.property]).some(function (param) {
	          return param && param.resourceType === 'people';
	        });
	        var hasUserSelectors = scriptParams.selectors && scriptParams.selectors.some(function (es) {
	          return es.selector && es.selector.includes('user[');
	        });
	        var needsPeopleData = hasPeopleFilters || hasUserSelectors || jqlQuery.resourceType === 'people';
	        var resourceTypeNeeded = needsPeopleData ? 'people' : 'events';
	        if (jqlQuery.events && needsPeopleData) {
	          resourceTypeNeeded = 'all';
	        }
	        scriptParams.resourceTypeNeeded = resourceTypeNeeded;
	        return scriptParams;
	      });
	    }
	  }, {
	    key: 'buildParams',
	    value: function buildParams(scriptParams) {
	      return {
	        script: String(_segmentationJql2.default),
	        params: JSON.stringify(scriptParams)
	      };
	    }
	  }, {
	    key: 'preprocessNameConflicts',
	    value: function preprocessNameConflicts() {
	      var jqlQueries = this.query.jqlQueries;
	
	      var _loop = function _loop(i) {
	        var _loop2 = function _loop2(j) {
	          jqlQueries[i].eventNames().forEach(function (name) {
	            var names = jqlQueries[j].eventNames();
	            if (names.includes(name)) {
	              var displayNameI = jqlQueries[i].displayName(name);
	              var displayNameJ = jqlQueries[j].displayName(name);
	
	              if (displayNameI === displayNameJ) {
	                displayNameI += ' #' + (jqlQueries.indexOf(jqlQueries[i]) + 1);
	                displayNameJ += ' #' + (jqlQueries.indexOf(jqlQueries[j]) + 1);
	              }
	
	              jqlQueries[i].displayNames[name] = displayNameI;
	              jqlQueries[j].displayNames[name] = displayNameJ;
	            }
	          });
	        };
	
	        for (var j = i + 1; j < jqlQueries.length; j++) {
	          _loop2(j);
	        }
	      };
	
	      for (var i = 0; i < jqlQueries.length - 1; i++) {
	        _loop(i);
	      }
	    }
	  }, {
	    key: 'buildJQLArgs',
	    value: function buildJQLArgs() {
	      var _this6 = this;
	
	      // prepare args for each JQL Query.
	      this.preprocessNameConflicts();
	      return this.query.jqlQueries.map(function (jqlQuery) {
	        return _this6.buildJQLParams(jqlQuery).then(function (jqlParams) {
	          return [_this6.buildUrl(), _this6.buildParams(jqlParams), _this6.buildOptions()];
	        });
	      });
	    }
	  }, {
	    key: 'runJQLQueries',
	    value: function runJQLQueries() {
	      var _this7 = this;
	
	      return this.buildJQLArgs().map(function (args) {
	        return args.then(function (args) {
	          return _this7.fetch.apply(_this7, _toConsumableArray(args));
	        });
	      });
	    }
	  }, {
	    key: 'executeQuery',
	    value: function executeQuery() {
	      var _this8 = this;
	
	      return Promise.all(this.runJQLQueries()).then(function (resultSets) {
	        return resultSets.reduce(function (acc, results, index) {
	          // resolve name conflicts
	          var outputName = _this8.query.jqlQueries[index].outputName;
	          results.forEach(function (result) {
	            var displayName = _this8.query.jqlQueries[index].displayNames[result.key[0]];
	            if (displayName) {
	              result.key[0] = displayName;
	            }
	            if (outputName) {
	              result.key.unshift(outputName);
	            }
	          });
	          return acc.concat(results);
	        }, []);
	      });
	    }
	  }, {
	    key: 'processResults',
	    value: function processResults(results) {
	      var _this9 = this;
	
	      var querySegments = this.query.segments;
	      var headers = querySegments.map(function (segment) {
	        return segment.value;
	      });
	      var series = {};
	      var peopleTimeSeries = null;
	
	      // create an object of zero values for all possible dates
	      var baseDateResults = {};
	      var isPeopleOnlyQuery = this.query.jqlQueries.every(function (query) {
	        return query.resourceType === 'people';
	      });
	      var needsPeopleTimeSeries = isPeopleOnlyQuery && querySegments.length && querySegments[querySegments.length - 1].propertyType === 'datetime';
	
	      //  epoch dates of properties come back in seconds. 10^3 is needed to bring it to ms for moment.
	      var dateKeyCache = {};
	      var getDateKey = function getDateKey(epoch) {
	        var epochInMS = isPeopleOnlyQuery ? epoch * 1000 : epoch;
	        if (!dateKeyCache[epochInMS]) {
	          dateKeyCache[epochInMS] = _moment2.default.utc(epochInMS).format();
	        }
	        return dateKeyCache[epochInMS];
	      };
	
	      var formattedDateCache = {};
	      var getFormattedDate = function getFormattedDate(epoch) {
	        var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	            _ref$unit = _ref.unit,
	            unit = _ref$unit === undefined ? 'day' : _ref$unit,
	            _ref$convertEpochMult = _ref.convertEpochMultiplier,
	            convertEpochMultiplier = _ref$convertEpochMult === undefined ? 1000 : _ref$convertEpochMult;
	
	        var epochInMS = epoch * convertEpochMultiplier;
	        formattedDateCache[unit] = formattedDateCache[unit] || {};
	        if (!formattedDateCache[unit][epochInMS]) {
	          formattedDateCache[unit][epochInMS] = (0, _util.epochToFormattedDate)(epochInMS, unit);
	        }
	        return formattedDateCache[unit][epochInMS];
	      };
	
	      if (!needsPeopleTimeSeries) {
	        results.forEach(function (r) {
	          return baseDateResults[getDateKey(r.key[r.key.length - 1])] = 0;
	        });
	      }
	
	      if (results) {
	        (function () {
	          var isSegDatetime = function isSegDatetime(idx) {
	            return querySegments[idx].propertyType === 'datetime';
	          };
	          var unitsForDatetimeSet = function unitsForDatetimeSet(idx) {
	            return {
	              unit: querySegments[idx].unit,
	              convertEpochMultiplier: querySegments[idx].isEventDate ? 1 : 1000
	            };
	          };
	
	          var createSeriesReducerFunc = function createSeriesReducerFunc() {
	            var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	                _ref2$isTimeSeries = _ref2.isTimeSeries,
	                isTimeSeries = _ref2$isTimeSeries === undefined ? true : _ref2$isTimeSeries;
	
	            return function (seriesObj, item) {
	              // transform item.key array into nested obj,
	              // with item.value at the deepest level
	              if (!isTimeSeries) {
	                item = (0, _util.extend)(item, { key: item.key.concat('value') });
	              }
	
	              var obj = seriesObj;
	              for (var si = 0; si < item.key.length - 1; si++) {
	                var key = item.key[si];
	
	                // conditional key formatting
	                var segIdx = si - 1;
	                if (si && Number.isInteger(key) && isSegDatetime(segIdx)) {
	                  key = getFormattedDate(key, unitsForDatetimeSet(segIdx));
	                } else if (si && _this9.isBucketedAtSegmentIdx(segIdx)) {
	                  key = _this9.formattedKeyForBucketedSegment(segIdx, key);
	                }
	
	                // If it is the second to last key it must be the object holding the date values.
	                // If it does not yet exist fill this with the zeroed-out base dates.
	                if (si === item.key.length - 2 && !obj[key]) {
	                  obj[key] = isTimeSeries ? (0, _util.extend)(baseDateResults) : {};
	                } else {
	                  obj[key] = obj[key] || {};
	                }
	                obj = obj[key];
	              }
	
	              obj[getDateKey(item.key[item.key.length - 1])] = item.value;
	              return seriesObj;
	            };
	          };
	
	          series = results.reduce(createSeriesReducerFunc({ isTimeSeries: !isPeopleOnlyQuery }), {});
	          peopleTimeSeries = needsPeopleTimeSeries ? results.reduce(createSeriesReducerFunc(), {}) : null;
	        })();
	      }
	
	      headers = [isPeopleOnlyQuery ? '$people' : '$event'].concat(headers);
	
	      return new _result2.default({ series: series, headers: headers, peopleTimeSeries: peopleTimeSeries });
	    }
	  }, {
	    key: 'allEventsInAllQueries',
	    value: function allEventsInAllQueries() {
	      return this.query.jqlQueries.reduce(function (total, query) {
	        return query.events ? total.concat(query.events) : total;
	      }, []);
	    }
	
	    // bucketed segment helpers
	
	  }, {
	    key: 'formattedKeyForBucketedSegment',
	    value: function formattedKeyForBucketedSegment(segmentIdx, key) {
	      if (typeof key === 'number') {
	        var ranges = this._bucketRanges[segmentIdx][key];
	        return (0, _util.abbreviateNumber)(ranges[0]) + ' - ' + (0, _util.abbreviateNumber)(ranges[1]);
	      } else {
	        return key;
	      }
	    }
	  }, {
	    key: 'isBucketedAtSegmentIdx',
	    value: function isBucketedAtSegmentIdx(idx) {
	      return this.hasBucketedSegments && !!this._bucketRanges[idx];
	    }
	  }, {
	    key: 'resetBucketRanges',
	    value: function resetBucketRanges() {
	      this.hasBucketedSegments = false;
	      this._bucketRanges = {};
	    }
	  }, {
	    key: 'storeBucketRange',
	    value: function storeBucketRange(segmentIdx, bucketRanges) {
	      this.hasBucketedSegments = true;
	      this._bucketRanges[segmentIdx] = bucketRanges;
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      // only valid if one or more queries is prepared
	      return !!this.query.jqlQueries.length;
	    }
	  }]);
	
	  return SegmentationQuery;
	}(_base2.default);
	
	exports.default = SegmentationQuery;

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports.extremaResultToBuckets = extremaResultToBuckets;
	
	var _base = __webpack_require__(256);
	
	var _base2 = _interopRequireDefault(_base);
	
	var _clause = __webpack_require__(14);
	
	var _util = __webpack_require__(8);
	
	var _extremaJql = __webpack_require__(261);
	
	var _extremaJql2 = _interopRequireDefault(_extremaJql);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function extremaResultToBuckets(result) {
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$numBuckets = _ref.numBuckets,
	      numBuckets = _ref$numBuckets === undefined ? 10 : _ref$numBuckets;
	
	  var extremaDelta = result.max - result.min;
	  if (extremaDelta < numBuckets || Number.isNaN(extremaDelta)) {
	    return {};
	  }
	
	  var bucketSize = extremaDelta / numBuckets;
	  var buckets = [];
	  var bucketRanges = {};
	  for (var i = 0; i < numBuckets; i++) {
	    var bucketBottom = Math.floor(result.min + bucketSize * i);
	    var bucketTop = i === numBuckets - 1 ? result.max : Math.floor(bucketBottom + bucketSize);
	    buckets.push(bucketBottom);
	    bucketRanges[bucketBottom] = [bucketBottom, bucketTop];
	  }
	  return { buckets: buckets, bucketRanges: bucketRanges };
	}
	
	var ExtremaJQLQuery = function (_BaseQuery) {
	  _inherits(ExtremaJQLQuery, _BaseQuery);
	
	  function ExtremaJQLQuery() {
	    _classCallCheck(this, ExtremaJQLQuery);
	
	    return _possibleConstructorReturn(this, (ExtremaJQLQuery.__proto__ || Object.getPrototypeOf(ExtremaJQLQuery)).apply(this, arguments));
	  }
	
	  _createClass(ExtremaJQLQuery, [{
	    key: 'buildQuery',
	    value: function buildQuery(state) {
	      return state;
	    }
	  }, {
	    key: 'buildOptions',
	    value: function buildOptions() {
	      return { type: 'POST' };
	    }
	  }, {
	    key: 'buildParams',
	    value: function buildParams() {
	      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref2$params = _ref2.params,
	          params = _ref2$params === undefined ? {} : _ref2$params;
	
	      params = (0, _util.extend)(params, (0, _util.pick)(this.query, ['selectors', 'property']));
	      params.from = (0, _util.formatDateISO)(this.query.from);
	      params.to = (0, _util.formatDateISO)(this.query.to);
	      params.propertyPath = 'properties.' + params.property;
	      if (this.query.isPeopleProperty) {
	        params.queryResourceType = _clause.Clause.RESOURCE_TYPE_PEOPLE;
	      } else {
	        var hasPeopleSelectors = params.selectors.some(function (sel) {
	          return sel.selector && sel.selector.includes('user[');
	        });
	        if (hasPeopleSelectors) {
	          // is a query on an event property but we need people data
	          params.queryResourceType = _clause.Clause.RESOURCE_TYPE_ALL;
	          params.propertyPath = 'event.' + params.propertyPath;
	        } else {
	          params.queryResourceType = _clause.Clause.RESOURCE_TYPE_EVENTS;
	        }
	      }
	      return {
	        script: String(_extremaJql2.default),
	        params: JSON.stringify(params)
	      };
	    }
	  }, {
	    key: 'buildUrl',
	    value: function buildUrl() {
	      return 'api/2.0/jql';
	    }
	  }, {
	    key: 'runJQLQueries',
	    value: function runJQLQueries() {
	      var _this2 = this;
	
	      return ['min', 'max'].map(function (task) {
	        return new Promise(function (resolve) {
	          _this2.fetch(_this2.buildUrl(), _this2.buildParams({ params: { task: task } }), _this2.buildOptions()).then(function (results) {
	            return resolve(_defineProperty({}, task, results));
	          });
	        });
	      });
	    }
	  }, {
	    key: 'executeQuery',
	    value: function executeQuery() {
	      return Promise.all(this.runJQLQueries());
	    }
	  }, {
	    key: 'processResults',
	    value: function processResults(results) {
	      var flatResult = results.reduce(function (obj, result) {
	        Object.keys(result).forEach(function (task) {
	          obj[task] = result[task][0];
	        });
	        return obj;
	      }, {});
	
	      return extremaResultToBuckets(flatResult);
	    }
	  }]);
	
	  return ExtremaJQLQuery;
	}(_base2.default);
	
	exports.default = ExtremaJQLQuery;

/***/ },
/* 261 */
/***/ function(module, exports) {

	/* global Events, join, mixpanel, module, params, People*/
	/* eslint camelcase:0, quotes:0 */
	
	function main() {
	  var query;
	
	  var eventQueryParams = {
	    from_date: params.from,
	    to_date:   params.to,
	  };
	
	  switch (params.queryResourceType) {
	    case 'all':
	      query = join(Events(eventQueryParams), People(), {selectors: params.selectors, type: 'left'});
	      break;
	    case 'events':
	      eventQueryParams.event_selectors = params.selectors;
	      query = Events(eventQueryParams);
	      break;
	    case 'people':
	      query = People({user_selectors: params.selectors});
	      break;
	  }
	
	  var reducerMethod = mixpanel.reducer[params.task];
	  var reducer = reducerMethod(mixpanel.to_number(params.propertyPath));
	
	  return query.reduce(reducer);
	}
	
	// ===== JQL CODE ENDS
	// anything below this line will not be sent to the JQL backend
	
	module.exports = main;


/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _util = __webpack_require__(8);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var resultID = 0;
	
	var Result = function () {
	  function Result(attrs) {
	    _classCallCheck(this, Result);
	
	    Object.assign(this, (0, _util.pick)(attrs, ['headers', 'series', 'peopleTimeSeries']));
	    this.id = resultID++;
	  }
	
	  _createClass(Result, [{
	    key: 'dataForLineChart',
	    value: function dataForLineChart() {
	      return this.peopleTimeSeries || this.series;
	    }
	  }, {
	    key: 'isEqual',
	    value: function isEqual(result) {
	      return (0, _util.isEqual)(this.headers, result.headers) && (0, _util.isEqual)(this.series, result.series);
	    }
	  }, {
	    key: 'transformed',
	    value: function transformed(options) {
	      // for 'logarithmic', no transformation on the result is needed, we use 'linear' here and leave
	      // it to 'line' and 'bar' to display correctly.
	      var newSeries = this.series;
	      var newpeopleTimeSeries = this.peopleTimeSeries;
	
	      if (options.analysis !== 'logarithmic') {
	        // compute transformation
	        switch (options.analysis) {
	          case 'cumulative':
	            newSeries = (0, _util.nestedObjectCumulative)(newSeries);
	            newpeopleTimeSeries = newpeopleTimeSeries && (0, _util.nestedObjectCumulative)(newpeopleTimeSeries);
	            break;
	          case 'rolling':
	            newSeries = (0, _util.nestedObjectRolling)(newSeries, options.windowSize);
	            newpeopleTimeSeries = newpeopleTimeSeries && (0, _util.nestedObjectRolling)(newpeopleTimeSeries, options.windowSize);
	            break;
	        }
	      }
	
	      return {
	        headers: this.headers,
	        series: newSeries,
	        peopleTimeSeries: newpeopleTimeSeries
	      };
	    }
	  }]);
	
	  return Result;
	}();
	
	exports.default = Result;

/***/ },
/* 263 */
/***/ function(module, exports) {

	/* global Events, People, join, mixpanel, module, params */
	/* eslint camelcase:0, quotes:0 */
	
	// parameterized JQL segmentation query
	//
	// sample params format:
	// {
	//   dates: {
	//     from: '2016-05-04',
	//     to: '2016-05-05',
	//     unit: 'hour',
	//   },
	//   events: [
	//     {
	//       event: 'Viewed report',
	//     },
	//   ],
	//   groups: [
	//     {
	//       value: '$browser_version',
	//       resourceType: 'number'
	//     },
	//     {
	//       value: 'mp_country_code',
	//       resourceType: 'string'
	//     },
	//     {
	//       value: '$city',
	//       resourceType: 'string'
	//     }
	//   ],
	// }
	
	function main() {
	  var groups = [];
	  var usesPeopleData = params.resourceTypeNeeded === 'all' || params.resourceTypeNeeded === 'people';
	  var usesEventData = params.resourceTypeNeeded === 'all' || params.resourceTypeNeeded === 'events';
	
	  if (!params.outputName && params.selectors && params.selectors.length) {
	    groups.push(usesPeopleData ? 'event.name' : 'name');
	  }
	  var getPropertyPaths = function(propertyName, propertyResourceType) {
	    var paths = [];
	    if (params.resourceTypeNeeded === 'all') {
	      paths.push(propertyResourceType === 'people' ? 'user' : 'event');
	    }
	    return paths.concat('properties', propertyName);
	  };
	
	  var dateBuckets = {
	    all: [],
	    hour: mixpanel.hourly_time_buckets,
	    day: mixpanel.daily_time_buckets,
	    week: mixpanel.weekly_time_buckets,
	    month: mixpanel.monthly_time_buckets,
	    quarter: mixpanel.quarterly_time_buckets,
	    year: mixpanel.annual_time_buckets,
	  };
	
	  if (params.groups) {
	    groups = groups.concat(params.groups.map(function(group) {
	      var jqlGroup = getPropertyPaths(group.value, group.resourceType).join('.');
	      if (group.buckets) {
	        jqlGroup = mixpanel.numeric_bucket(mixpanel.to_number(jqlGroup), group.buckets);
	      } else if (group.unit) {
	        var groupAccessor;
	        var groupDateBucket = dateBuckets[group.unit];
	        if (group.isEventDate) {
	          groupAccessor = usesPeopleData ? 'event.time' : 'time';
	        } else {
	          groupAccessor = mixpanel.to_number(jqlGroup);
	          if (Array.isArray(groupDateBucket)) {
	            groupDateBucket = groupDateBucket.map(time => time / 1000);
	          } else {
	            groupDateBucket = {
	              bucket_size: groupDateBucket.bucket_size / 1000,
	              offset: groupDateBucket.offset ? groupDateBucket.offset / 1000 : 0,
	            };
	          }
	        }
	        jqlGroup = mixpanel.numeric_bucket(groupAccessor, groupDateBucket);
	      } else if (group.typeCast) {
	        switch (group.typeCast) {
	          case 'number':
	            jqlGroup = mixpanel.to_number(jqlGroup);
	            break;
	          case 'string':
	            jqlGroup = mixpanel.to_string(jqlGroup);
	            break;
	          case 'boolean':
	            jqlGroup = mixpanel.to_boolean(jqlGroup);
	            break;
	        }
	      }
	      return jqlGroup;
	    }));
	  }
	
	  if (usesEventData) {
	    groups.push(
	      mixpanel.numeric_bucket(usesPeopleData ? 'event.time' : 'time', dateBuckets[params.dates.unit])
	    );
	  }
	
	  groups = [mixpanel.multiple_keys(groups)];
	
	  var getReducerFunc = function(type, propertyPaths) {
	    var accessor = propertyPaths ? mixpanel.to_number(propertyPaths.join('.')) : 'value';
	    switch (type) {
	      case 'average': return mixpanel.reducer.avg(accessor);
	      case 'max'    : return mixpanel.reducer.max(accessor);
	      case 'median' : return mixpanel.reducer.numeric_percentiles(accessor, 50);
	      case 'min'    : return mixpanel.reducer.min(accessor);
	      case 'total'  : return mixpanel.reducer.sum(accessor);
	    }
	  };
	
	  var query;
	  var queryParams = {
	    from_date: params.dates && params.dates.from,
	    to_date: params.dates && params.dates.to,
	  };
	
	  switch (params.resourceTypeNeeded) {
	    case 'all':
	      query = join(Events(queryParams), People(), {selectors: params.selectors, type: 'left'});
	      break;
	    case 'events':
	      queryParams.event_selectors = params.selectors;
	      query = Events(queryParams);
	      break;
	    case 'people':
	      query = People({user_selectors: params.selectors});
	      break;
	  }
	
	  var propertyPaths = ['value'];
	  var countReducer = usesEventData ? mixpanel.reducer.count({account_for_sampling: true}) :  mixpanel.reducer.count();
	  if (params.property) {
	    var groupByKeys = groups;
	    propertyPaths = getPropertyPaths(params.property.name, params.property.resourceType);
	    if (params.property.resourceType === 'people') {
	      propertyPaths = ['value'].concat(propertyPaths);
	      groupByKeys = [mixpanel.slice('key', 1)];
	      query = query.groupByUser(groups, mixpanel.reducer.any());
	    }
	    query = query.groupBy(groupByKeys, getReducerFunc(params.type, propertyPaths));
	  } else if (params.type === 'total') {
	    query = query.groupBy(groups, countReducer);
	  } else if (params.type === 'unique') {
	    query = query.groupByUser(groups, mixpanel.reducer.noop())
	      .groupBy([mixpanel.slice('key', 1)], mixpanel.reducer.count());
	  } else {
	    query = query.groupByUser(groups, countReducer)
	      .groupBy([mixpanel.slice('key', 1)], getReducerFunc(params.type));
	  }
	  return params.groupLimits ? query.internalLimitHierarchically(params.groupLimits) : query;
	}
	
	// ===== JQL CODE ENDS
	// anything below this line will not be sent to the JQL backend
	
	module.exports = main;


/***/ },
/* 264 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var QueryCache = function () {
	  function QueryCache() {
	    _classCallCheck(this, QueryCache);
	
	    this.results = {};
	    this.expiries = {};
	  }
	
	  _createClass(QueryCache, [{
	    key: "get",
	    value: function get(query) {
	      var key = this.hash(query);
	      var expires = this.expiries[key];
	
	      if (expires && Date.now() >= expires) {
	        return null;
	      }
	
	      return this.results[key];
	    }
	  }, {
	    key: "set",
	    value: function set(query, results, expireSeconds) {
	      var key = this.hash(query);
	
	      this.results[key] = results;
	      this.expiries[key] = expireSeconds ? Date.now() + expireSeconds * 1000 : null;
	    }
	  }, {
	    key: "hash",
	    value: function hash(query) {
	      var params = Object.keys(query).sort();
	      return params.map(function (param) {
	        var value = query[param];
	        if (query[param] instanceof Date) {
	          value = query[param].toISOString().split(":").slice(0, -1).join(":");
	        }
	        return param + ":" + JSON.stringify(value);
	      }).join(",");
	    }
	  }]);
	
	  return QueryCache;
	}();
	
	exports.default = QueryCache;

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _moment = __webpack_require__(15);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _builderSections = __webpack_require__(252);
	
	var _builderSections2 = _interopRequireDefault(_builderSections);
	
	var _legend = __webpack_require__(254);
	
	var _legend2 = _interopRequireDefault(_legend);
	
	var _util = __webpack_require__(8);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var BOOKMARK_ATTRS = ['id', 'modified', 'user', 'user_id'];
	
	// saveable / loadable report metadata
	
	var Report = function () {
	  function Report(attrs) {
	    _classCallCheck(this, Report);
	
	    Object.assign(this, (0, _util.pick)(attrs, [].concat(BOOKMARK_ATTRS, ['title',
	
	    // visualization params
	    'displayOptions', 'sections', 'legend', 'sorting'])));
	    this.userID = this.user_id;
	
	    if (attrs.modified) {
	      this.modified = _moment2.default.utc(attrs.modified).local();
	      this.modifiedStr = this.modified.format('MMM Do, YYYY');
	    }
	  }
	
	  _createClass(Report, [{
	    key: 'serialize',
	    value: function serialize() {
	      var serialized = (0, _util.extend)({
	        sections: this.sections.serialize()
	      }, (0, _util.pick)(this, ['displayOptions', 'legend', 'sorting', 'title']));
	      if (this.id) {
	        serialized.id = this.id;
	      }
	      return serialized;
	    }
	  }, {
	    key: 'timeUnit',
	    value: function timeUnit() {
	      var unit = null;
	      try {
	        unit = this.sections.time.clauses[0].unit;
	        var _iteratorNormalCompletion = true;
	        var _didIteratorError = false;
	        var _iteratorError = undefined;
	
	        try {
	          for (var _iterator = this.section.group.clauses[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	            var groupClause = _step.value;
	
	            if (groupClause.resourceType === 'people' && groupClause.unit) {
	              unit = groupClause.unit;
	            }
	          }
	        } catch (err) {
	          _didIteratorError = true;
	          _iteratorError = err;
	        } finally {
	          try {
	            if (!_iteratorNormalCompletion && _iterator.return) {
	              _iterator.return();
	            }
	          } finally {
	            if (_didIteratorError) {
	              throw _iteratorError;
	            }
	          }
	        }
	      } catch (e) {
	        // ignore
	      }
	      return unit || 'day';
	    }
	
	    // MP bookmarks
	
	  }, {
	    key: 'toBookmarkData',
	    value: function toBookmarkData() {
	      var bm = (0, _util.extend)({ name: this.title, icon: this.displayOptions.chartType }, this.serialize());
	      if (this.id) {
	        bm.id = this.id;
	      }
	      return bm;
	    }
	
	    // live state URL
	
	  }, {
	    key: 'toUrlData',
	    value: function toUrlData() {
	      return {
	        displayOptions: this.displayOptions,
	        sections: this.sections.toUrlData(),
	        title: this.title
	      };
	    }
	  }, {
	    key: '_listOfSectionValues',
	    value: function _listOfSectionValues(section) {
	      var reportSection = this.sections[section];
	      return reportSection && reportSection.clauses.map(function (clause) {
	        return clause.TYPE === 'show' ? clause.value.name : clause.value;
	      });
	    }
	  }, {
	    key: 'toTrackingData',
	    value: function toTrackingData() {
	      var compareClauses = this._listOfSectionValues('show');
	      var groupClauses = this._listOfSectionValues('group');
	      var filterClauses = this._listOfSectionValues('filter');
	      var timeClause = this.sections['time'].clauses[0];
	
	      var trackingData = {
	        'report info: title': this.title,
	        'report info: type': this.displayOptions.chartType,
	        'report info: style': this.displayOptions.plotStyle,
	        'report info: analysis': this.displayOptions.analysis,
	        'report info: value': this.displayOptions.value,
	        'report info: list of Compare clauses': compareClauses,
	        'report info: list of Group By clauses': groupClauses,
	        'report info: list of Filter clauses': filterClauses,
	        'report info: # of Compare clauses': compareClauses.length,
	        'report info: # of Group By clauses': groupClauses.length,
	        'report info: # of Filter clauses': filterClauses.length,
	        'report info: time unit': timeClause.unit,
	        'report info: time value': timeClause.value
	      };
	      if (this.id) {
	        trackingData['report id'] = this.id;
	      }
	      return trackingData;
	    }
	  }, {
	    key: 'valid',
	    get: function get() {
	      var _this = this;
	
	      return this.sections instanceof _builderSections2.default && this.sections.valid && this.displayOptions && ['chartType', 'plotStyle', 'analysis', 'value'].every(function (v) {
	        return _this.displayOptions.hasOwnProperty(v);
	      });
	    }
	  }], [{
	    key: 'deserialize',
	    value: function deserialize(data) {
	      return new Report((0, _util.extend)(data, {
	        sections: _builderSections2.default.deserialize(data.sections),
	        legend: new _legend2.default(data.legend)
	      }));
	    }
	  }, {
	    key: 'fromBookmarkData',
	    value: function fromBookmarkData(bookmark) {
	      return Report.deserialize((0, _util.extend)((0, _util.pick)(bookmark, BOOKMARK_ATTRS), JSON.parse(bookmark.params)));
	    }
	  }]);
	
	  return Report;
	}();
	
	exports.default = Report;

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _csv = __webpack_require__(267);
	
	__webpack_require__(268);
	
	var _index = __webpack_require__(274);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(275);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('irb-header', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'resetSaveFeedback',
	    value: function resetSaveFeedback() {
	      this.update({ saved: false, saveFailed: false });
	    }
	  }, {
	    key: 'downloadData',
	    value: function downloadData(filename, dataStr) {
	      // prepare blob
	      var blob = new Blob([dataStr], { type: 'octet/stream' });
	      var blobURL = URL.createObjectURL(blob);
	
	      // launch named download via hidden link
	      var link = document.createElement('a');
	      link.style.display = 'none';
	      link.href = blobURL;
	      link.download = filename + '.csv';
	      document.body.appendChild(link);
	      link.click();
	
	      // clean up
	      URL.revokeObjectURL(blobURL);
	      link.remove();
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        helpers: {
	          refresh: function refresh() {
	            if (_this2.state.projectHasEvents) {
	              var reportTrackingData = _this2.state.report.toTrackingData();
	              _this2.app.query({ useCache: false });
	              _this2.app.trackEvent('Refresh Report', reportTrackingData);
	            }
	          },
	
	          titleInputEnabled: function titleInputEnabled() {
	            return _this2.app.hasWritePermissions && _this2.state.projectHasEvents;
	          },
	
	          updateTitle: function updateTitle(ev) {
	            if (ev.detail) {
	              _this2.app.updateReport({ title: ev.detail.value });
	              if (ev.detail.save) {
	                _this2.resetSaveFeedback();
	                clearTimeout(_this2.saveFeedbackTimeout);
	                _this2.app.saveReport().then(function () {
	                  return _this2.update({ saved: true });
	                }).catch(function () {
	                  return _this2.update({ saveFailed: true });
	                })
	                // TODO extract and share this duration, also used in add-to-dash
	                .then(function () {
	                  return _this2.saveFeedbackTimeout = setTimeout(function () {
	                    return _this2.resetSaveFeedback();
	                  }, 3300);
	                });
	              }
	            }
	          },
	
	          clickExportCSV: function clickExportCSV() {
	            if (_this2.app.getFeatureGateValue('can_export_csv')) {
	              if (!_this2.state.resultLoading && _this2.state.projectHasEvents) {
	                var report = _this2.state.report;
	                _this2.downloadData(report.title, (0, _csv.dataToCSV)(_this2.state.result, {
	                  timeUnit: report.timeUnit()
	                }));
	              }
	            } else {
	              _this2.app.openUpsellModal('exportCSV');
	            }
	          },
	          clickReportList: function clickReportList() {
	            return _this2.app.openReportList();
	          },
	          showSaveReportUpsell: function showSaveReportUpsell() {
	            return _this2.state.upsellModal === 'saveReport';
	          },
	          showExportCSVUpsell: function showExportCSVUpsell() {
	            return _this2.state.upsellModal === 'exportCSV';
	          },
	          closeUpsell: function closeUpsell(ev) {
	            return _this2.app.maybeCloseUpsellModal(ev, 'saveReport');
	          }
	        },
	        template: _index2.default
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.resultToCSVArray = resultToCSVArray;
	exports.dataToCSV = dataToCSV;
	
	var _moment = __webpack_require__(15);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _util = __webpack_require__(9);
	
	var _util2 = __webpack_require__(2);
	
	var _time = __webpack_require__(118);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var CSV_TIME_FORMAT = {
	  hour: 'YYYY-MM-DD HH:mm:ss',
	  day: 'YYYY-MM-DD',
	  week: 'YYYY-MM-DD',
	  month: 'YYYY-MM',
	  quarter: 'YYYY [Q]Q',
	  year: 'YYYY'
	};
	function formatCSVDate(dateStr, timeUnit) {
	  return (0, _moment2.default)((0, _time.parseDate)(dateStr)).format(CSV_TIME_FORMAT[timeUnit]);
	}
	
	var SPECIAL_NAMES = {
	  /* eslint-disable camelcase */
	  $all_people: 'All People',
	  $country_code: 'Country',
	  $event: 'Event',
	  $people: 'People'
	};
	function renameKey(key) {
	  return SPECIAL_NAMES[key] || (0, _util.renamePropertyValue)((0, _util.renameProperty)(key));
	}
	
	function rowsForLeafKey(leafKey, data, keysAtDepth, depth, row) {
	  var keys = keysAtDepth[depth];
	  var allRows = void 0;
	  if (depth > 1) {
	    allRows = keys.reduce(function (rows, key) {
	      return rows.concat(rowsForLeafKey(leafKey, data[key] || {}, keysAtDepth, depth - 1, row.concat(renameKey(key))));
	    }, []);
	  } else {
	    allRows = [row.concat(keys.map(function (key) {
	      var dataForKey = data[key] || {};
	      return dataForKey[leafKey] || 0;
	    }))];
	  }
	  return allRows;
	}
	
	function resultToCSVArray(data) {
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$timeUnit = _ref.timeUnit,
	      timeUnit = _ref$timeUnit === undefined ? 'day' : _ref$timeUnit;
	
	  var headers = void 0,
	      series = void 0;
	  if (data.peopleTimeSeries) {
	    headers = data.headers.slice(1);
	    series = data.peopleTimeSeries;
	  } else {
	    headers = data.headers.slice(0, data.headers.length - 1);
	    series = data.series;
	  }
	
	  var depth = (0, _util2.nestedObjectDepth)(series);
	  var keysAtDepth = Array(depth).fill().map(function (__, level) {
	    return (0, _util2.nestedObjectKeys)(series, level + 1).sort();
	  });
	  var dateKeys = keysAtDepth[0];
	  var leafKeys = keysAtDepth[1];
	
	  // headers
	  var dataHeaders = headers.map(renameKey);
	  var leafHeaders = data.peopleTimeSeries ? [] : leafKeys.map(renameKey);
	  var csvHeaders = ['Date'].concat(_toConsumableArray(dataHeaders), _toConsumableArray(leafHeaders));
	
	  // rows
	  var csvRows = dateKeys.reduce(function (rows, dateStr) {
	    return rows.concat(rowsForLeafKey(dateStr, series, keysAtDepth, depth - 1, [formatCSVDate(dateStr, timeUnit)]));
	  }, []);
	
	  // combined output
	  var csvArray = [csvHeaders].concat(_toConsumableArray(csvRows));
	  if (csvRows.every(function (row) {
	    return row[0] === 'Invalid date';
	  })) {
	    // cut off date column
	    csvArray = csvArray.map(function (row) {
	      return row.slice(1);
	    });
	  }
	
	  return csvArray;
	}
	
	function dataToCSV(data, options) {
	  return resultToCSVArray(data, options).map(function (row) {
	    return row.join(',');
	  }).join('\n');
	}

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _mpButtonInput = __webpack_require__(269);
	
	var _mpButtonInput2 = _interopRequireDefault(_mpButtonInput);
	
	__webpack_require__(270);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var MIN_INPUT_WIDTH = '170';
	
	document.registerElement('mp-button-input', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      var _this2 = this;
	
	      _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'attachedCallback', this).apply(this, arguments);
	      this.closeOnEscape = function (e) {
	        return e.keyCode === 27 && _this2.inputEl.blur();
	      };
	      document.body.addEventListener('keydown', this.closeOnEscape);
	      this._resizeInput();
	    }
	  }, {
	    key: 'detachedCallback',
	    value: function detachedCallback() {
	      document.body.removeEventListener('keydown', this.closeOnEscape);
	    }
	  }, {
	    key: '_resizeInput',
	    value: function _resizeInput() {
	      // make the search input width dynamic
	      var span = document.createElement('span');
	      span.className = 'mp-name-input-dummy';
	      span.innerText = this.state.inputValue;
	      this.el.appendChild(span);
	      var buffer = 12;
	      this.update({ inputWidth: Math.max(span.offsetWidth + buffer, MIN_INPUT_WIDTH) });
	      this.el.removeChild(span);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback() {
	      this.update({ enabled: !this.isAttributeEnabled('disabled') });
	    }
	  }, {
	    key: 'dispatchChange',
	    value: function dispatchChange() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      this.dispatchEvent(new CustomEvent('change', {
	        detail: Object.assign({ value: this.value }, options)
	      }));
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this3 = this;
	
	      return {
	        defaultState: {
	          enabled: true,
	          active: false,
	          inputValue: '',
	          inputWidth: MIN_INPUT_WIDTH
	        },
	        helpers: {
	          blur: function blur() {
	            _this3.update({ active: false });
	            _this3.dispatchChange();
	          },
	          focus: function focus() {
	            return _this3.update({ active: true });
	          },
	          inputChange: function inputChange() {
	            _this3.update({ inputValue: _this3.value });
	            _this3._resizeInput();
	          },
	
	          buttonMousedown: function buttonMousedown(ev) {
	            if (_this3.state.active) {
	              // don't let input blur until we save!
	              ev.preventDefault();
	            }
	          },
	
	          clickSave: function clickSave(ev) {
	            ev.stopPropagation();
	            if (_this3.state.active) {
	              _this3.dispatchChange({ save: true });
	              _this3.inputEl.blur();
	            } else {
	              _this3.inputEl.focus();
	            }
	          }
	        },
	        template: _mpButtonInput2.default
	      };
	    }
	  }, {
	    key: 'inputEl',
	    get: function get() {
	      return this.querySelector('input');
	    }
	  }, {
	    key: 'value',
	    get: function get() {
	      var inputEl = this.inputEl;
	      return inputEl ? inputEl.value : '';
	    },
	    set: function set(val) {
	      this.update({ inputValue: val });
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, active, enabled, inputValue, inputWidth) {
	    var h = __webpack_require__(232).h;
	    return {
	      value: h("div", {
	        "class": {
	          'mp-button-input': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(enabled ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("input", {
	            "props": {
	              maxLength: 80,
	              placeholder: "Untitled report",
	              type: "text",
	              value: inputValue
	            },
	            "style": {
	              width: inputWidth + "px"
	            },
	            "on": {
	              input: $helpers.inputChange,
	              blur: $helpers.blur,
	              focus: $helpers.focus
	            },
	            "class": {
	              active: active
	            }
	          }));
	          __jade_nodes = __jade_nodes.concat(h("button", {
	            "on": {
	              click: $helpers.clickSave,
	              mousedown: $helpers.buttonMousedown
	            },
	            "class": Object.assign({}, {
	              active: active
	            }, {
	              'input-button': true
	            })
	          }, [$component.getAttribute("buttonText") || '']));;
	          return __jade_nodes;
	        }.call(this) : function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "style": {
	              width: inputWidth + "px"
	            },
	            "class": {
	              'disabled-input': true
	            }
	          }, [inputValue || '']));;
	          return __jade_nodes;
	        }.call(this));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "active" in locals ? locals.active : typeof active !== "undefined" ? active : undefined, "enabled" in locals ? locals.enabled : typeof enabled !== "undefined" ? enabled : undefined, "inputValue" in locals ? locals.inputValue : typeof inputValue !== "undefined" ? inputValue : undefined, "inputWidth" in locals ? locals.inputWidth : typeof inputWidth !== "undefined" ? inputWidth : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 270 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 271 */,
/* 272 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
		var sourceMap = obj.sourceMap;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var media = obj.media;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Object, report, resultLoading, saveFailed, saved) {
	    var h = __webpack_require__(232).h;
	    return {
	      value: h("div", {
	        "class": {
	          'irb-header': true,
	          'irb-learn-disabled': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("mp-button-input", {
	          "attrs": {
	            buttonText: "Save",
	            disabled: !$helpers.titleInputEnabled()
	          },
	          "props": {
	            value: report.title
	          },
	          "on": {
	            change: $helpers.updateTitle
	          }
	        }));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-dock': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("button", {
	            "attrs": {
	              title: "Refresh results"
	            },
	            "on": {
	              click: $helpers.refresh
	            },
	            "class": {
	              'refresh-query': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: "refresh"
	              }
	            }));
	            __jade_nodes = __jade_nodes.concat(h("mp-tooltip", {
	              "attrs": {
	                placement: "bottom"
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Refresh");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("button", {
	            "attrs": {
	              title: "Download CSV"
	            },
	            "on": {
	              click: $helpers.clickExportCSV
	            },
	            "class": Object.assign({}, {
	              enabled: !resultLoading
	            }, {
	              'download': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: "export"
	              }
	            }));
	            __jade_nodes = __jade_nodes.concat(h("mp-tooltip", {
	              "attrs": {
	                placement: "bottom"
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Download CSV");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'upsell-wrapper': true,
	              'csv-export': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-upsell-popup", {
	              "attrs": {
	                feature: "export-csv",
	                open: $helpers.showExportCSVUpsell()
	              },
	              "on": {
	                change: $helpers.closeUpsell
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("button", {
	            "attrs": {
	              title: "Saved reports"
	            },
	            "on": {
	              click: $helpers.clickReportList
	            },
	            "class": Object.assign({}, {
	              saved: saved, 'save-failed': saveFailed
	            }, {
	              'report-list-button': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: "saved-reports"
	              }
	            }));
	            __jade_nodes = __jade_nodes.concat(h("mp-tooltip", {
	              "attrs": {
	                placement: "bottom"
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Saved reports");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'upsell-wrapper': true,
	              'save-report': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-upsell-popup", {
	              "attrs": {
	                feature: "bookmark-maximum",
	                open: $helpers.showSaveReportUpsell()
	              },
	              "on": {
	                change: $helpers.closeUpsell
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined, "resultLoading" in locals ? locals.resultLoading : typeof resultLoading !== "undefined" ? resultLoading : undefined, "saveFailed" in locals ? locals.saveFailed : typeof saveFailed !== "undefined" ? saveFailed : undefined, "saved" in locals ? locals.saved : typeof saved !== "undefined" ? saved : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 275 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 276 */,
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _clause = __webpack_require__(14);
	
	var _index = __webpack_require__(278);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(279);
	
	__webpack_require__(281);
	
	__webpack_require__(287);
	
	__webpack_require__(309);
	
	__webpack_require__(321);
	
	__webpack_require__(329);
	
	__webpack_require__(344);
	
	__webpack_require__(373);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('irb-builder', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        helpers: {
	          clickSetupMixpanel: function clickSetupMixpanel() {
	            return _this2.app.navigateToSetup();
	          },
	          reset: function reset() {
	            var reportTrackingData = _this2.state.report.toTrackingData();
	            _this2.app.navigate('', _this2.app.resetQuery());
	            _this2.app.trackEvent('Reset Report', reportTrackingData);
	          },
	          shouldShowTimeBuilder: function shouldShowTimeBuilder() {
	            return _this2.state.report.sections.show.clauseResourceTypes() !== _clause.ShowClause.RESOURCE_TYPE_PEOPLE;
	          }
	        }
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, projectHasEvents) {
	    var h = __webpack_require__(232).h;
	    return {
	      value: h("div", {
	        "class": {
	          'irb-builder': true,
	          'irb-learn-manipulate-data-disabled': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(projectHasEvents ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'query': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'section-container': true
	              }
	            }, [$component.child('query-builder-show') || '']));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'section-container': true
	              }
	            }, [$component.child('query-builder-group') || '']));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'section-container': true
	              }
	            }, [$component.child('query-builder-contextual-add') || '']));
	            __jade_nodes = __jade_nodes.concat($helpers.shouldShowTimeBuilder() ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'section-container': true
	                }
	              }, [$component.child('query-builder-time') || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'filters': true
	            }
	          }, [$component.child('query-builder-filter') || '']));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "on": {
	              click: $helpers.reset
	            },
	            "class": {
	              'reset-query': true,
	              'irb-learn-disabled': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'x'
	              }
	            }));
	            __jade_nodes = __jade_nodes.concat(h("mp-tooltip", {
	              "attrs": {
	                placement: "left"
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Reset");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'builder-error-caption': true,
	              'error-title': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("We haven't recieved any events from you yet");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'builder-error-caption': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("You'll need to install Mixpanel's library on your site and start tracking your user's actions.");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'error-builder-button': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-button", {
	              "on": {
	                click: $helpers.clickSetupMixpanel
	              },
	              "class": {
	                'mp-button-primary': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Install Mixpanel");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "projectHasEvents" in locals ? locals.projectHasEvents : typeof projectHasEvents !== "undefined" ? projectHasEvents : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 279 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 280 */,
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _throttle = __webpack_require__(282);
	
	var _throttle2 = _interopRequireDefault(_throttle);
	
	var _clause = __webpack_require__(14);
	
	var _builderContextualAddControl = __webpack_require__(286);
	
	var _builderContextualAddControl2 = _interopRequireDefault(_builderContextualAddControl);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('query-builder-contextual-add', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'attachedCallback', this).apply(this, arguments);
	      this.app.onClickOutside(this.tagName, 'stopBuildingQuery');
	    }
	  }, {
	    key: 'isPaneOpen',
	    value: function isPaneOpen() {
	      return this.state.builderPane.screens.length && this.state.builderPane.isContextualMenuOpen && this.state.stageClauseIndex === null;
	    }
	  }, {
	    key: 'openPane',
	    value: function openPane() {
	      this.app.startBuilderOnScreen('builder-screen-contextual');
	      this.app.updateBuilder({ isContextualMenuOpen: true });
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderContextualAddControl2.default,
	        helpers: {
	          clickedAdd: function clickedAdd() {
	            if (!_this2.app.canAddBuilderClause()) {
	              _this2.app.openUpsellModal('builderClause');
	              _this2.app.stopBuildingQuery();
	              return;
	            }
	            if (!_this2.isPaneOpen()) {
	              _this2.openPane();
	            } else {
	              _this2.app.stopBuildingQuery();
	            }
	          },
	          clickedInput: function clickedInput(ev) {
	            return ev.stopPropagation();
	          }, // don't close menu!
	          menuChange: function menuChange(ev) {
	            return ev.detail && ev.detail.state === 'closed' && _this2.isPaneOpen() && _this2.app.stopBuildingQuery();
	          },
	          shouldShowUpsellIcon: function shouldShowUpsellIcon() {
	            return !_this2.app.canAddBuilderClause();
	          },
	          getPreposition: function getPreposition() {
	            var _ShowClause$TYPE$Grou;
	
	            return (_ShowClause$TYPE$Grou = {}, _defineProperty(_ShowClause$TYPE$Grou, _clause.ShowClause.TYPE, 'and'), _defineProperty(_ShowClause$TYPE$Grou, _clause.GroupClause.TYPE, 'by'), _ShowClause$TYPE$Grou)[_this2.app.originStageClauseType()] || '';
	          },
	          insertedInput: function insertedInput(vnode) {
	            return vnode.elm.focus();
	          },
	          isPaneOpen: function isPaneOpen() {
	            return _this2.isPaneOpen();
	          },
	          changedSearch: (0, _throttle2.default)(function (ev) {
	            _this2.update({ contextFilter: ev.target.value });
	            _this2.app.updateBuilderCurrentScreen({ progressiveListSize: null });
	          }, 200, { leading: true, maxWait: 200 }),
	          shouldShowUpsellModal: function shouldShowUpsellModal() {
	            return _this2.state.upsellModal === 'builderClause';
	          },
	          closeUpsellModal: function closeUpsellModal(ev) {
	            return _this2.app.maybeCloseUpsellModal(ev, 'builderClause');
	          }
	        }
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var debounce = __webpack_require__(283),
	    isObject = __webpack_require__(140);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a throttled function that only invokes `func` at most once per
	 * every `wait` milliseconds. The throttled function comes with a `cancel`
	 * method to cancel delayed `func` invocations and a `flush` method to
	 * immediately invoke them. Provide `options` to indicate whether `func`
	 * should be invoked on the leading and/or trailing edge of the `wait`
	 * timeout. The `func` is invoked with the last arguments provided to the
	 * throttled function. Subsequent calls to the throttled function return the
	 * result of the last `func` invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the throttled function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.throttle` and `_.debounce`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to throttle.
	 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=true]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new throttled function.
	 * @example
	 *
	 * // Avoid excessively updating the position while scrolling.
	 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	 *
	 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	 * jQuery(element).on('click', throttled);
	 *
	 * // Cancel the trailing throttled invocation.
	 * jQuery(window).on('popstate', throttled.cancel);
	 */
	function throttle(func, wait, options) {
	  var leading = true,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  if (isObject(options)) {
	    leading = 'leading' in options ? !!options.leading : leading;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	  return debounce(func, wait, {
	    'leading': leading,
	    'maxWait': wait,
	    'trailing': trailing
	  });
	}
	
	module.exports = throttle;


/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(140),
	    now = __webpack_require__(284),
	    toNumber = __webpack_require__(285);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeMin = Math.min;
	
	/**
	 * Creates a debounced function that delays invoking `func` until after `wait`
	 * milliseconds have elapsed since the last time the debounced function was
	 * invoked. The debounced function comes with a `cancel` method to cancel
	 * delayed `func` invocations and a `flush` method to immediately invoke them.
	 * Provide `options` to indicate whether `func` should be invoked on the
	 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	 * with the last arguments provided to the debounced function. Subsequent
	 * calls to the debounced function return the result of the last `func`
	 * invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the debounced function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.debounce` and `_.throttle`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to debounce.
	 * @param {number} [wait=0] The number of milliseconds to delay.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=false]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {number} [options.maxWait]
	 *  The maximum time `func` is allowed to be delayed before it's invoked.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new debounced function.
	 * @example
	 *
	 * // Avoid costly calculations while the window size is in flux.
	 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	 *
	 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	 * jQuery(element).on('click', _.debounce(sendMail, 300, {
	 *   'leading': true,
	 *   'trailing': false
	 * }));
	 *
	 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	 * var source = new EventSource('/stream');
	 * jQuery(source).on('message', debounced);
	 *
	 * // Cancel the trailing debounced invocation.
	 * jQuery(window).on('popstate', debounced.cancel);
	 */
	function debounce(func, wait, options) {
	  var lastArgs,
	      lastThis,
	      maxWait,
	      result,
	      timerId,
	      lastCallTime,
	      lastInvokeTime = 0,
	      leading = false,
	      maxing = false,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = toNumber(wait) || 0;
	  if (isObject(options)) {
	    leading = !!options.leading;
	    maxing = 'maxWait' in options;
	    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	
	  function invokeFunc(time) {
	    var args = lastArgs,
	        thisArg = lastThis;
	
	    lastArgs = lastThis = undefined;
	    lastInvokeTime = time;
	    result = func.apply(thisArg, args);
	    return result;
	  }
	
	  function leadingEdge(time) {
	    // Reset any `maxWait` timer.
	    lastInvokeTime = time;
	    // Start the timer for the trailing edge.
	    timerId = setTimeout(timerExpired, wait);
	    // Invoke the leading edge.
	    return leading ? invokeFunc(time) : result;
	  }
	
	  function remainingWait(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime,
	        result = wait - timeSinceLastCall;
	
	    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	  }
	
	  function shouldInvoke(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime;
	
	    // Either this is the first call, activity has stopped and we're at the
	    // trailing edge, the system time has gone backwards and we're treating
	    // it as the trailing edge, or we've hit the `maxWait` limit.
	    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	  }
	
	  function timerExpired() {
	    var time = now();
	    if (shouldInvoke(time)) {
	      return trailingEdge(time);
	    }
	    // Restart the timer.
	    timerId = setTimeout(timerExpired, remainingWait(time));
	  }
	
	  function trailingEdge(time) {
	    timerId = undefined;
	
	    // Only invoke if we have `lastArgs` which means `func` has been
	    // debounced at least once.
	    if (trailing && lastArgs) {
	      return invokeFunc(time);
	    }
	    lastArgs = lastThis = undefined;
	    return result;
	  }
	
	  function cancel() {
	    if (timerId !== undefined) {
	      clearTimeout(timerId);
	    }
	    lastInvokeTime = 0;
	    lastArgs = lastCallTime = lastThis = timerId = undefined;
	  }
	
	  function flush() {
	    return timerId === undefined ? result : trailingEdge(now());
	  }
	
	  function debounced() {
	    var time = now(),
	        isInvoking = shouldInvoke(time);
	
	    lastArgs = arguments;
	    lastThis = this;
	    lastCallTime = time;
	
	    if (isInvoking) {
	      if (timerId === undefined) {
	        return leadingEdge(lastCallTime);
	      }
	      if (maxing) {
	        // Handle invocations in a tight loop.
	        timerId = setTimeout(timerExpired, wait);
	        return invokeFunc(lastCallTime);
	      }
	    }
	    if (timerId === undefined) {
	      timerId = setTimeout(timerExpired, wait);
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  debounced.flush = flush;
	  return debounced;
	}
	
	module.exports = debounce;


/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(144);
	
	/**
	 * Gets the timestamp of the number of milliseconds that have elapsed since
	 * the Unix epoch (1 January 1970 00:00:00 UTC).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Date
	 * @returns {number} Returns the timestamp.
	 * @example
	 *
	 * _.defer(function(stamp) {
	 *   console.log(_.now() - stamp);
	 * }, _.now());
	 * // => Logs the number of milliseconds it took for the deferred invocation.
	 */
	var now = function() {
	  return root.Date.now();
	};
	
	module.exports = now;


/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(140),
	    isSymbol = __webpack_require__(226);
	
	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	
	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}
	
	module.exports = toNumber;


/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, contextFilter, learnActive, learnModalStepIndex, learnReminding, learnTransitioningIn, learnTransitioningOut, report, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['irb-learn-tooltip'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      var stepNames = [];
	      for (var jade_interp = 0; jade_interp < arguments.length; jade_interp++) {
	        stepNames.push(arguments[jade_interp]);
	      }
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(learnActive ? function () {
	          var __jade_nodes = [];
	          var step = util.getLearnStep(report, learnModalStepIndex);
	          var stepName = stepNames.includes(step.name) ? step.name : stepNames[stepNames.length - 1].name;
	          __jade_nodes = __jade_nodes.concat(h("mp-tutorial-tooltip", {
	            "attrs": {
	              hide: learnTransitioningOut || !stepNames.includes(step.name),
	              'placement': "right",
	              'num-steps': 4,
	              'curr-step': step.index - 1,
	              'closeable': true
	            },
	            "on": {
	              close: function close() {
	                return $component.app.helpers.finishLearn();
	              }
	            },
	            "class": {
	              'irb-learn-reminding': learnReminding
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'mp-tooltip-title': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(stepName == "choose-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Start by choosing an event to show");;
	                return __jade_nodes;
	              }.call(this) : stepName == "compare-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Now compare that to a different event");;
	                return __jade_nodes;
	              }.call(this) : stepName == "group-by" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Next, group your events by a property");;
	                return __jade_nodes;
	              }.call(this) : stepName == "manipulate-data" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Lastly, choose the best-suited visualization");;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'mp-tooltip-subtitle': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(stepName == "choose-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Choosing an event shows you how many times your customers completed that action in the chart below.");;
	                return __jade_nodes;
	              }.call(this) : stepName == "compare-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Compare multiple events to see if your customers are performing certain events more than others.");;
	                return __jade_nodes;
	              }.call(this) : stepName == "group-by" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Break your events down into groups to answer deeper questions about how your customers use your product.");;
	                return __jade_nodes;
	              }.call(this) : stepName == "manipulate-data" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("A line chart works well for displaying your data over time, while a bar chart is better at showing quantity.");;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	    var open = $helpers.isPaneOpen();
	    var showUpsellIcon = $helpers.shouldShowUpsellIcon();
	    var learnStep = util.getLearnStep(report);
	    return {
	      value: h("div", {
	        "class": Object.assign({}, util.learnClasses({
	          disabledSteps: ["choose-event"],
	          tooltipContainer: true,
	          transitioning: learnTransitioningIn && ["compare-event", "group-by"].includes(learnStep.name)
	        }), {
	          'builder-container': true,
	          'contextual-menu': true
	        })
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(jade_mixins['irb-learn-tooltip'].call(this, "compare-event", "group-by"));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": Object.assign({}, {
	            'pane-open': open
	          }, {
	            'irb-new-control': true,
	            'new-query-builder': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'control-buttons': true,
	              'add-control': true,
	              'irb-learn-emphasize': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("button", {
	              "on": {
	                click: $helpers.clickedAdd
	              },
	              "class": Object.assign({}, {
	                'disable-add-button': showUpsellIcon
	              }, {
	                'add-button': true
	              })
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'plus'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(showUpsellIcon ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-icon': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                  "attrs": {
	                    icon: 'lighting-bolt'
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : undefined);
	            __jade_nodes = __jade_nodes.concat($helpers.shouldShowUpsellModal() ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-wrapper': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("mp-upsell-popup", {
	                  "attrs": {
	                    feature: "filter-levels",
	                    open: $helpers.shouldShowUpsellModal()
	                  },
	                  "on": {
	                    change: $helpers.closeUpsellModal
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : undefined);
	            __jade_nodes = __jade_nodes.concat(open ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("input", {
	                "hook": {
	                  insert: $helpers.insertedInput
	                },
	                "on": {
	                  click: $helpers.clickedInput,
	                  input: $helpers.changedSearch
	                },
	                "props": {
	                  autoFocus: true,
	                  type: "text",
	                  value: contextFilter
	                },
	                "style": {
	                  width: 0,
	                  delayed: {
	                    width: ''
	                  },
	                  remove: {
	                    width: '0'
	                  }
	                },
	                "class": {
	                  'control-label': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("span", {
	                  "class": {
	                    'label-preposition': true
	                  }
	                }, [$helpers.getPreposition() || '']));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'drop-menu': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-drop-menu", {
	              "attrs": {
	                open: open
	              },
	              "on": {
	                change: $helpers.menuChange
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  'slot-body': true
	                },
	                "class": {
	                  'new-pane-content': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat($component.child("builder-pane", {
	                  attrs: {
	                    open: open
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "contextFilter" in locals ? locals.contextFilter : typeof contextFilter !== "undefined" ? contextFilter : undefined, "learnActive" in locals ? locals.learnActive : typeof learnActive !== "undefined" ? learnActive : undefined, "learnModalStepIndex" in locals ? locals.learnModalStepIndex : typeof learnModalStepIndex !== "undefined" ? learnModalStepIndex : undefined, "learnReminding" in locals ? locals.learnReminding : typeof learnReminding !== "undefined" ? learnReminding : undefined, "learnTransitioningIn" in locals ? locals.learnTransitioningIn : typeof learnTransitioningIn !== "undefined" ? learnTransitioningIn : undefined, "learnTransitioningOut" in locals ? locals.learnTransitioningOut : typeof learnTransitioningOut !== "undefined" ? learnTransitioningOut : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _clause = __webpack_require__(14);
	
	var _section = __webpack_require__(253);
	
	__webpack_require__(288);
	
	__webpack_require__(290);
	
	__webpack_require__(299);
	
	__webpack_require__(303);
	
	var _index = __webpack_require__(306);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(307);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('query-builder-filter', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        helpers: {
	          clickedDeterminerToggle: function clickedDeterminerToggle() {
	            var filter = _this2.state.report.sections.filter;
	            filter.determiner = filter.determiner === _section.FilterSection.DETERMINER_ALL ? _section.FilterSection.DETERMINER_ANY : _section.FilterSection.DETERMINER_ALL;
	            _this2.app.updateSection(filter);
	          },
	          getQueryDelimiter: function getQueryDelimiter() {
	            var determiner = _this2.state.report.sections.filter.determiner;
	            var delimiter = ',';
	            if (_this2.state.report.sections.filter.clauses.length < 3) {
	              if (determiner === _section.FilterSection.DETERMINER_ALL) {
	                delimiter = 'and';
	              } else if (determiner === _section.FilterSection.DETERMINER_ANY) {
	                delimiter = 'or';
	              }
	            }
	            return delimiter;
	          },
	          isAddingClause: function isAddingClause() {
	            return _this2.app.isAddingClause(_clause.FilterClause.TYPE);
	          }
	        }
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _clause = __webpack_require__(14);
	
	var _builderFilterAddControl = __webpack_require__(289);
	
	var _builderFilterAddControl2 = _interopRequireDefault(_builderFilterAddControl);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('builder-filter-add-control', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'attachedCallback', this).apply(this, arguments);
	      this.app.onClickOutside(this.tagName, 'stopBuildingQuery');
	    }
	  }, {
	    key: 'isPaneOpen',
	    value: function isPaneOpen() {
	      return !!this.state.builderPane.screens.length && this.app.isAddingClause(_clause.FilterClause.TYPE) && this.state.activeMathMenuIndex === null;
	    }
	  }, {
	    key: 'openPane',
	    value: function openPane() {
	      this.app.startBuilderOnScreen('builder-screen-filter-properties-list');
	      this.app.startAddingClause(_clause.FilterClause.TYPE);
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderFilterAddControl2.default,
	        helpers: {
	          clickedAdd: function clickedAdd() {
	            if (!_this2.app.canAddFilterClause()) {
	              _this2.app.openUpsellModal('filterClause');
	              _this2.app.stopBuildingQuery(_this2.tagName);
	              return;
	            }
	            if (!_this2.isPaneOpen()) {
	              _this2.openPane();
	            } else {
	              _this2.app.stopBuildingQuery(_this2.tagName);
	            }
	          },
	          clickedInput: function clickedInput(ev) {
	            return ev.stopPropagation();
	          }, // don't close menu!
	          insertedInput: function insertedInput(vnode) {
	            return vnode.elm.focus();
	          },
	          isPaneOpen: function isPaneOpen() {
	            return _this2.isPaneOpen();
	          },
	          changedSearch: function changedSearch(ev) {
	            return _this2.update({ contextFilter: ev.target.value });
	          },
	          shouldShowUpsellIcon: function shouldShowUpsellIcon() {
	            return !_this2.app.canAddFilterClause();
	          },
	          shouldShowUpsellModal: function shouldShowUpsellModal() {
	            return _this2.state.upsellModal === 'filterClause';
	          },
	          closeUpsellModal: function closeUpsellModal(ev) {
	            return _this2.app.maybeCloseUpsellModal(ev, 'filterClause');
	          }
	        }
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, contextFilter) {
	    var h = __webpack_require__(232).h;
	    var open = $helpers.isPaneOpen();
	    var showUpsellIcon = $helpers.shouldShowUpsellIcon();
	    var showModal = $helpers.shouldShowUpsellModal();
	    return {
	      value: h("div", {
	        "class": {
	          'control-container': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": Object.assign({}, {
	            'pane-open': open
	          }, {
	            'irb-new-control': true,
	            'new-query-builder': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'control-buttons': true,
	              'add-filter-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(open ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("input", {
	                "hook": {
	                  insert: $helpers.insertedInput
	                },
	                "props": {
	                  autoFocus: true,
	                  placeholder: 'Search',
	                  type: "text",
	                  value: contextFilter
	                },
	                "on": {
	                  click: $helpers.clickedInput,
	                  input: $helpers.changedSearch
	                },
	                "style": {
	                  width: 0,
	                  delayed: {
	                    width: ''
	                  },
	                  remove: {
	                    width: '0'
	                  }
	                },
	                "class": Object.assign({}, {
	                  'search-active': open
	                }, {
	                  'control-label': true,
	                  'builder-search-input': true
	                })
	              }));;
	              return __jade_nodes;
	            }.call(this) : undefined);
	            __jade_nodes = __jade_nodes.concat(h("button", {
	              "on": {
	                click: $helpers.clickedAdd
	              },
	              "class": {
	                'add-filter-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("span", {
	                "class": Object.assign({}, {
	                  'filter-button-disabled': showUpsellIcon
	                }, {
	                  'button-flex-wrapper': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                  "attrs": {
	                    icon: 'plus'
	                  }
	                }));
	                __jade_nodes = __jade_nodes.concat(h("span", {
	                  "class": {
	                    'add-filter-label': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat("Filter");;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(showUpsellIcon ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-icon': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                  "attrs": {
	                    icon: 'lighting-bolt'
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : undefined);
	            __jade_nodes = __jade_nodes.concat(showModal ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-wrapper': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("mp-upsell-popup", {
	                  "attrs": {
	                    feature: "filter-levels",
	                    open: showModal
	                  },
	                  "on": {
	                    change: $helpers.closeUpsellModal
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'drop-menu': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-drop-menu", {
	            "attrs": {
	              open: open
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "attrs": {
	                'slot-body': true
	              },
	              "class": {
	                'new-pane-content': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat($component.child("builder-pane", {
	                attrs: {
	                  open: open
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "contextFilter" in locals ? locals.contextFilter : typeof contextFilter !== "undefined" ? contextFilter : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _editControl = __webpack_require__(291);
	
	var _clause = __webpack_require__(14);
	
	var _util = __webpack_require__(8);
	
	__webpack_require__(297);
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var MAX_LABEL_ENTRIES = 3;
	
	document.registerElement('builder-filter-edit-control', function (_EditControl) {
	  _inherits(_class, _EditControl);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'getLabel',
	    value: function getLabel() {
	      var clause = this.state.report.sections.getClause('filter', this.clauseIndex);
	      var property = (0, _util.renameProperty)(clause.value);
	      var type = clause.filterType;
	      var operator = clause.filterOperator;
	
	      var value = clause.filterValue;
	      if (Array.isArray(value)) {
	        if (value.length > MAX_LABEL_ENTRIES) {
	          value = value.slice(0, MAX_LABEL_ENTRIES - 1).concat(value.length - MAX_LABEL_ENTRIES + 1 + ' others');
	        }
	      } else {
	        value = [value];
	      }
	      // Workaround for <https://mixpanel.atlassian.net/browse/CA-1990>.
	      value = value.map(function (val) {
	        return val === 0 ? '0' : val;
	      });
	
	      if (type === 'datetime') {
	        switch (operator) {
	          case 'was on':
	          case 'was between':
	            value = value.map(function (val) {
	              return (0, _util.formatDateDisplay)((0, _util.parseDate)(val)) || val;
	            });
	            break;
	          case 'was in the':
	            value = _clause.TimeClause.UNIT_AND_VALUE_TO_RANGE[clause.filterDateUnit][clause.filterValue];
	            value = value ? [value.toLowerCase()] : [];
	            break;
	        }
	      }
	
	      switch (operator) {
	        case 'equals':
	        case 'does not equal':
	          value = value.reduce(function (arr, val, idx) {
	            return arr.concat(idx ? ['or', val] : [val]);
	          }, []);
	          break;
	        case 'is between':
	        case 'was between':
	          value = [value[0], 'and', value[1]];
	          break;
	        case 'is set':
	        case 'is not set':
	          value = [];
	          break;
	        case 'is true':
	        case 'is false':
	          value = [(0, _util.capitalize)(operator.split(' ').slice(1).join(' '))];
	          operator = operator.split(' ')[0];
	          break;
	      }
	
	      return [property, operator].concat(_toConsumableArray(value));
	    }
	  }, {
	    key: 'openPane',
	    value: function openPane() {
	      this.app.startBuilderOnScreen('builder-screen-filter-property');
	    }
	  }, {
	    key: 'section',
	    get: function get() {
	      return _clause.FilterClause.TYPE;
	    }
	  }]);
	
	  return _class;
	}(_editControl.EditControl));

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.EditControl = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _throttle = __webpack_require__(282);
	
	var _throttle2 = _interopRequireDefault(_throttle);
	
	var _util = __webpack_require__(8);
	
	__webpack_require__(292);
	
	var _index = __webpack_require__(294);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(295);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var EditControl = exports.EditControl = function (_Component) {
	  _inherits(EditControl, _Component);
	
	  function EditControl() {
	    _classCallCheck(this, EditControl);
	
	    return _possibleConstructorReturn(this, (EditControl.__proto__ || Object.getPrototypeOf(EditControl)).apply(this, arguments));
	  }
	
	  _createClass(EditControl, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      _get(EditControl.prototype.__proto__ || Object.getPrototypeOf(EditControl.prototype), 'attachedCallback', this).apply(this, arguments);
	      this.app.onClickOutside(this.tagName, 'stopBuildingQuery');
	    }
	  }, {
	    key: 'getLabel',
	    value: function getLabel() {
	      throw new Error('Not implemented!');
	    }
	  }, {
	    key: 'getClause',
	    value: function getClause(state) {
	      return (state || this.state).report.sections.getClause(this.section, this.clauseIndex);
	    }
	  }, {
	    key: 'getSelectionAttrs',
	    value: function getSelectionAttrs() {
	      return {};
	    }
	  }, {
	    key: 'isPaneOpen',
	    value: function isPaneOpen() {
	      return !!this.state.builderPane.screens.length && this.app.isEditingClause(this.section, this.clauseIndex) && this.state.activeMathMenuIndex === null;
	    }
	  }, {
	    key: 'isRemovable',
	    value: function isRemovable() {
	      return true;
	    }
	  }, {
	    key: 'labelPrefixComponent',
	    value: function labelPrefixComponent() {
	      return {
	        componentName: false,
	        attrs: false
	      };
	    }
	  }, {
	    key: 'openPane',
	    value: function openPane() {
	      throw new Error('Not implemented!');
	    }
	  }, {
	    key: 'remove',
	    value: function remove() {
	      this.app.removeClause(this.section, this.clauseIndex);
	    }
	  }, {
	    key: 'shouldUpdate',
	    value: function shouldUpdate(state) {
	      return !!this.getClause(state);
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        helpers: (0, _util.extend)(_get(EditControl.prototype.__proto__ || Object.getPrototypeOf(EditControl.prototype), 'config', this).helpers, {
	          clickedInput: function clickedInput(ev) {
	            return ev.stopPropagation();
	          }, // don't close menu!
	          clickedLabel: function clickedLabel() {
	            _this2.openPane();
	            _this2.app.stopEditingClause();
	            _this2.app.startEditingClause(_this2.section, _this2.clauseIndex);
	          },
	          clickedFromLabel: function clickedFromLabel() {
	            _this2.helpers.clickedLabel();
	          },
	          clickedToLabel: function clickedToLabel() {
	            _this2.helpers.clickedLabel();
	          },
	          labelPrefixComponent: function labelPrefixComponent() {
	            return _this2.labelPrefixComponent();
	          },
	          menuChange: function menuChange(ev) {
	            return ev.detail && ev.detail.state === 'closed' && _this2.isPaneOpen() && _this2.app.stopBuildingQuery();
	          },
	          changedSearch: (0, _throttle2.default)(function (ev) {
	            _this2.update({ contextFilter: ev.target.value });
	            _this2.app.updateBuilderCurrentScreen({ progressiveListSize: null });
	          }, 200, { leading: true, maxWait: 200 }),
	          getLabel: function getLabel() {
	            return _this2.getLabel();
	          },
	          getLabelText: function getLabelText() {
	            var label = _this2.getLabel();
	            return Array.isArray(label) ? label[0] : label;
	          },
	          getSelectionAttrs: function getSelectionAttrs(open) {
	            return (0, _util.extend)(_this2.getSelectionAttrs(), { open: open });
	          },
	          getSection: function getSection() {
	            return _this2.section;
	          },
	          isPaneOpen: function isPaneOpen() {
	            return _this2.isPaneOpen();
	          },
	          isRemovable: function isRemovable() {
	            return _this2.isRemovable();
	          },
	          removeClause: function removeClause() {
	            return _this2.remove();
	          }
	        })
	      };
	    }
	  }, {
	    key: 'clauseIndex',
	    get: function get() {
	      return Number(this.getAttribute('clause-index'));
	    }
	  }, {
	    key: 'elementClass',
	    get: function get() {
	      throw new Error('Not implemented!');
	    }
	  }, {
	    key: 'isRemoveable',
	    get: function get() {
	      throw new Error('Not implemented!');
	    }
	  }, {
	    key: 'label',
	    get: function get() {
	      throw new Error('Not implemented!');
	    }
	  }, {
	    key: 'section',
	    get: function get() {
	      throw new Error('Not implemented!');
	    }
	  }]);

	  return EditControl;
	}(_panel.Component);

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _resizeInput = __webpack_require__(293);
	
	var _resizeInput2 = _interopRequireDefault(_resizeInput);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var GLOBAL_MIN_WIDTH = 90;
	var SIZER_PROPS = ['fontFamily', 'fontSize', 'fontWeight', 'height', 'letterSpacing', 'padding', 'whiteSpace'];
	
	var ResizeInput = function (_Component) {
	  _inherits(ResizeInput, _Component);
	
	  function ResizeInput() {
	    _classCallCheck(this, ResizeInput);
	
	    return _possibleConstructorReturn(this, (ResizeInput.__proto__ || Object.getPrototypeOf(ResizeInput)).apply(this, arguments));
	  }
	
	  _createClass(ResizeInput, [{
	    key: 'createdCallback',
	    value: function createdCallback() {
	      _get(ResizeInput.prototype.__proto__ || Object.getPrototypeOf(ResizeInput.prototype), 'createdCallback', this).apply(this, arguments);
	      this.minimumWidth = this.defaultMinWidth;
	    }
	  }, {
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      _get(ResizeInput.prototype.__proto__ || Object.getPrototypeOf(ResizeInput.prototype), 'attachedCallback', this).apply(this, arguments);
	      this.removeSizer();
	      this.setMinimumWidth(this.getTextWidth(this.placeholder));
	      this.resize();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, oldValue, newValue) {
	      _get(ResizeInput.prototype.__proto__ || Object.getPrototypeOf(ResizeInput.prototype), 'attributeChangedCallback', this).apply(this, arguments);
	      if (name === 'placeholder') {
	        this.setMinimumWidth(this.getTextWidth(newValue));
	      }
	    }
	  }, {
	    key: 'detachedCallback',
	    value: function detachedCallback() {
	      this.removeSizer();
	    }
	  }, {
	    key: 'removeSizer',
	    value: function removeSizer() {
	      if (this.sizer) {
	        this.sizer.remove();
	        this.sizer = null;
	      }
	    }
	  }, {
	    key: 'focus',
	    value: function focus() {
	      var input = this.querySelector('input');
	      if (input) {
	        input.focus();
	      }
	    }
	  }, {
	    key: 'getTextWidth',
	    value: function getTextWidth(text) {
	      if (!this.sizer) {
	        this.sizer = document.createElement('div');
	
	        var tmpInput = document.createElement('input');
	        this.appendChild(tmpInput);
	        var inputStyle = getComputedStyle(tmpInput);
	        var _iteratorNormalCompletion = true;
	        var _didIteratorError = false;
	        var _iteratorError = undefined;
	
	        try {
	          for (var _iterator = SIZER_PROPS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	            var prop = _step.value;
	
	            this.sizer.style[prop] = inputStyle[prop];
	          }
	        } catch (err) {
	          _didIteratorError = true;
	          _iteratorError = err;
	        } finally {
	          try {
	            if (!_iteratorNormalCompletion && _iterator.return) {
	              _iterator.return();
	            }
	          } finally {
	            if (_didIteratorError) {
	              throw _iteratorError;
	            }
	          }
	        }
	
	        tmpInput.remove();
	
	        this.sizer.style.display = 'inline-block';
	        this.sizer.style.position = 'absolute';
	        this.sizer.style.top = '-1000px';
	        this.sizer.style.visibility = 'hidden';
	
	        document.body.appendChild(this.sizer);
	      }
	      text = text || '';
	      while (text.endsWith(' ')) {
	        text = '&nbsp;' + text.slice(0, text.length - 1);
	      }
	      this.sizer.innerHTML = text.replace(' ', '&nbsp;');
	      return Math.round(this.sizer.getBoundingClientRect().width);
	    }
	  }, {
	    key: 'resize',
	    value: function resize() {
	      var newWidth = Math.ceil(Math.max(this.minimumWidth, this.getTextWidth(this.state.inputValue)));
	      this.update({ inputWidth: newWidth });
	    }
	  }, {
	    key: 'setMinimumWidth',
	    value: function setMinimumWidth(newMin) {
	      if (newMin !== this.minimumWidth) {
	        this.minimumWidth = Math.max(newMin, this.defaultMinWidth);
	        this.resize();
	      }
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _resizeInput2.default,
	        updateSync: true,
	        defaultState: {
	          autofocus: true,
	          inputValue: '',
	          inputWidth: this.defaulMinWidth
	        },
	        helpers: {
	          inserted: function inserted(vnode) {
	            return requestAnimationFrame(function () {
	              return vnode.elm.focus();
	            });
	          },
	          updatedInput: function updatedInput(ev) {
	            return _this2.value = ev.target.value;
	          }
	        }
	      };
	    }
	  }, {
	    key: 'value',
	    get: function get() {
	      return this.state.inputValue;
	    },
	    set: function set(inputValue) {
	      this.update({ inputValue: inputValue });
	      this.resize();
	    }
	  }, {
	    key: 'placeholder',
	    get: function get() {
	      return this.getAttribute('placeholder');
	    }
	  }, {
	    key: 'defaultMinWidth',
	    get: function get() {
	      var minWidth = Number(this.getAttribute('min-width'));
	      return Number.isInteger(minWidth) ? minWidth : GLOBAL_MIN_WIDTH;
	    }
	  }]);
	
	  return ResizeInput;
	}(_panel.Component);
	
	exports.default = ResizeInput;
	
	
	document.registerElement('resize-input', ResizeInput);

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, inputValue, inputWidth) {
	    var h = __webpack_require__(232).h;
	    return {
	      value: h("div", {
	        "class": {
	          'resize-input': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("input", {
	          "attrs": {
	            placeholder: $component.placeholder
	          },
	          "props": {
	            maxLength: 50,
	            type: "text",
	            value: inputValue
	          },
	          "style": {
	            width: inputWidth + "px"
	          },
	          "on": {
	            input: $helpers.updatedInput
	          },
	          "hook": {
	            insert: $helpers.inserted
	          }
	        }));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "inputValue" in locals ? locals.inputValue : typeof inputValue !== "undefined" ? inputValue : undefined, "inputWidth" in locals ? locals.inputWidth : typeof inputWidth !== "undefined" ? inputWidth : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, contextFilter) {
	    var h = __webpack_require__(232).h;
	    var open = $helpers.isPaneOpen();
	    return {
	      value: h("div", {
	        "class": {
	          'control-container': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": Object.assign({}, {
	            'pane-open': open
	          }, {
	            'irb-new-control': true,
	            'new-query-builder': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'control-buttons': true,
	              'edit-control': true,
	              'control-button-text': true,
	              'irb-learn-emphasize': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(open ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("resize-input", {
	                "attrs": {
	                  placeholder: $helpers.getLabelText()
	                },
	                "props": {
	                  autoFocus: true,
	                  type: "text",
	                  value: contextFilter
	                },
	                "on": {
	                  click: $helpers.clickedInput,
	                  input: $helpers.changedSearch
	                },
	                "class": {
	                  'control-label': true
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              var prefix = $helpers.labelPrefixComponent();
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'control-label': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(prefix && prefix.componentName ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'control-label-prefix': true
	                    }
	                  }, [$component.child(prefix.componentName, {
	                    attrs: prefix.attrs
	                  }) || '']));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "on": {
	                    click: $helpers.clickedLabel
	                  },
	                  "class": {
	                    'control-label-text': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  var label = $helpers.getLabel();
	                  __jade_nodes = __jade_nodes.concat(typeof label === 'string' ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(label);;
	                    return __jade_nodes;
	                  }.call(this) : function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(label.reduce(function (__each_nodes, labelPart, $index) {
	                      return __each_nodes.concat(function () {
	                        var __jade_nodes = [];
	                        __jade_nodes = __jade_nodes.concat(h("span", {
	                          "class": {
	                            'edit-label-part': true
	                          }
	                        }, [labelPart || '']));;
	                        return __jade_nodes;
	                      }.call(this));
	                    }, []));;
	                    return __jade_nodes;
	                  }.call(this));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	            __jade_nodes = __jade_nodes.concat($helpers.isRemovable() && $helpers.getSection() === "filter" ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("button", {
	                "on": {
	                  click: $helpers.removeClause
	                },
	                "class": {
	                  'remove': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                  "attrs": {
	                    icon: 'x'
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'drop-menu': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-drop-menu", {
	              "attrs": {
	                open: open
	              },
	              "on": {
	                change: $helpers.menuChange
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  'slot-body': true
	                },
	                "class": {
	                  'new-pane-content': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat($component.child("builder-pane", {
	                  attrs: $helpers.getSelectionAttrs(open)
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "contextFilter" in locals ? locals.contextFilter : typeof contextFilter !== "undefined" ? contextFilter : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 295 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 296 */,
/* 297 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 298 */,
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenBase = __webpack_require__(300);
	
	var _clause = __webpack_require__(14);
	
	var _base = __webpack_require__(256);
	
	var _base2 = _interopRequireDefault(_base);
	
	var _util = __webpack_require__(8);
	
	var _builderScreenFilterProperty = __webpack_require__(302);
	
	var _builderScreenFilterProperty2 = _interopRequireDefault(_builderScreenFilterProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // filter choices for one property
	// (screen 2 of filter)
	
	document.registerElement('builder-screen-filter-property', function (_BuilderScreenBase) {
	  _inherits(_class, _BuilderScreenBase);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'isLoading',
	    value: function isLoading() {
	      return this.state.topPropertyValues === _base2.default.LOADING;
	    }
	  }, {
	    key: 'progressiveListLength',
	    value: function progressiveListLength() {
	      return this._progressiveListLength || 0;
	    }
	  }, {
	    key: 'shouldUpdate',
	    value: function shouldUpdate(state) {
	      var clause = this.app.getActiveStageClause(state);
	      return clause && !!clause.filterType;
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderScreenFilterProperty2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          FILTER_TYPES: _clause.FilterClause.FILTER_TYPES.map(function (name) {
	            return {
	              name: name,
	              icon: (0, _util.getIconForPropertyType)(name)
	            };
	          }),
	
	          FILTER_OPERATORS: Object.assign.apply(Object, _toConsumableArray(_clause.FilterClause.FILTER_TYPES.map(function (type) {
	            var operators = _clause.FilterClause.FILTER_OPERATORS[type];
	
	            if (type === 'datetime') {
	              operators = operators.filter(function (op) {
	                return !['was less than', 'was more than', 'was before', 'was after'].includes(op);
	              });
	            }
	
	            return _defineProperty({}, type, operators);
	          }))),
	
	          TIME_RANGE_NAMES: _clause.TimeClause.RANGE_LIST.filter(function (range) {
	            return range !== _clause.TimeClause.RANGES.CUSTOM;
	          }),
	          TIME_RANGE_VALUES: _clause.TimeClause.RANGE_TO_VALUE_AND_UNIT,
	
	          // screen/type selection
	          chooseFilterOperator: function chooseFilterOperator(filterOperator) {
	            _this2.helpers.updateMenu('operator', false);
	            var clause = _this2.app.getActiveStageClause();
	            if (clause.filterOperator !== filterOperator) {
	              _this2.resetProgressiveList();
	              _this2.app.updateStageClause({ filterOperator: filterOperator, filterValue: null });
	            }
	          },
	          chooseFilterType: function chooseFilterType(filterType) {
	            _this2.helpers.updateMenu('type', false);
	            var clause = _this2.app.getActiveStageClause();
	            if (clause.filterType !== filterType) {
	              _this2.resetProgressiveList();
	              _this2.app.updateStageClause({ filterType: filterType });
	            }
	          },
	
	          getActiveClause: function getActiveClause() {
	            return _this2.app.hasStageClause() ? _this2.app.activeStageClause : {};
	          },
	          getMaxDataHistoryDays: function getMaxDataHistoryDays() {
	            return _this2.app.maxDataHistoryDays();
	          },
	          // dropdowns
	          isMenuOpen: function isMenuOpen(menu) {
	            var currentScreen = _this2.app.getBuilderCurrentScreen();
	            return !!currentScreen && !!currentScreen[menu + 'MenuOpen'];
	          },
	          menuChange: function menuChange(ev, menu) {
	            return (// check for close
	              ev.detail && ev.detail.state === 'closed' && _this2.helpers.updateMenu(menu, false)
	            );
	          },
	          toggleMenu: function toggleMenu(menu) {
	            return _this2.helpers.updateMenu(menu, !_this2.helpers.isMenuOpen(menu));
	          },
	          updateMenu: function updateMenu(menu, open) {
	            return _this2.app.updateBuilderCurrentScreen(_defineProperty({}, menu + 'MenuOpen', open));
	          },
	
	          // filter content selection
	          allEqualsValuesSelected: function allEqualsValuesSelected() {
	            var selected = _this2.app.activeStageClause.filterValue;
	            if (!Array.isArray(selected)) {
	              return false;
	            } else {
	              var _ret = function () {
	                var values = new Set(_this2.helpers.getValueMatches(_this2.app.activeStageClause.filterSearch, { progressive: false }));
	                return {
	                  v: values.size === selected.length && selected.every(function (val) {
	                    return values.has(val);
	                  })
	                };
	              }();
	
	              if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	            }
	          },
	          clickedContainsMatch: function clickedContainsMatch(filterValue) {
	            return _this2.updateStageClause({ filterValue: filterValue });
	          },
	          getContainsMatches: function getContainsMatches() {
	            return _this2.helpers.getValueMatches(_this2.app.activeStageClause.filterValue, _this2.app.activeStageClause.filterOperator === 'does not contain');
	          },
	          getEqualsMatches: function getEqualsMatches() {
	            return _this2.helpers.getValueMatches(_this2.app.activeStageClause.filterSearch);
	          },
	          getValueMatches: function getValueMatches(string) {
	            var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	                _ref2$invert = _ref2.invert,
	                invert = _ref2$invert === undefined ? false : _ref2$invert,
	                _ref2$progressive = _ref2.progressive,
	                progressive = _ref2$progressive === undefined ? true : _ref2$progressive;
	
	            if (typeof string !== 'string') {
	              string = '';
	            }
	            var list = _this2.state.topPropertyValues;
	            if (string) {
	              list = list.filter(function (value) {
	                return (0, _util.renamePropertyValue)(value).toLowerCase().indexOf(string.toLowerCase()) !== -1 ? !invert : !!invert;
	              });
	            }
	            if (progressive) {
	              _this2._progressiveListLength = list.length;
	              return list.slice(0, _this2.progressiveListSize);
	            } else {
	              return list;
	            }
	          },
	          toggleAllFilterValues: function toggleAllFilterValues() {
	            var filterValue = [];
	            if (!_this2.helpers.allEqualsValuesSelected()) {
	              filterValue = _this2.helpers.getValueMatches(_this2.app.activeStageClause.filterSearch, { progressive: false });
	            }
	            _this2.app.updateStageClause({ filterValue: filterValue });
	          },
	          toggleStringEqualsValueSelected: function toggleStringEqualsValueSelected(value) {
	            var clause = _this2.app.activeStageClause;
	            var selected = clause && clause.filterValue || [];
	            var filterValue = void 0;
	
	            if (selected.indexOf(value) === -1) {
	              filterValue = [].concat(_toConsumableArray(selected), [value]);
	            } else {
	              filterValue = (0, _util.removeByValue)(selected, value);
	            }
	
	            _this2.app.updateStageClause({ filterValue: filterValue });
	          },
	          updateFilterSearch: function updateFilterSearch(filterSearch) {
	            _this2.resetProgressiveList();
	            _this2.app.updateStageClause({ filterSearch: filterSearch });
	          },
	          updateFilterValue: function updateFilterValue(filterValue) {
	            var filterDateUnit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	
	            _this2.resetProgressiveList();
	            _this2.app.updateStageClause({ filterValue: filterValue, filterDateUnit: filterDateUnit });
	          },
	          commitFilter: function commitFilter() {
	            _this2.updateAndCommitStageClause();
	          }
	        })
	      };
	    }
	  }]);
	
	  return _class;
	}(_builderScreenBase.BuilderScreenBase));

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.BuilderScreenBase = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _throttle = __webpack_require__(282);
	
	var _throttle2 = _interopRequireDefault(_throttle);
	
	var _function = __webpack_require__(301);
	
	var _clause = __webpack_require__(14);
	
	var _base = __webpack_require__(256);
	
	var _base2 = _interopRequireDefault(_base);
	
	var _util = __webpack_require__(8);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var IDENTITY_FUNC = function IDENTITY_FUNC(x) {
	  return x;
	};
	
	var PROGRESSIVE_LIST_BUFFER_PX = 250;
	var PROGRESSIVE_LIST_START_SIZE = 20;
	
	var BuilderScreenBase = exports.BuilderScreenBase = function (_Component) {
	  _inherits(BuilderScreenBase, _Component);
	
	  function BuilderScreenBase() {
	    _classCallCheck(this, BuilderScreenBase);
	
	    return _possibleConstructorReturn(this, (BuilderScreenBase.__proto__ || Object.getPrototypeOf(BuilderScreenBase)).apply(this, arguments));
	  }
	
	  _createClass(BuilderScreenBase, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      _get(BuilderScreenBase.prototype.__proto__ || Object.getPrototypeOf(BuilderScreenBase.prototype), 'attachedCallback', this).apply(this, arguments);
	      this.updateRenderedSizeOnNextFrame({ cancelDuringTransition: false });
	    }
	  }, {
	    key: 'isLoading',
	    value: function isLoading() {
	      throw new Error('Not implemented!');
	    }
	  }, {
	    key: 'createPaneOffsetStyle',
	    value: function createPaneOffsetStyle(screens) {
	      var offset = screens.slice(0, -1).reduce(function (sum, screen) {
	        return sum + (screen.width || 0);
	      }, 0);
	      return {
	        '-webkit-transform': 'translateX(-' + offset + 'px)',
	        transform: 'translateX(-' + offset + 'px)'
	      };
	    }
	  }, {
	    key: 'createPaneSizeStyle',
	    value: function createPaneSizeStyle(screens) {
	      var lastScreen = screens[screens.length - 1];
	      return {
	        width: lastScreen.width + 'px',
	        height: lastScreen.height + 'px'
	      };
	    }
	
	    /**
	     * filter item list against contextFilter, and add match
	     * data to every matching item (for highlighting)
	     */
	
	  }, {
	    key: 'matchingItems',
	    value: function matchingItems(items) {
	      var _this2 = this;
	
	      var renameFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : IDENTITY_FUNC;
	
	      if (this.state.contextFilter) {
	        items = items.map(function (item) {
	          return (0, _util.extend)(item, {
	            matches: (0, _util.stringFilterMatches)(renameFunc(item.name), _this2.state.contextFilter)
	          });
	        }).filter(function (item) {
	          return !!item.matches;
	        }).sort((0, _function.lexicalCompose)(
	        // prioritize beginning match
	        (0, _function.mapArguments)(_function.defaultOrdering, function (item) {
	          return -item.matches[0].length;
	        }),
	
	        // second: a-z
	        (0, _function.mapArguments)(_function.defaultOrdering, function (item) {
	          return renameFunc(item.name).toLowerCase();
	        })));
	      }
	      return items;
	    }
	  }, {
	    key: 'allMatchingEvents',
	    value: function allMatchingEvents() {
	      var mpEvents = this.state.topEvents === _base2.default.LOADING ? [] : this.state.topEvents;
	      return [].concat(_toConsumableArray(this.matchingItems([_clause.ShowClause.TOP_EVENTS, _clause.ShowClause.ALL_EVENTS], _util.renameEvent)), _toConsumableArray(this.matchingItems(mpEvents, _util.renameEvent)));
	    }
	  }, {
	    key: 'allMatchingProperties',
	    value: function allMatchingProperties(propType) {
	      var isPeople = propType === _clause.Clause.RESOURCE_TYPE_PEOPLE;
	      var properties = isPeople ? this.state.topPeopleProperties : this.state.topEventProperties;
	      properties = properties === _base2.default.LOADING ? [] : properties;
	      // TODO: ShowClause.ALL_PEOPLE should  only be show for show clause
	      var specialProps = [_clause.ShowClause.ALL_PEOPLE];
	      if (!isPeople) {
	        specialProps = specialProps.concat(_clause.GroupClause.EVENT_DATE);
	      }
	
	      return [].concat(_toConsumableArray(this.matchingItems(specialProps, _util.renameProperty)), _toConsumableArray(this.matchingItems(properties, _util.renameProperty)));
	    }
	
	    // find input associated with this dropdown and focus it
	
	  }, {
	    key: 'focusInput',
	    value: function focusInput() {
	      var _this3 = this;
	
	      requestAnimationFrame(function () {
	        var el = void 0;
	        for (el = _this3.parentNode; el && el.classList && !el.classList.contains('pane-open'); el = el.parentNode) {}
	        var input = el && el.querySelector('resize-input,input.control-label');
	        if (input) {
	          input.focus();
	        }
	      });
	    }
	  }, {
	    key: 'previousScreen',
	    value: function previousScreen() {
	      var screens = this.state.builderPane.screens.slice(0, -1);
	      this.app.updateBuilder({
	        inTransition: true,
	        offsetStyle: this.createPaneOffsetStyle(screens),
	        sizeStyle: this.createPaneSizeStyle(screens)
	      }, { screens: screens });
	      this.focusInput();
	    }
	  }, {
	    key: 'nextScreen',
	    value: function nextScreen(componentName) {
	      if (!this.state.builderPane.inTransition) {
	        this.app.update({ contextFilter: '' });
	        this.app.updateBuilder({
	          inTransition: true,
	          screens: this.state.builderPane.screens.concat({ componentName: componentName })
	        });
	        this.focusInput();
	      }
	    }
	  }, {
	    key: 'setPaneSizeAndPosition',
	    value: function setPaneSizeAndPosition(width, height) {
	      if (width || height) {
	        var screens = this.app.state.builderPane.screens;
	        var screen = screens[this.screenIdx];
	
	        if (screen && (screen.width !== width || screen.height !== height)) {
	          screen = (0, _util.extend)(screen, { width: width, height: height });
	          screens = (0, _util.replaceByIndex)(screens, this.screenIdx, screen);
	
	          this.app.updateBuilder({
	            offsetStyle: this.createPaneOffsetStyle(screens),
	            sizeStyle: this.createPaneSizeStyle(screens),
	            screens: screens
	          });
	        }
	      }
	    }
	  }, {
	    key: 'updateRenderedSize',
	    value: function updateRenderedSize() {
	      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref$cancelDuringTran = _ref.cancelDuringTransition,
	          cancelDuringTransition = _ref$cancelDuringTran === undefined ? true : _ref$cancelDuringTran;
	
	      if (!(cancelDuringTransition && this.state.builderPane.inTransition) && this.firstChild) {
	        var _firstChild$getBoundi = this.firstChild.getBoundingClientRect(),
	            width = _firstChild$getBoundi.width,
	            height = _firstChild$getBoundi.height;
	
	        this.setPaneSizeAndPosition(width, height);
	      }
	    }
	  }, {
	    key: 'updateRenderedSizeOnNextFrame',
	    value: function updateRenderedSizeOnNextFrame() {
	      var _this4 = this;
	
	      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref2$cancelDuringTra = _ref2.cancelDuringTransition,
	          cancelDuringTransition = _ref2$cancelDuringTra === undefined ? true : _ref2$cancelDuringTra;
	
	      requestAnimationFrame(function () {
	        _this4.updateRenderedSize({ cancelDuringTransition: cancelDuringTransition });
	      });
	    }
	  }, {
	    key: 'updateStageClause',
	    value: function updateStageClause(clauseAttrs) {
	      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	          _ref3$shouldCommit = _ref3.shouldCommit,
	          shouldCommit = _ref3$shouldCommit === undefined ? false : _ref3$shouldCommit,
	          _ref3$shouldStopEditi = _ref3.shouldStopEditing,
	          shouldStopEditing = _ref3$shouldStopEditi === undefined ? false : _ref3$shouldStopEditi;
	
	      if (!this.state.builderPane.inTransition) {
	        this.app.updateStageClause(clauseAttrs);
	        if (shouldCommit) {
	          this.app.commitStageClause({ shouldStopEditing: shouldStopEditing });
	        }
	      }
	    }
	  }, {
	    key: 'updateAndCommitStageClause',
	    value: function updateAndCommitStageClause(clauseAttrs) {
	      this.updateStageClause(clauseAttrs, {
	        shouldCommit: true,
	        shouldStopEditing: true
	      });
	    }
	  }, {
	    key: 'increaseProgressiveListSize',
	    value: function increaseProgressiveListSize() {
	      if (this.progressiveListSize < this.progressiveListLength()) {
	        var progressiveListSize = this.progressiveListSize * 2;
	        this.app.updateBuilderCurrentScreen({ progressiveListSize: progressiveListSize });
	      }
	    }
	  }, {
	    key: 'buildProgressiveList',
	    value: function buildProgressiveList() {
	      return this.buildList().slice(0, this.progressiveListSize);
	    }
	  }, {
	    key: 'progressiveListLength',
	    value: function progressiveListLength() {
	      return this.buildList().length;
	    }
	  }, {
	    key: 'resetProgressiveList',
	    value: function resetProgressiveList() {
	      this.app.updateBuilderCurrentScreen({ progressiveListSize: null });
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this5 = this;
	
	      return {
	        helpers: {
	          clickedEvent: function clickedEvent(value) {
	            _this5.app.updateRecentEvents(value);
	            _this5.updateAndCommitStageClause({ value: value, property: null });
	          },
	          clickedEventProperties: function clickedEventProperties(ev, value) {
	            ev.stopPropagation();
	            _this5.updateStageClause({ value: value, property: null }, { shouldCommit: true });
	            _this5.app.updateBuilder({ isContextualMenuOpen: false });
	            _this5.nextScreen('builder-screen-numeric-properties');
	          },
	          clickedProperty: function clickedProperty(ev, property) {
	            var clauseAttrs = {
	              property: property,
	              value: _clause.ShowClause.ALL_PEOPLE
	            };
	            if (property.name === _clause.ShowClause.ALL_PEOPLE.name) {
	              clauseAttrs.resourceType = _clause.Clause.RESOURCE_TYPE_PEOPLE;
	              clauseAttrs.property = null;
	            }
	            _this5.updateAndCommitStageClause(clauseAttrs);
	          },
	
	          clickedBackButton: function clickedBackButton() {
	            return _this5.previousScreen();
	          },
	          closePane: function closePane() {
	            return _this5.app.stopEditingClause();
	          },
	          screenIdx: function screenIdx() {
	            return _this5.screenIdx;
	          },
	          scrolledList: function scrolledList(ev) {
	            var scrollBottom = ev.target.scrollTop + ev.target.offsetHeight;
	            if (scrollBottom + PROGRESSIVE_LIST_BUFFER_PX >= ev.target.scrollHeight) {
	              _this5.increaseProgressiveListSize();
	            }
	          },
	          getStageClauseAttr: function getStageClauseAttr(attr) {
	            return _this5.app.activeStageClause && _this5.app.activeStageClause[attr];
	          },
	          isLoading: function isLoading() {
	            return _this5.isLoading();
	          },
	          updateRenderedSize: (0, _throttle2.default)(function () {
	            return _this5.updateRenderedSize();
	          }, 200, { leading: true })
	        }
	      };
	    }
	  }, {
	    key: 'screenIdx',
	    get: function get() {
	      return Number(this.getAttribute('screen-index'));
	    }
	  }, {
	    key: 'progressiveListSize',
	    get: function get() {
	      var screen = this.app.getBuilderCurrentScreen();
	      return screen && screen.progressiveListSize || PROGRESSIVE_LIST_START_SIZE;
	    }
	  }]);

	  return BuilderScreenBase;
	}(_panel.Component);

/***/ },
/* 301 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.leqToNumericOrdering = leqToNumericOrdering;
	exports.mapArguments = mapArguments;
	exports.lexicalCompose = lexicalCompose;
	/**
	 * Turn a less-than-or-equal-to operation into a function which returns 1, 0, or -1 for sorting.
	 * @param {(Object,Object) => Bool} leq - function implementing leq for the desired ordering.
	 */
	function leqToNumericOrdering(leq) {
	  return function (a, b) {
	    return leq(a, b) ? leq(b, a) ? 0 : -1 : 1;
	  };
	}
	
	/**
	 * Map a function over the arguments of a function before calling the function
	 */
	function mapArguments(fn, argMap) {
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return fn.apply(this, args.map(argMap));
	  };
	}
	
	/**
	 * compose orderings lexically to create a single combined ordering.
	 */
	function lexicalCompose() {
	  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	    args[_key2] = arguments[_key2];
	  }
	
	  return function (a, b) {
	    return args.reduce(function (acc, curr) {
	      return acc === 0 ? curr(a, b) : acc;
	    }, 0);
	  };
	}
	
	var defaultOrdering = exports.defaultOrdering = leqToNumericOrdering(function (a, b) {
	  return a <= b;
	});

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Array, Number, Object, builderPane, setTimeout, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filter-dropdown'] = function (name, title, icon) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": _defineProperty({}, "filter-" + name + "-dropdown", true)
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("button", {
	            "on": {
	              click: function click() {
	                return $helpers.toggleMenu(name);
	              }
	            },
	            "class": {
	              'filter-menu-button': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'button-flex-wrapper': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: icon, empty: !icon
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("span", {
	                "class": {
	                  'filter-prop-name': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: "caret-down"
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'filter-menu': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-drop-menu", {
	              "attrs": {
	                open: $helpers.isMenuOpen(name)
	              },
	              "on": {
	                change: function change(ev) {
	                  return $helpers.menuChange(ev, name);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(block && block());;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filter-operator-dropdown'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(jade_mixins['filter-dropdown'].call({
	          block: function block() {
	            return function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("ul", {
	                "class": {
	                  'filter-operators': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat($helpers.FILTER_OPERATORS[clause.filterType].reduce(function (__each_nodes, filterOperator, $index) {
	                  return __each_nodes.concat(function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(h("li", {
	                      "on": {
	                        click: function click() {
	                          return $helpers.chooseFilterOperator(filterOperator);
	                        }
	                      },
	                      "class": Object.assign({}, {
	                        'filter-menu-item-selected': filterOperator === clause.filterOperator
	                      }, {
	                        'filter-menu-item': true
	                      })
	                    }, [filterOperator || '']));;
	                    return __jade_nodes;
	                  }.call(this));
	                }, []));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this);
	          }
	        }, "operator", clause.filterOperator));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filter-string-input'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'filter-string-input-wrapper': true,
	            'filter-string-search': true
	          }
	        }, function () {
	          var __jade_nodes = []; /*  TODO: handle focus properly. Sadly setTimeout is an easy working solution. */
	          /*  There is a racecondition with visible inputs in the filter screen that we need to solve for. */
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "search"
	            }
	          }));
	          __jade_nodes = __jade_nodes.concat(h("input", {
	            "props": {
	              type: "text",
	              value: clause.filterValue
	            },
	            "on": {
	              input: function input(ev) {
	                return $helpers.updateFilterValue(ev.target.value);
	              }
	            },
	            "hook": {
	              insert: function insert(vnode) {
	                return setTimeout(function () {
	                  return vnode.elm.focus();
	                }, 250);
	              }
	            },
	            "class": {
	              'filter-string-input': true
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filter-number-input'] = function (value, oninput, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'filter-number-input-wrapper': true
	          }
	        }, function () {
	          var __jade_nodes = []; /*  TODO: handle focus properly. See filter-string-input above. */
	          __jade_nodes = __jade_nodes.concat(h("input", {
	            "props": {
	              type: "text",
	              value: value
	            },
	            "on": {
	              input: oninput
	            },
	            "hook": options.autofocus ? {
	              insert: function insert(vnode) {
	                return setTimeout(function () {
	                  return vnode.elm.focus();
	                }, 250);
	              }
	            } : {},
	            "key": options.key,
	            "class": {
	              'filter-numdate-input': true
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    var clause = $helpers.getActiveClause();
	    return {
	      value: h("div", {
	        "class": {
	          'builder-screen': true,
	          'filter-property': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(jade_mixins['screen-title'].call({
	          block: function block() {
	            return function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['filter-dropdown'].call({
	                block: function block() {
	                  return function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(h("ul", {
	                      "class": {
	                        'filter-types': true
	                      }
	                    }, function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat($helpers.FILTER_TYPES.reduce(function (__each_nodes, filterType, $index) {
	                        return __each_nodes.concat(function () {
	                          var __jade_nodes = [];
	                          __jade_nodes = __jade_nodes.concat(h("li", {
	                            "on": {
	                              click: function click() {
	                                return $helpers.chooseFilterType(filterType.name);
	                              }
	                            },
	                            "class": Object.assign({}, {
	                              'filter-menu-item-selected': filterType.name === clause.filterType
	                            }, {
	                              'filter-menu-item': true
	                            })
	                          }, function () {
	                            var __jade_nodes = [];
	                            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                              "attrs": {
	                                icon: filterType.icon
	                              }
	                            }));
	                            __jade_nodes = __jade_nodes.concat(filterType.name);;
	                            return __jade_nodes;
	                          }.call(this).filter(Boolean)));;
	                          return __jade_nodes;
	                        }.call(this));
	                      }, []));;
	                      return __jade_nodes;
	                    }.call(this).filter(Boolean)));;
	                    return __jade_nodes;
	                  }.call(this);
	                }
	              }, "type", util.renameProperty(clause.value), util.getIconForPropertyType(clause.filterType)));;
	              return __jade_nodes;
	            }.call(this);
	          }
	        }, "", {
	          backButton: true
	        }));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "hook": {
	            postpatch: $helpers.updateRenderedSize
	          },
	          "class": {
	            'filter-chooser': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(clause.filterType == "string" ? function () {
	            var __jade_nodes = [];
	            var isLoading = $helpers.isLoading();
	            __jade_nodes = __jade_nodes.concat(jade_mixins['filter-operator-dropdown'].call(this));
	            __jade_nodes = __jade_nodes.concat(clause.filterOperator == "equals" || clause.filterOperator == "does not equal" ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'filter-string-input-wrapper': true,
	                  'filter-string-search': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                  "attrs": {
	                    icon: "search"
	                  }
	                }));
	                __jade_nodes = __jade_nodes.concat(h("input", {
	                  "props": {
	                    type: "text",
	                    placeholder: "Search",
	                    value: clause.filterSearch
	                  },
	                  "on": {
	                    input: function input(ev) {
	                      return $helpers.updateFilterSearch(ev.target.value);
	                    }
	                  },
	                  "class": {
	                    'filter-string-input': true
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "on": {
	                  scroll: $helpers.scrolledList
	                },
	                "class": {
	                  'screen-list-container': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(isLoading ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	                  return __jade_nodes;
	                }.call(this) : function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("ul", {
	                    "class": {
	                      'filter-string-equals-choices': true
	                    }
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['checkbox-select-all'].call(this, $helpers.allEqualsValuesSelected(), $helpers.toggleAllFilterValues));
	                    __jade_nodes = __jade_nodes.concat($helpers.getEqualsMatches().reduce(function (__each_nodes, value, $index) {
	                      return __each_nodes.concat(function () {
	                        var __jade_nodes = [];
	                        __jade_nodes = __jade_nodes.concat(jade_mixins['checkbox-item'].call(this, util.renamePropertyValue(value), value, clause.filterValue && clause.filterValue.indexOf(value) !== -1, $helpers.toggleStringEqualsValueSelected));;
	                        return __jade_nodes;
	                      }.call(this));
	                    }, []));;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : clause.filterOperator == "contains" || clause.filterOperator == "does not contain" ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['filter-string-input'].call(this));
	              __jade_nodes = __jade_nodes.concat(isLoading ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	                return __jade_nodes;
	              }.call(this) : function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "on": {
	                    scroll: $helpers.scrolledList
	                  },
	                  "class": {
	                    'screen-list-container': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("ul", {
	                    "class": {
	                      'filter-string-contains-choices': true
	                    }
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat($helpers.getContainsMatches().reduce(function (__each_nodes, value, $index) {
	                      return __each_nodes.concat(function () {
	                        var __jade_nodes = [];
	                        var formattedValue = util.renamePropertyValue(value);
	                        __jade_nodes = __jade_nodes.concat(h("li", {
	                          "on": {
	                            click: function click() {
	                              return $helpers.clickedContainsMatch(formattedValue);
	                            }
	                          },
	                          "class": {
	                            'string-contains-match': true
	                          }
	                        }, function () {
	                          var __jade_nodes = [];
	                          __jade_nodes = __jade_nodes.concat(formattedValue);;
	                          return __jade_nodes;
	                        }.call(this).filter(Boolean)));;
	                        return __jade_nodes;
	                      }.call(this));
	                    }, []));;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this) : clause.filterType == "number" ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['filter-operator-dropdown'].call(this));
	            __jade_nodes = __jade_nodes.concat(clause.filterOperator === "is between" ? function () {
	              var __jade_nodes = [];
	
	              var _ref = clause.filterValue || [null, null],
	                  _ref2 = _slicedToArray(_ref, 2),
	                  start = _ref2[0],
	                  end = _ref2[1];
	
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'filter-numdate': true,
	                  'filter-numdate-between': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['filter-number-input'].call(this, start, function (ev) {
	                  return $helpers.updateFilterValue([Number(ev.target.value), end]);
	                }, {
	                  autofocus: true,
	                  key: "num-start"
	                }));
	                __jade_nodes = __jade_nodes.concat(h("span", {
	                  "class": {
	                    'filter-conjunction': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat("and");;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['filter-number-input'].call(this, end, function (ev) {
	                  return $helpers.updateFilterValue([start, Number(ev.target.value)]);
	                }, {
	                  autofocus: false,
	                  key: "num-end"
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'filter-numdate': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['filter-number-input'].call(this, clause.filterValue, function (ev) {
	                  return $helpers.updateFilterValue(Number(ev.target.value));
	                }, {
	                  autofocus: true,
	                  key: "num-val: " + clause.filterOperator
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this) : clause.filterType == "datetime" ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['filter-operator-dropdown'].call(this));
	            __jade_nodes = __jade_nodes.concat(clause.filterOperator == "was on" || clause.filterOperator == "was between" ? function () {
	              var __jade_nodes = [];
	
	              var _ref3 = Array.isArray(clause.filterValue) ? clause.filterValue : [null, null],
	                  _ref4 = _slicedToArray(_ref3, 2),
	                  from = _ref4[0],
	                  to = _ref4[1];
	
	              ;
	              var isBetween = clause.filterOperator === "was between";
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'filter-numdate': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("irb-datepicker", {
	                  "attrs": {
	                    'max-data-history': $helpers.getMaxDataHistoryDays(),
	                    range: isBetween,
	                    preposition: "and"
	                  },
	                  "props": {
	                    value: isBetween ? {
	                      from: from, to: to
	                    } : clause.filterValue
	                  },
	                  "on": {
	                    change: function change(ev) {
	                      return $helpers.updateFilterValue(isBetween ? [ev.detail.from, ev.detail.to] : ev.detail);
	                    }
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : clause.filterOperator == "was in the" ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("ul", {
	                "class": {
	                  'screen-options-list': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat($helpers.TIME_RANGE_NAMES.reduce(function (__each_nodes, range, $index) {
	                  return __each_nodes.concat(function () {
	                    var __jade_nodes = [];
	                    var _$helpers$TIME_RANGE_ = $helpers.TIME_RANGE_VALUES[range],
	                        value = _$helpers$TIME_RANGE_.value,
	                        unit = _$helpers$TIME_RANGE_.unit;
	
	                    __jade_nodes = __jade_nodes.concat(h("li", {
	                      "on": {
	                        click: function click() {
	                          return $helpers.updateFilterValue(value, unit);
	                        }
	                      },
	                      "class": Object.assign({}, {
	                        'list-option-selected': value === clause.filterValue && unit === clause.filterDateUnit
	                      }, {
	                        'list-option': true
	                      })
	                    }, function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(h("div", {
	                        "class": {
	                          'option-label': true
	                        }
	                      }, [range || '']));;
	                      return __jade_nodes;
	                    }.call(this).filter(Boolean)));;
	                    return __jade_nodes;
	                  }.call(this));
	                }, []));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this) : clause.filterType == "boolean" ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'filter-radio-list': true,
	                'filter-boolean': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "on": {
	                  click: function click() {
	                    return $helpers.chooseFilterOperator("is true");
	                  }
	                },
	                "class": Object.assign({}, {
	                  'radio-selected': clause.filterOperator === "is true"
	                }, {
	                  'radio-button': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("True");;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "on": {
	                  click: function click() {
	                    return $helpers.chooseFilterOperator("is false");
	                  }
	                },
	                "class": Object.assign({}, {
	                  'radio-selected': clause.filterOperator === "is false"
	                }, {
	                  'radio-button': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("False");;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : clause.filterType == "list" ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'filter-radio-list': true,
	                'filter-list': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "on": {
	                  click: function click() {
	                    return $helpers.chooseFilterOperator("contains");
	                  }
	                },
	                "class": Object.assign({}, {
	                  'radio-selected': clause.filterOperator === "contains"
	                }, {
	                  'radio-button': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Contains");;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "on": {
	                  click: function click() {
	                    return $helpers.chooseFilterOperator("does not contain");
	                  }
	                },
	                "class": Object.assign({}, {
	                  'radio-selected': clause.filterOperator === "does not contain"
	                }, {
	                  'radio-button': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Does not contain");;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(jade_mixins['filter-string-input'].call(this));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat(jade_mixins['screen-footer-button'].call(this, "Add filter", {
	          onclick: $helpers.commitFilter
	        }));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Array" in locals ? locals.Array : typeof Array !== "undefined" ? Array : undefined, "Number" in locals ? locals.Number : typeof Number !== "undefined" ? Number : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "setTimeout" in locals ? locals.setTimeout : typeof setTimeout !== "undefined" ? setTimeout : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenPropertiesBase = __webpack_require__(304);
	
	var _util = __webpack_require__(8);
	
	var _builderScreenFilterPropertiesList = __webpack_require__(305);
	
	var _builderScreenFilterPropertiesList2 = _interopRequireDefault(_builderScreenFilterPropertiesList);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('builder-screen-filter-properties-list', function (_BuilderScreenPropert) {
	  _inherits(_class, _BuilderScreenPropert);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderScreenFilterPropertiesList2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          clickedProperty: function clickedProperty(ev, property) {
	            ev.stopPropagation();
	            _this2.app.updateRecentProperties(property);
	            _this2.updateStageClause({
	              filterType: property.type,
	              resourceType: property.resourceType,
	              value: property.name
	            });
	            _this2.nextScreen('builder-screen-filter-property');
	          }
	        })
	      };
	    }
	  }]);
	
	  return _class;
	}(_builderScreenPropertiesBase.BuilderScreenPropertiesBase));

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.BuilderScreenPropertiesBase = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenBase = __webpack_require__(300);
	
	var _clause = __webpack_require__(14);
	
	var _base = __webpack_require__(256);
	
	var _base2 = _interopRequireDefault(_base);
	
	var _util = __webpack_require__(8);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var BuilderScreenPropertiesBase = exports.BuilderScreenPropertiesBase = function (_BuilderScreenBase) {
	  _inherits(BuilderScreenPropertiesBase, _BuilderScreenBase);
	
	  function BuilderScreenPropertiesBase() {
	    _classCallCheck(this, BuilderScreenPropertiesBase);
	
	    return _possibleConstructorReturn(this, (BuilderScreenPropertiesBase.__proto__ || Object.getPrototypeOf(BuilderScreenPropertiesBase)).apply(this, arguments));
	  }
	
	  _createClass(BuilderScreenPropertiesBase, [{
	    key: 'filterToResourceType',
	    value: function filterToResourceType(type) {
	      return function (property) {
	        return type === _clause.ShowClause.RESOURCE_TYPE_ALL || property.resourceType === type;
	      };
	    }
	  }, {
	    key: 'getMatchedRecentProperties',
	    value: function getMatchedRecentProperties() {
	      // TODO: cassie match then filter
	      var resourceType = this.getSelectedResourceType();
	      var recentProperties = this.state.recentProperties.filter(function (property) {
	        return resourceType === _clause.Clause.RESOURCE_TYPE_ALL || property.resourceType === resourceType;
	      }).slice(0, 3);
	      return this.matchingItems(recentProperties, _util.renameProperty);
	    }
	  }, {
	    key: 'getProperties',
	    value: function getProperties() {
	      var resourceType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _clause.ShowClause.RESOURCE_TYPE_ALL;
	
	      var isLoading = this.isLoading();
	      var properties = (0, _util.sorted)(this.buildProgressiveList().filter(this.filterToResourceType(resourceType)), {
	        transform: function transform(prop) {
	          return ((0, _util.renameProperty)(prop.name) || String(prop.name)).toLowerCase();
	        }
	      });
	
	      if (this.prevIsLoading !== isLoading || this.numProperties !== properties.length) {
	        this.prevIsLoading = isLoading;
	        this.numProperties = properties.length;
	        if (resourceType === _clause.ShowClause.RESOURCE_TYPE_EVENTS) {
	          this.numEventProperties = properties.length;
	        }
	      }
	
	      var specialProps = [];
	      var isEventProperties = [_clause.Clause.RESOURCE_TYPE_ALL, _clause.Clause.RESOURCE_TYPE_EVENTS].includes(resourceType);
	      var isForGroupClause = this.app.getActiveStageClause() && this.app.getActiveStageClause().TYPE === _clause.GroupClause.TYPE;
	      if (isForGroupClause && isEventProperties) {
	        specialProps = specialProps.concat(_clause.GroupClause.EVENT_DATE);
	      }
	
	      return [].concat(_toConsumableArray(this.matchingItems(specialProps, _util.renameProperty)), _toConsumableArray(properties));
	    }
	  }, {
	    key: 'getEventPropertyCount',
	    value: function getEventPropertyCount() {
	      if (!this.eventPropertyCount) {
	        this.eventPropertyCount = this.getEventProperties().length;
	      }
	      var matchingItems = this.matchingItems(this.buildList(_clause.ShowClause.RESOURCE_TYPE_EVENTS), _util.renameProperty).length;
	      return Math.min(this.eventPropertyCount, matchingItems);
	    }
	  }, {
	    key: 'getPropertySections',
	    value: function getPropertySections() {
	      var resourceType = this.getSelectedResourceType();
	      var eventPropertiesLoaded = this.numEventProperties >= this.getEventPropertyCount();
	      var isPeopleQuery = this.state.report.sections.show.clauseResourceTypes() === _clause.Clause.RESOURCE_TYPE_PEOPLE;
	      var showPeople = eventPropertiesLoaded || isPeopleQuery || _clause.ShowClause.RESOURCE_TYPE_PEOPLE === resourceType;
	
	      var sections = [];
	
	      sections.push({
	        label: 'Recent Properties',
	        list: this.getMatchedRecentProperties()
	      });
	
	      if ([_clause.ShowClause.RESOURCE_TYPE_EVENTS, _clause.ShowClause.RESOURCE_TYPE_ALL].includes(resourceType) && !isPeopleQuery) {
	        sections.push({
	          label: 'Event properties',
	          list: this.getProperties(_clause.ShowClause.RESOURCE_TYPE_EVENTS)
	        });
	      }
	      if (showPeople && ([_clause.ShowClause.RESOURCE_TYPE_PEOPLE, _clause.ShowClause.RESOURCE_TYPE_ALL].includes(resourceType) || isPeopleQuery)) {
	        sections.push({
	          label: 'People properties',
	          list: this.getProperties(_clause.ShowClause.RESOURCE_TYPE_PEOPLE)
	        });
	      }
	
	      return sections;
	    }
	  }, {
	    key: 'getSelectedResourceType',
	    value: function getSelectedResourceType() {
	      var screen = this.app.getBuilderCurrentScreen();
	      return screen && screen.resourceType || _clause.Clause.RESOURCE_TYPE_ALL;
	    }
	  }, {
	    key: 'getRelevantBuilderEvents',
	    value: function getRelevantBuilderEvents() {
	      return this.app.getClauseValuesForType(_clause.ShowClause.TYPE);
	    }
	  }, {
	    key: 'isLoading',
	    value: function isLoading() {
	      var _this2 = this;
	
	      return this.getRelevantBuilderEvents().every(function (mpEvent) {
	        return _this2.state.topEventPropertiesByEvent[mpEvent.name] === _base2.default.LOADING;
	      });
	    }
	  }, {
	    key: 'getEventProperties',
	    value: function getEventProperties() {
	      var _this3 = this;
	
	      var properties = this.getRelevantBuilderEvents().reduce(function (props, mpEvent) {
	        var eventProps = _this3.state.topEventPropertiesByEvent[mpEvent.name];
	        if ([_clause.ShowClause.TOP_EVENTS.name, _clause.ShowClause.ALL_EVENTS.name].includes(mpEvent.name)) {
	          return props.concat(_this3.state.topEventProperties);
	        } else if (!eventProps) {
	          _this3.app.fetchTopPropertiesForEvent(mpEvent.name);
	        } else if (eventProps !== _base2.default.LOADING) {
	          return props.concat(eventProps);
	        }
	        return props;
	      }, []);
	
	      return (0, _util.unique)(properties, {
	        hash: function hash(prop) {
	          return prop.name + ':' + prop.type + ':' + prop.resourceType;
	        }
	      });
	    }
	  }, {
	    key: 'getPeopleProperties',
	    value: function getPeopleProperties() {
	      return this.state.topPeopleProperties;
	    }
	  }, {
	    key: 'buildList',
	    value: function buildList(resourceType) {
	      var properties = [];
	
	      if (!resourceType) {
	        if (this.state.report.sections.show.clauseResourceTypes() === _clause.Clause.RESOURCE_TYPE_PEOPLE) {
	          resourceType = _clause.Clause.RESOURCE_TYPE_PEOPLE;
	        } else {
	          resourceType = this.getSelectedResourceType();
	        }
	      }
	
	      if ([_clause.Clause.RESOURCE_TYPE_ALL, _clause.Clause.RESOURCE_TYPE_EVENTS].includes(resourceType)) {
	        properties = properties.concat(this.getEventProperties());
	      }
	
	      if ([_clause.Clause.RESOURCE_TYPE_ALL, _clause.Clause.RESOURCE_TYPE_PEOPLE].includes(resourceType)) {
	        properties = properties.concat(this.getPeopleProperties());
	      }
	
	      return this.matchingItems(properties, _util.renameProperty);
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this4 = this;
	
	      return {
	        helpers: (0, _util.extend)(_get(BuilderScreenPropertiesBase.prototype.__proto__ || Object.getPrototypeOf(BuilderScreenPropertiesBase.prototype), 'config', this).helpers, {
	          RESOURCE_TYPES: _clause.Clause.RESOURCE_TYPES,
	          clickedResourceType: function clickedResourceType(resourceType) {
	            return _this4.app.updateBuilderCurrentScreen({ resourceType: resourceType });
	          },
	          getSelectedResourceType: function getSelectedResourceType() {
	            return _this4.getSelectedResourceType();
	          },
	          getProperties: function getProperties() {
	            return _this4.getProperties();
	          },
	          getPropertySections: function getPropertySections() {
	            return _this4.getPropertySections();
	          }
	        })
	      };
	    }
	  }]);

	  return BuilderScreenPropertiesBase;
	}(_builderScreenBase.BuilderScreenBase);

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Object, builderPane, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    return {
	      value: h("div", {
	        "hook": {
	          postpatch: $helpers.updateRenderedSize
	        },
	        "class": {
	          'builder-screen': true,
	          'properties': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(jade_mixins['screen-title'].call(this, "Filter by a property", {
	          backButton: $helpers.screenIdx() > 1
	        }));
	        __jade_nodes = __jade_nodes.concat(jade_mixins['property-screen-body'].call(this, {
	          resourceTypes: $helpers.RESOURCE_TYPES,
	          selectedResourceType: $helpers.getSelectedResourceType(),
	          clickedResourceType: $helpers.clickedResourceType,
	          propertySections: $helpers.getPropertySections(),
	          clickedProperty: $helpers.clickedProperty,
	          scrolledList: $helpers.scrolledList,
	          loading: $helpers.isLoading()
	        }));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, report) {
	    var h = __webpack_require__(232).h;
	    var filterClauses = report.sections.filter.clauses;
	    return {
	      value: h("div", {
	        "class": {
	          'builder-filter-container': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'builder-section': true,
	            'filter-determiner-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(filterClauses.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedDeterminerToggle
	              },
	              "class": {
	                'filter-determiner-toggle': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("matching");
	              __jade_nodes = __jade_nodes.concat(h("span", {
	                "class": {
	                  'filter-determiner-word': true
	                }
	              }, [report.sections.filter.determiner || '']));
	              __jade_nodes = __jade_nodes.concat(" of the following:");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'builder-section': true,
	            'builder-filter': true,
	            'irb-learn-disabled': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(!filterClauses.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'clause': true,
	                'filter': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'control-container': true
	                }
	              }, [$component.child('builder-filter-add-control') || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(filterClauses.reduce(function (__each_nodes, clause, clauseIndex) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(clauseIndex ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'clause-language': true,
	                      'preposition': true
	                    }
	                  }, [$helpers.getQueryDelimiter() || '']));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'clause': true,
	                    'filter': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'control-container': true
	                    }
	                  }, [$component.child('builder-filter-edit-control', {
	                    attrs: {
	                      'clause-index': clauseIndex
	                    }
	                  }) || '']));
	                  __jade_nodes = __jade_nodes.concat(clauseIndex == filterClauses.length - 1 ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat($helpers.isAddingClause() ? function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(h("div", {
	                        "class": {
	                          'clause-language': true,
	                          'preposition': true
	                        }
	                      }, function () {
	                        var __jade_nodes = [];
	                        __jade_nodes = __jade_nodes.concat("and");;
	                        return __jade_nodes;
	                      }.call(this).filter(Boolean)));;
	                      return __jade_nodes;
	                    }.call(this) : undefined);;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'control-container': true
	              }
	            }, [$component.child('builder-filter-add-control') || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 307 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 308 */,
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _util = __webpack_require__(8);
	
	var _editControl = __webpack_require__(291);
	
	var _clause = __webpack_require__(14);
	
	__webpack_require__(310);
	
	__webpack_require__(312);
	
	__webpack_require__(314);
	
	var _index = __webpack_require__(318);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(319);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('query-builder-group', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        helpers: {
	          moveClause: function moveClause(clauseIndex, offset) {
	            return _this2.app.moveClause('group', clauseIndex, offset);
	          },
	          removeClause: function removeClause(index) {
	            return _this2.app.removeClause('group', index);
	          }
	        }
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));
	
	document.registerElement('builder-group-edit-control', function (_EditControl) {
	  _inherits(_class2, _EditControl);
	
	  function _class2() {
	    _classCallCheck(this, _class2);
	
	    return _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).apply(this, arguments));
	  }
	
	  _createClass(_class2, [{
	    key: 'getLabel',
	    value: function getLabel() {
	      var clause = this.getClause();
	      return clause && clause.value && (0, _util.renameProperty)(clause.value);
	    }
	  }, {
	    key: 'getSelectionAttrs',
	    value: function getSelectionAttrs() {
	      var clause = this.getClause();
	      return {
	        source: clause.resourceType === _clause.ShowClause.RESOURCE_TYPE_PEOPLE ? 'people' : 'events',
	        selected: clause.value
	      };
	    }
	  }, {
	    key: 'labelPrefixComponent',
	    value: function labelPrefixComponent() {
	      var clause = this.getClause();
	      return {
	        componentName: 'property-type-prefix',
	        attrs: {
	          'clause-index': this.clauseIndex,
	          'property-type': clause.typeCast || clause.propertyType,
	          'disabled-for-reserved-prop': _clause.GroupClause.EVENT_DATE.name === clause.value
	        }
	      };
	    }
	  }, {
	    key: 'openPane',
	    value: function openPane() {
	      this.app.startBuilderOnScreen('builder-screen-group-properties');
	    }
	  }, {
	    key: 'section',
	    get: function get() {
	      return _clause.GroupClause.TYPE;
	    }
	  }]);
	
	  return _class2;
	}(_editControl.EditControl));

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenBase = __webpack_require__(300);
	
	var _clause = __webpack_require__(14);
	
	var _util = __webpack_require__(8);
	
	var _builderScreenGroupDatetimeOptions = __webpack_require__(311);
	
	var _builderScreenGroupDatetimeOptions2 = _interopRequireDefault(_builderScreenGroupDatetimeOptions);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TIME_UNIT_LIST = _clause.TimeClause.TIME_UNIT_LIST.map(function (name) {
	  return { name: (0, _util.capitalize)(name), value: name };
	});
	
	document.registerElement('builder-screen-group-datetime-options', function (_BuilderScreenBase) {
	  _inherits(_class, _BuilderScreenBase);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderScreenGroupDatetimeOptions2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          availableUnits: function availableUnits() {
	            return _this2.matchingItems(TIME_UNIT_LIST);
	          },
	          clickedUnit: function clickedUnit(unit) {
	            return _this2.updateAndCommitStageClause({ unit: unit.value, editing: false });
	          },
	          getGroupClause: function getGroupClause() {
	            return _this2.app.getActiveStageClause() || {};
	          }
	        })
	      };
	    }
	  }]);
	
	  return _class;
	}(_builderScreenBase.BuilderScreenBase));

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Object, builderPane, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    var clause = $helpers.getGroupClause();
	    var selectedUnit = clause.unit;
	    return {
	      value: h("div", {
	        "class": {
	          'builder-screen': true,
	          'datetime-options': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        var title = util.renameProperty(clause.value) + "'s time unit";
	        __jade_nodes = __jade_nodes.concat(jade_mixins['screen-title'].call(this, title, {
	          backButton: true
	        }));
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "hook": {
	            postpatch: $helpers.updateRenderedSize
	          },
	          "class": {
	            'screen-options-list': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var units = $helpers.availableUnits();
	          __jade_nodes = __jade_nodes.concat(units.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(units.reduce(function (__each_nodes, unit, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var isSelected = unit.name.toLowerCase() === selectedUnit;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: !isSelected ? function () {
	                      return $helpers.clickedUnit(unit);
	                    } : null
	                  },
	                  "class": Object.assign({}, {
	                    'list-option-selected': isSelected
	                  }, {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, unit.name, {
	                    noIcon: true,
	                    matches: unit.matches
	                  }));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = []; /*  TODO: pull this out into a mixin for all other no results */
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenPropertiesBase = __webpack_require__(304);
	
	var _util = __webpack_require__(8);
	
	var _clause = __webpack_require__(14);
	
	var _builderScreenGroupProperties = __webpack_require__(313);
	
	var _builderScreenGroupProperties2 = _interopRequireDefault(_builderScreenGroupProperties);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('builder-screen-group-properties', function (_BuilderScreenPropert) {
	  _inherits(_class, _BuilderScreenPropert);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderScreenGroupProperties2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          clickedProperty: function clickedProperty(ev, property) {
	            _this2.app.updateRecentProperties(property);
	            var newClause = {
	              propertyType: property.type,
	              resourceType: property.resourceType,
	              typeCast: null,
	              value: property.name
	            };
	            if (property.type === 'datetime') {
	              var stagedClause = _this2.app.getActiveStageClause();
	              newClause.editing = true;
	              newClause.unit = stagedClause.value === property.name ? stagedClause.unit : null;
	              _this2.updateStageClause(newClause);
	              _this2.nextScreen('builder-screen-group-datetime-options');
	            } else {
	              _this2.updateAndCommitStageClause(newClause);
	            }
	          },
	          conditionalCaret: function conditionalCaret(property, isSelected) {
	            return isSelected && property.type === 'datetime';
	          },
	          isEventsOnlyQuery: function isEventsOnlyQuery() {
	            return _this2.state.report.sections.show.clauseResourceTypes() === _clause.Clause.RESOURCE_TYPE_EVENTS;
	          }
	        })
	      };
	    }
	  }]);
	
	  return _class;
	}(_builderScreenPropertiesBase.BuilderScreenPropertiesBase));

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, builderPane, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    var isEventsOnlyQuery = $helpers.isEventsOnlyQuery();
	    var resourceType = $helpers.getSelectedResourceType();
	    return {
	      value: h("div", {
	        "hook": {
	          postpatch: $helpers.updateRenderedSize
	        },
	        "class": {
	          'builder-screen': true,
	          'properties': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(jade_mixins['screen-title'].call(this, "Group by a " + (isEventsOnlyQuery ? "\n          " : "\n          people ") + " property", {
	          backButton: $helpers.screenIdx() >= 1
	        }));
	        __jade_nodes = __jade_nodes.concat(jade_mixins['property-screen-body'].call(this, {
	          resourceTypes: isEventsOnlyQuery && $helpers.RESOURCE_TYPES,
	          selectedResourceType: $helpers.getSelectedResourceType(),
	          clickedResourceType: $helpers.clickedResourceType,
	          propertySections: $helpers.getPropertySections(),
	          clickedProperty: $helpers.clickedProperty,
	          scrolledList: $helpers.scrolledList,
	          loading: $helpers.isLoading(),
	          selected: $component.getAttribute("selected"),
	          source: $component.getAttribute("source"),
	          conditionalCaret: $helpers.conditionalCaret
	        }));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _util = __webpack_require__(8);
	
	var _clause = __webpack_require__(14);
	
	var _index = __webpack_require__(315);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(316);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('property-type-prefix', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'isReservedPropertyType',
	    value: function isReservedPropertyType() {
	      return this.isAttributeEnabled('disabled-for-reserved-prop');
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        helpers: {
	          attrsForTypecast: function attrsForTypecast() {
	            return {
	              'clause-index': _this2.clauseIndex,
	              'section': _clause.GroupClause.TYPE
	            };
	          },
	          clickedIcon: function clickedIcon(ev) {
	            if (!_this2.isReservedPropertyType()) {
	              ev.stopPropagation();
	              if (_this2.state.builderPane.isEditingTypecast) {
	                _this2.app.stopBuildingQuery();
	                _this2.app.updateBuilder({ isEditingTypecast: false });
	              } else {
	                _this2.app.resetBuilder();
	                _this2.app.stopEditingClause();
	                _this2.app.startEditingClause(_clause.GroupClause.TYPE, _this2.clauseIndex);
	                _this2.app.updateBuilder({ isEditingTypecast: true });
	              }
	            }
	          },
	          typeIcon: function typeIcon() {
	            if (_this2.isReservedPropertyType()) {
	              return 'star-top-events';
	            } else {
	              return (0, _util.getIconForPropertyType)(_this2.getAttribute('property-type'));
	            }
	          }
	        }
	      };
	    }
	  }, {
	    key: 'clauseIndex',
	    get: function get() {
	      return Number(this.getAttribute('clause-index'));
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers) {
	    var h = __webpack_require__(232).h;
	    var icon = $helpers.typeIcon();
	    return {
	      value: h("div", {
	        "on": {
	          click: $helpers.clickedIcon
	        },
	        "class": {
	          'property-prefix-icon': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(icon ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: icon
	            }
	          }));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'typecast-pane': true
	            }
	          }, [$component.child('typecast-pane', {
	            attrs: $helpers.attrsForTypecast()
	          }) || '']));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 316 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 317 */,
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, builderPane, report, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    var groupClauses = report.sections.group.clauses;
	    var lenGroupClauses = groupClauses.length;
	    return {
	      value: h("div", {
	        "class": {
	          'builder-section': true,
	          'builder-group': true,
	          'irb-learn-disabled': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(groupClauses.reduce(function (__each_nodes, clause, clauseIdx) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            var reorderRight = clauseIdx < lenGroupClauses - 1;
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'clause-container': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'clause-language': true,
	                  'preposition': true
	                }
	              }, [clauseIdx ? 'and' : 'by' || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'clause-container': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": Object.assign({}, {
	                  hasRightCaret: reorderRight
	                }, {
	                  'clause-header': true,
	                  'group': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(clauseIdx ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("button", {
	                    "on": {
	                      click: function click() {
	                        return $helpers.moveClause(clauseIdx, -1);
	                      }
	                    },
	                    "class": {
	                      'reorder': true,
	                      'reorder-left': true
	                    }
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this, {
	                      direction: 'left'
	                    }));;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'header-label': true,
	                    'group': true
	                  }
	                }, [(clause.resourceType === 'events' ? 'Event' : 'People') + " Property" || '']));
	                __jade_nodes = __jade_nodes.concat(reorderRight ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("button", {
	                    "on": {
	                      click: function click() {
	                        return $helpers.moveClause(clauseIdx, 1);
	                      }
	                    },
	                    "class": {
	                      'reorder': true,
	                      'reorder-right': true
	                    }
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this, {
	                      direction: 'right'
	                    }));;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("button", {
	                "on": {
	                  click: function click() {
	                    return $helpers.removeClause(clauseIdx);
	                  }
	                },
	                "class": {
	                  'remove': true,
	                  'group': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                  "attrs": {
	                    icon: 'x'
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'clause-body': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'control-container': true
	                  }
	                }, [$component.child('builder-group-edit-control', {
	                  attrs: {
	                    'clause-index': clauseIdx
	                  }
	                }) || '']));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 319 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 320 */,
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	__webpack_require__(322);
	
	__webpack_require__(324);
	
	var _index = __webpack_require__(326);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(327);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global requestAnimationFrame */
	
	document.registerElement('builder-pane', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        helpers: {
	          getSizeStyle: function getSizeStyle() {
	            return _this2.state.builderPane && _this2.state.builderPane.sizeStyle || _this2.app.defaultBuilderState.sizeStyle;
	          },
	          screenAttrs: function screenAttrs(screenIdx) {
	            return {
	              'screen-index': screenIdx,
	              'selected': _this2.getAttribute('selected'),
	              'source': _this2.getAttribute('source')
	            };
	          }
	        }
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _CONTEXT_OPTIONS;
	
	var _builderScreenBase = __webpack_require__(300);
	
	var _clause = __webpack_require__(14);
	
	var _util = __webpack_require__(8);
	
	var _builderScreenContextual = __webpack_require__(323);
	
	var _builderScreenContextual2 = _interopRequireDefault(_builderScreenContextual);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var CONTEXT_OPTIONS = (_CONTEXT_OPTIONS = {}, _defineProperty(_CONTEXT_OPTIONS, _clause.ShowClause.RESOURCE_TYPE_EVENTS, [{ name: 'Group by a property', clauseType: _clause.GroupClause.TYPE }, { name: 'Compare to an event', clauseType: _clause.ShowClause.TYPE }]), _defineProperty(_CONTEXT_OPTIONS, _clause.ShowClause.RESOURCE_TYPE_PEOPLE, [{ name: 'Group by a people property', clauseType: _clause.GroupClause.TYPE }, { name: 'Compare to a people property', clauseType: _clause.ShowClause.TYPE }]), _CONTEXT_OPTIONS);
	
	document.registerElement('builder-screen-contextual', function (_BuilderScreenBase) {
	  _inherits(_class, _BuilderScreenBase);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'buildList',
	    value: function buildList() {
	      switch (this.state.report.sections.show.clauseResourceTypes()) {
	        case _clause.ShowClause.RESOURCE_TYPE_EVENTS:
	          return [{
	            label: 'Group by an event property',
	            list: this.allMatchingProperties(_clause.Clause.RESOURCE_TYPE_EVENTS),
	            resourceType: 'property'
	          }, {
	            label: 'Group by a people property',
	            list: this.allMatchingProperties(_clause.Clause.RESOURCE_TYPE_PEOPLE),
	            resourceType: 'property'
	          }, {
	            label: 'Compare to an event',
	            list: this.allMatchingEvents(),
	            resourceType: 'event'
	          }];
	        case _clause.ShowClause.RESOURCE_TYPE_PEOPLE:
	          return [{
	            label: 'Group by a people property',
	            list: this.allMatchingProperties(_clause.Clause.RESOURCE_TYPE_PEOPLE),
	            resourceType: 'property'
	          }];
	        default:
	          return [];
	      }
	    }
	  }, {
	    key: 'buildProgressiveList',
	    value: function buildProgressiveList() {
	      var listSize = this.progressiveListSize;
	      var fullList = this.buildList();
	      var outList = [];
	      while (listSize > 0 && fullList.length) {
	        var source = fullList.shift();
	        outList.push((0, _util.extend)(source, { list: source.list.slice(0, listSize) }));
	        listSize -= source.list.length;
	      }
	      return outList;
	    }
	  }, {
	    key: 'progressiveListLength',
	    value: function progressiveListLength() {
	      return this.buildList().reduce(function (sum, source) {
	        return sum + source.list.length;
	      }, 0);
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderScreenContextual2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          clickedOption: function clickedOption(option) {
	            var clauseType = option.clauseType;
	
	            switch (clauseType) {
	              case _clause.ShowClause.TYPE:
	                {
	                  var resourceType = _this2.state.report.sections.show.clauseResourceTypes();
	                  _this2.app.stopEditingClause();
	                  _this2.app.startAddingClause(clauseType, { resourceType: resourceType });
	                  _this2.nextScreen('builder-screen-' + resourceType);
	                  break;
	                }
	              case _clause.GroupClause.TYPE:
	                {
	                  _this2.app.stopEditingClause();
	                  _this2.app.startAddingClause(clauseType);
	                  _this2.nextScreen('builder-screen-group-properties');
	                  var isPeopleOnlyQuery = _this2.state.report.sections.show.isPeopleOnlyQuery();
	                  _this2.app.updateBuilderCurrentScreen({
	                    resourceType: isPeopleOnlyQuery ? _clause.ShowClause.RESOURCE_TYPE_PEOPLE : _clause.ShowClause.RESOURCE_TYPE_ALL
	                  });
	                  break;
	                }
	            }
	          },
	          getContextOptions: function getContextOptions() {
	            return CONTEXT_OPTIONS[_this2.state.report.sections.show.clauseResourceTypes()] || [];
	          },
	          getContextLists: function getContextLists() {
	            return _this2.buildProgressiveList();
	          },
	          clickedProperty: function clickedProperty(ev, property) {
	            _this2.app.startAddingClause('group');
	            var newClause = {
	              propertyType: property.type,
	              resourceType: property.resourceType,
	              value: property.name
	            };
	            if (property.type === 'datetime') {
	              newClause.editing = true;
	              _this2.updateStageClause(newClause);
	              _this2.nextScreen('builder-screen-group-datetime-options');
	            } else {
	              _this2.updateAndCommitStageClause(newClause);
	            }
	          },
	          clickedEvent: function clickedEvent(value) {
	            _this2.app.startAddingClause('show');
	            _this2.updateStageClause({ value: value }, { shouldCommit: true, shouldStopEditing: true });
	          }
	        })
	      };
	    }
	  }]);
	
	  return _class;
	}(_builderScreenBase.BuilderScreenBase));

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Object, builderPane, contextFilter, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    return {
	      value: h("div", {
	        "class": {
	          'builder-screen': true,
	          'sources': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "hook": {
	            postpatch: $helpers.updateRenderedSize
	          },
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.learnClasses({
	            disabledSteps: ["compare-event", "group-by"],
	            disabledExceptChildren: ["last", "first"]
	          }), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(contextFilter ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['filtered-options-lists'].call(this, $helpers.getContextLists()));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat($helpers.getContextOptions().reduce(function (__each_nodes, option, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['generic-options-list-item'].call(this, option.name, {
	                  class: "contextual-menu-option",
	                  onclick: function onclick() {
	                    return $helpers.clickedOption(option);
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "contextFilter" in locals ? locals.contextFilter : typeof contextFilter !== "undefined" ? contextFilter : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenBase = __webpack_require__(300);
	
	var _clause = __webpack_require__(14);
	
	var _util = __webpack_require__(8);
	
	var _builderScreenSources = __webpack_require__(325);
	
	var _builderScreenSources2 = _interopRequireDefault(_builderScreenSources);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SOURCES = [{ name: 'Events', resourceType: 'events' }, { name: 'People', resourceType: 'people' }];
	
	document.registerElement('builder-screen-sources', function (_BuilderScreenBase) {
	  _inherits(_class, _BuilderScreenBase);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'buildList',
	    value: function buildList() {
	      return [{
	        label: 'Events',
	        list: this.allMatchingEvents(),
	        resourceType: 'event',
	        itemOptions: {
	          clickedEvent: this.config.helpers.clickedEvent,
	          clickedEventProperties: this.config.helpers.clickedEventProperties,
	          showPill: true
	        }
	      }, {
	        label: 'People properties',
	        list: this.allMatchingProperties(_clause.Clause.RESOURCE_TYPE_PEOPLE),
	        resourceType: 'property'
	      }];
	    }
	  }, {
	    key: 'buildProgressiveList',
	    value: function buildProgressiveList() {
	      var listSize = this.progressiveListSize;
	      var fullList = this.buildList();
	      var outList = [];
	      while (listSize > 0 && fullList.length) {
	        var source = fullList.shift();
	        outList.push((0, _util.extend)(source, { list: source.list.slice(0, listSize) }));
	        listSize -= source.list.length;
	      }
	      return outList;
	    }
	  }, {
	    key: 'progressiveListLength',
	    value: function progressiveListLength() {
	      return this.buildList().reduce(function (sum, source) {
	        return sum + source.list.length;
	      }, 0);
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderScreenSources2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          getSources: function getSources() {
	            _this2.updateRenderedSizeOnNextFrame();
	            return SOURCES;
	          },
	
	          clickedSource: function clickedSource(source) {
	            var resourceType = source.resourceType;
	
	            _this2.updateStageClause({ resourceType: resourceType, value: {} });
	            _this2.nextScreen('builder-screen-' + resourceType);
	          },
	          getFilteredLists: function getFilteredLists() {
	            _this2.updateRenderedSizeOnNextFrame();
	            return _this2.buildProgressiveList();
	          }
	        })
	      };
	    }
	  }]);
	
	  return _class;
	}(_builderScreenBase.BuilderScreenBase));

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Object, builderPane, contextFilter, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    return {
	      value: h("div", {
	        "class": {
	          'builder-screen': true,
	          'sources': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "hook": {
	            postpatch: $helpers.updateRenderedSize
	          },
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.learnClasses({
	            disabledExceptChildren: ["first"]
	          }), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(contextFilter ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['filtered-options-lists'].call(this, $helpers.getFilteredLists()));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat($helpers.getSources().reduce(function (__each_nodes, source, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['generic-options-list-item'].call(this, source.name, {
	                  onclick: function onclick() {
	                    return $helpers.clickedSource(source);
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "contextFilter" in locals ? locals.contextFilter : typeof contextFilter !== "undefined" ? contextFilter : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, builderPane) {
	    var h = __webpack_require__(232).h;
	    return {
	      value: h("div", {
	        "style": builderPane.sizeStyle,
	        "class": {
	          'builder-pane': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat($component.isAttributeEnabled("open") ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "style": builderPane.offsetStyle,
	            "class": Object.assign({}, {
	              remove: {
	                delayRemove: 400
	              }
	            }, {
	              'builder-pane-offset': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(builderPane.screens.reduce(function (__each_nodes, screen, screenIdx) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat($component.child(screen.componentName, {
	                  attrs: $helpers.screenAttrs(screenIdx)
	                }));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 327 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 328 */,
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _util = __webpack_require__(8);
	
	var _editControl = __webpack_require__(291);
	
	var _clause = __webpack_require__(14);
	
	__webpack_require__(330);
	
	__webpack_require__(333);
	
	__webpack_require__(335);
	
	__webpack_require__(337);
	
	__webpack_require__(339);
	
	var _index = __webpack_require__(341);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(342);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('query-builder-show', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        helpers: {
	          showSourceForNumericProperties: function showSourceForNumericProperties() {
	            return _this2.state.report.sections.show.clauseResourceTypes() !== _clause.ShowClause.RESOURCE_TYPE_PEOPLE;
	          },
	          mouseEntered: function mouseEntered(ev, idx) {
	            var clauseContainer = ev.target;
	            var clauseWidth = clauseContainer.offsetWidth;
	            var headerWidth = clauseContainer.querySelector('.header-label').offsetWidth;
	            var buttonWidth = 12;
	            _this2.app.updateShowClauseButtonPosition(idx, headerWidth + buttonWidth > clauseWidth);
	          }
	        }
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));
	
	document.registerElement('builder-show-edit-control', function (_EditControl) {
	  _inherits(_class2, _EditControl);
	
	  function _class2() {
	    _classCallCheck(this, _class2);
	
	    return _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).apply(this, arguments));
	  }
	
	  _createClass(_class2, [{
	    key: 'getLabel',
	    value: function getLabel() {
	      var clause = this.getClause();
	      if (clause.resourceType === _clause.ShowClause.RESOURCE_TYPE_PEOPLE) {
	        return (0, _util.renameProperty)(clause.property ? clause.property.name : clause.value.name) || '';
	      }
	      return (0, _util.renameEvent)(clause.value.name);
	    }
	  }, {
	    key: 'getSelectionAttrs',
	    value: function getSelectionAttrs() {
	      var clause = this.getClause();
	      if (clause.resourceType === _clause.ShowClause.RESOURCE_TYPE_PEOPLE) {
	        return {
	          source: 'people',
	          selected: clause.property ? clause.property.name : clause.value.name
	        };
	      } else {
	        return {
	          source: 'events',
	          selected: clause.value.name
	        };
	      }
	    }
	  }, {
	    key: 'isPaneOpen',
	    value: function isPaneOpen() {
	      return _get(_class2.prototype.__proto__ || Object.getPrototypeOf(_class2.prototype), 'isPaneOpen', this).call(this) && !this.state.isEditingNumericProperty;
	    }
	  }, {
	    key: 'isRemovable',
	    value: function isRemovable() {
	      return this.app.getClausesForType(this.section).length > 1;
	    }
	  }, {
	    key: 'openPane',
	    value: function openPane() {
	      var showClauses = this.app.getClausesForType(this.section);
	      var startingScreen = showClauses.length > 1 ? showClauses[0].resourceType : 'sources';
	      this.app.startBuilderOnScreen('builder-screen-' + startingScreen);
	      this.app.update({ isEditingNumericProperty: false });
	    }
	  }, {
	    key: 'section',
	    get: function get() {
	      return _clause.ShowClause.TYPE;
	    }
	  }]);
	
	  return _class2;
	}(_editControl.EditControl));
	
	document.registerElement('builder-numeric-property-edit-control', function (_EditControl2) {
	  _inherits(_class3, _EditControl2);
	
	  function _class3() {
	    _classCallCheck(this, _class3);
	
	    return _possibleConstructorReturn(this, (_class3.__proto__ || Object.getPrototypeOf(_class3)).apply(this, arguments));
	  }
	
	  _createClass(_class3, [{
	    key: 'getLabel',
	    value: function getLabel() {
	      var clause = this.getClause();
	      return clause && clause.property ? (0, _util.renameProperty)(clause.property.name) : '';
	    }
	  }, {
	    key: 'getSelectionAttrs',
	    value: function getSelectionAttrs() {
	      var clause = this.getClause();
	      return {
	        source: clause.resourceType === _clause.ShowClause.RESOURCE_TYPE_PEOPLE ? 'people' : 'events',
	        selected: clause.property.name
	      };
	    }
	  }, {
	    key: 'isPaneOpen',
	    value: function isPaneOpen() {
	      return _get(_class3.prototype.__proto__ || Object.getPrototypeOf(_class3.prototype), 'isPaneOpen', this).call(this) && this.state.isEditingNumericProperty;
	    }
	  }, {
	    key: 'openPane',
	    value: function openPane() {
	      this.app.startBuilderOnScreen('builder-screen-numeric-properties');
	      this.app.update({ isEditingNumericProperty: true });
	    }
	  }, {
	    key: 'remove',
	    value: function remove() {
	      this.app.updateClause(this.section, this.clauseIndex, { property: null });
	    }
	  }, {
	    key: 'section',
	    get: function get() {
	      return _clause.ShowClause.TYPE;
	    }
	  }]);
	
	  return _class3;
	}(_editControl.EditControl));

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenNumericPropertiesBase = __webpack_require__(331);
	
	var _base = __webpack_require__(256);
	
	var _base2 = _interopRequireDefault(_base);
	
	var _clause = __webpack_require__(14);
	
	var _util = __webpack_require__(8);
	
	var _builderScreenPeople = __webpack_require__(332);
	
	var _builderScreenPeople2 = _interopRequireDefault(_builderScreenPeople);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('builder-screen-people', function (_BuilderScreenNumeric) {
	  _inherits(_class, _BuilderScreenNumeric);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'isLoading',
	    value: function isLoading() {
	      return this.state.topPeopleProperties === _base2.default.LOADING;
	    }
	  }, {
	    key: 'buildList',
	    value: function buildList() {
	      return this.filterNonNumericProperties(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'buildList', this).call(this, _clause.ShowClause.RESOURCE_TYPE_PEOPLE));
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderScreenPeople2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          clickedSpecialOptions: function clickedSpecialOptions(ev, value) {
	            _this2.updateAndCommitStageClause({ value: value, property: null });
	          },
	          getSpecialOptions: function getSpecialOptions() {
	            return [(0, _util.extend)(_clause.ShowClause.ALL_PEOPLE, { icon: 'profile' })];
	          }
	        })
	      };
	    }
	  }]);
	
	  return _class;
	}(_builderScreenNumericPropertiesBase.BuilderScreenNumericPropertiesBase));

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.BuilderScreenNumericPropertiesBase = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenPropertiesBase = __webpack_require__(304);
	
	var _util = __webpack_require__(8);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var BuilderScreenNumericPropertiesBase = exports.BuilderScreenNumericPropertiesBase = function (_BuilderScreenPropert) {
	  _inherits(BuilderScreenNumericPropertiesBase, _BuilderScreenPropert);
	
	  function BuilderScreenNumericPropertiesBase() {
	    _classCallCheck(this, BuilderScreenNumericPropertiesBase);
	
	    return _possibleConstructorReturn(this, (BuilderScreenNumericPropertiesBase.__proto__ || Object.getPrototypeOf(BuilderScreenNumericPropertiesBase)).apply(this, arguments));
	  }
	
	  _createClass(BuilderScreenNumericPropertiesBase, [{
	    key: 'isShowingNonNumericProperties',
	    value: function isShowingNonNumericProperties() {
	      var screen = this.app.getBuilderCurrentScreen();
	      return screen && !!screen.showingNonNumericProperties;
	    }
	  }, {
	    key: 'filterNonNumericProperties',
	    value: function filterNonNumericProperties(properties) {
	      if (this.isShowingNonNumericProperties()) {
	        return properties;
	      } else {
	        return properties.filter(function (prop) {
	          return prop.type === 'number';
	        });
	      }
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        helpers: (0, _util.extend)(_get(BuilderScreenNumericPropertiesBase.prototype.__proto__ || Object.getPrototypeOf(BuilderScreenNumericPropertiesBase.prototype), 'config', this).helpers, {
	          toggleNonNumericProperties: function toggleNonNumericProperties() {
	            return _this2.app.updateBuilderCurrentScreen({
	              showingNonNumericProperties: !_this2.isShowingNonNumericProperties()
	            });
	          }
	        })
	      };
	    }
	  }]);

	  return BuilderScreenNumericPropertiesBase;
	}(_builderScreenPropertiesBase.BuilderScreenPropertiesBase);

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, builderPane, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    var loading = $helpers.isLoading();
	    return {
	      value: h("div", {
	        "class": {
	          'builder-screen': true,
	          'properties': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(jade_mixins['screen-title'].call(this, "People", {
	          backButton: !!$helpers.screenIdx()
	        }));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "hook": {
	            postpatch: $helpers.updateRenderedSize
	          },
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.learnClasses({
	            disabledExceptChildren: ["first"]
	          }), {
	            'screen-list-container': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, $helpers.getSpecialOptions(), {
	            clickedProperty: $helpers.clickedSpecialOptions,
	            selected: $component.getAttribute("selected"),
	            source: $component.getAttribute("source")
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, $helpers.getProperties(), {
	            clickedProperty: $helpers.clickedProperty,
	            selected: $component.getAttribute("selected"),
	            source: $component.getAttribute("source"),
	            loading: loading
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat(!loading ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-footer-button'].call(this, ($component.isShowingNonNumericProperties() ? "Hide" : "View all") + " non-numeric properties", {
	            onclick: $helpers.toggleNonNumericProperties
	          }));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenBase = __webpack_require__(300);
	
	var _clause = __webpack_require__(14);
	
	var _util = __webpack_require__(8);
	
	var _builderScreenEventOperator = __webpack_require__(334);
	
	var _builderScreenEventOperator2 = _interopRequireDefault(_builderScreenEventOperator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('builder-screen-event-operator', function (_BuilderScreenBase) {
	  _inherits(_class, _BuilderScreenBase);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderScreenEventOperator2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          MATH_TYPES: _clause.ShowClause.MATH_TYPES,
	          mathTypeClicked: function mathTypeClicked(clauseData) {
	            _this2.app.updateClause('show', _this2.state.activeMathMenuIndex, clauseData);
	            _this2.app.stopEditingClause();
	          }
	        })
	      };
	    }
	  }]);
	
	  return _class;
	}(_builderScreenBase.BuilderScreenBase));

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Object, builderPane, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    return {
	      value: h("div", {
	        "class": {
	          'builder-screen': true,
	          'math': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "class": {
	            'screen-options-list': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat($helpers.MATH_TYPES.reduce(function (__each_nodes, math, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "on": {
	                  click: function click() {
	                    return $helpers.mathTypeClicked({
	                      math: math
	                    });
	                  }
	                },
	                "class": {
	                  'list-option': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, math, {
	                  noIcon: true
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenBase = __webpack_require__(300);
	
	var _util = __webpack_require__(8);
	
	var _builderScreenEvents = __webpack_require__(336);
	
	var _builderScreenEvents2 = _interopRequireDefault(_builderScreenEvents);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('builder-screen-events', function (_BuilderScreenBase) {
	  _inherits(_class, _BuilderScreenBase);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'buildList',
	    value: function buildList() {
	      return this.allMatchingEvents();
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderScreenEvents2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          getEvents: function getEvents() {
	            return _this2.buildProgressiveList();
	          },
	          getRecentEvents: function getRecentEvents() {
	            return _this2.matchingItems(_this2.state.recentEvents.slice(0, 3), _util.renameEvent);
	          }
	        })
	      };
	    }
	  }]);
	
	  return _class;
	}(_builderScreenBase.BuilderScreenBase));

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, builderPane, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    var recentEvents = $helpers.getRecentEvents();
	    var eventListOptions = {
	      clickedEvent: $helpers.clickedEvent,
	      clickedEventProperties: $helpers.clickedEventProperties,
	      selected: $component.getAttribute("selected"),
	      source: $component.getAttribute("source"),
	      showPill: true
	    };
	    return {
	      value: h("div", {
	        "class": {
	          'builder-screen': true,
	          'events': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(jade_mixins['screen-title'].call(this, 'All Events', {
	          backButton: true
	        }));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "hook": {
	            postpatch: $helpers.updateRenderedSize
	          },
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(recentEvents.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'builder-label': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Recently viewed");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, recentEvents, eventListOptions));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, $helpers.getEvents(), eventListOptions));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenNumericPropertiesBase = __webpack_require__(331);
	
	var _base = __webpack_require__(256);
	
	var _base2 = _interopRequireDefault(_base);
	
	var _clause = __webpack_require__(14);
	
	var _util = __webpack_require__(8);
	
	var _builderScreenNumericProperties = __webpack_require__(338);
	
	var _builderScreenNumericProperties2 = _interopRequireDefault(_builderScreenNumericProperties);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('builder-screen-numeric-properties', function (_BuilderScreenNumeric) {
	  _inherits(_class, _BuilderScreenNumeric);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'getRelevantBuilderEvents',
	    value: function getRelevantBuilderEvents() {
	      var stageClause = this.app.activeStageClause;
	      return stageClause && stageClause.value ? [stageClause.value] : [];
	    }
	  }, {
	    key: 'getEventName',
	    value: function getEventName() {
	      var mpEvent = this.getRelevantBuilderEvents()[0];
	      return mpEvent ? mpEvent.name : null;
	    }
	  }, {
	    key: 'isLoading',
	    value: function isLoading() {
	      return this.state.topEventPropertiesByEvent[this.getEventName()] === _base2.default.LOADING;
	    }
	  }, {
	    key: 'buildList',
	    value: function buildList() {
	      return this.filterNonNumericProperties(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'buildList', this).call(this, _clause.ShowClause.RESOURCE_TYPE_EVENTS));
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderScreenNumericProperties2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          getEventName: function getEventName() {
	            return _this2.getEventName();
	          },
	          clickedProperty: function clickedProperty(ev, property) {
	            return _this2.updateAndCommitStageClause({ property: property });
	          }
	        })
	      };
	    }
	  }]);
	
	  return _class;
	}(_builderScreenNumericPropertiesBase.BuilderScreenNumericPropertiesBase));

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, builderPane, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    var loading = $helpers.isLoading();
	    var properties = $helpers.getProperties();
	    return {
	      value: h("div", {
	        "class": {
	          'builder-screen': true,
	          'properties': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(jade_mixins['screen-title'].call(this, "Properties of " + $helpers.getEventName(), {
	          backButton: $helpers.screenIdx() > 1
	        }));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "hook": {
	            postpatch: $helpers.updateRenderedSize
	          },
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, properties, {
	            clickedProperty: $helpers.clickedProperty,
	            listEmptyMessage: "No non-numeric properties available",
	            selected: $component.getAttribute("selected"),
	            source: $component.getAttribute("source"),
	            loading: loading
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat(!loading && properties.length ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-footer-button'].call(this, ($component.isShowingNonNumericProperties() ? "Hide" : "View all") + " non-numeric properties", {
	            onclick: $helpers.toggleNonNumericProperties
	          }));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _clause = __webpack_require__(14);
	
	var _builderShowHeader = __webpack_require__(340);
	
	var _builderShowHeader2 = _interopRequireDefault(_builderShowHeader);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('query-builder-show-header', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'getAssociatedClause',
	    value: function getAssociatedClause() {
	      return this.state.report.sections.getClause(_clause.ShowClause.TYPE, this.clauseIndex);
	    }
	  }, {
	    key: 'isPaneOpen',
	    value: function isPaneOpen() {
	      return this.state.activeMathMenuIndex === this.clauseIndex;
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderShowHeader2.default,
	        helpers: {
	          isButtonOutside: function isButtonOutside() {
	            return _this2.state.showClauseButtonPosition[_this2.clauseIndex];
	          },
	          isStaticHeader: function isStaticHeader() {
	            // Static Header for "All People" with no numeric properties
	            var associatedClause = _this2.getAssociatedClause();
	            return associatedClause && associatedClause.resourceType === _clause.ShowClause.RESOURCE_TYPE_PEOPLE && !associatedClause.property;
	          },
	          getCurrentMathChoice: function getCurrentMathChoice() {
	            var associatedClause = _this2.getAssociatedClause();
	            return associatedClause && associatedClause.math;
	          },
	          headerClicked: function headerClicked(ev) {
	            if (_this2.helpers.isEditingShowClause()) {
	              // consider it part of the show clause, don't close the
	              // menu
	              return ev.stopPropagation();
	            }
	
	            if (_this2.isPaneOpen()) {
	              _this2.app.stopEditingClause();
	            } else {
	              ev.stopPropagation();
	              var activeMathMenuIndex = _this2.clauseIndex;
	              _this2.app.startBuilderOnScreen('builder-screen-event-operator');
	              _this2.app.update({ activeMathMenuIndex: activeMathMenuIndex });
	              _this2.app.startEditingClause(_clause.ShowClause.TYPE, activeMathMenuIndex);
	            }
	          },
	          isEditingShowClause: function isEditingShowClause() {
	            return !!_this2.state.builderPane.screens.length && _this2.app.isEditingClause(_clause.ShowClause.TYPE, _this2.clauseIndex) && _this2.state.activeMathMenuIndex === null;
	          },
	          isOpen: function isOpen() {
	            return _this2.isPaneOpen();
	          },
	          isRemovable: function isRemovable() {
	            return _this2.app.getClausesForType('show').length > 1;
	          },
	          removeClause: function removeClause(ev) {
	            ev.stopPropagation();
	            _this2.app.removeClause('show', _this2.clauseIndex);
	          }
	        }
	      };
	    }
	  }, {
	    key: 'clauseIndex',
	    get: function get() {
	      return Number(this.getAttribute('clause-index'));
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    var open = $helpers.isOpen();
	    return {
	      value: h("div", {
	        "class": {
	          'query-builder-show-header': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'visible-header-content': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'header-disabled': $helpers.isEditingShowClause()
	            }, {
	              'header-label': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat($helpers.isStaticHeader() ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Show total");;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'header-word': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Show");;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "on": {
	                  click: $helpers.headerClicked
	                },
	                "class": {
	                  'active-math-header': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'header-word': true
	                  }
	                }, [$helpers.getCurrentMathChoice() || '']));
	                __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                  "attrs": {
	                    icon: 'caret-down'
	                  },
	                  "class": {
	                    'math-caret': true
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat($helpers.isRemovable() ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("button", {
	              "on": {
	                click: function click(ev) {
	                  return $helpers.removeClause(ev);
	                }
	              },
	              "class": Object.assign({}, {
	                'outside': $helpers.isButtonOutside()
	              }, {
	                'remove': true
	              })
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'drop-menu': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-drop-menu", {
	            "attrs": {
	              open: open
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "attrs": {
	                'slot-body': true
	              },
	              "class": {
	                'new-pane-content': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat($component.child("builder-pane", {
	                attrs: {
	                  open: open
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, learnActive, learnModalStepIndex, learnReminding, learnTransitioningIn, learnTransitioningOut, report, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['irb-learn-tooltip'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      var stepNames = [];
	      for (var jade_interp = 0; jade_interp < arguments.length; jade_interp++) {
	        stepNames.push(arguments[jade_interp]);
	      }
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(learnActive ? function () {
	          var __jade_nodes = [];
	          var step = util.getLearnStep(report, learnModalStepIndex);
	          var stepName = stepNames.includes(step.name) ? step.name : stepNames[stepNames.length - 1].name;
	          __jade_nodes = __jade_nodes.concat(h("mp-tutorial-tooltip", {
	            "attrs": {
	              hide: learnTransitioningOut || !stepNames.includes(step.name),
	              'placement': "right",
	              'num-steps': 4,
	              'curr-step': step.index - 1,
	              'closeable': true
	            },
	            "on": {
	              close: function close() {
	                return $component.app.helpers.finishLearn();
	              }
	            },
	            "class": {
	              'irb-learn-reminding': learnReminding
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'mp-tooltip-title': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(stepName == "choose-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Start by choosing an event to show");;
	                return __jade_nodes;
	              }.call(this) : stepName == "compare-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Now compare that to a different event");;
	                return __jade_nodes;
	              }.call(this) : stepName == "group-by" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Next, group your events by a property");;
	                return __jade_nodes;
	              }.call(this) : stepName == "manipulate-data" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Lastly, choose the best-suited visualization");;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'mp-tooltip-subtitle': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(stepName == "choose-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Choosing an event shows you how many times your customers completed that action in the chart below.");;
	                return __jade_nodes;
	              }.call(this) : stepName == "compare-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Compare multiple events to see if your customers are performing certain events more than others.");;
	                return __jade_nodes;
	              }.call(this) : stepName == "group-by" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Break your events down into groups to answer deeper questions about how your customers use your product.");;
	                return __jade_nodes;
	              }.call(this) : stepName == "manipulate-data" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("A line chart works well for displaying your data over time, while a bar chart is better at showing quantity.");;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	    var learnStep = util.getLearnStep(report, learnModalStepIndex);
	    return {
	      value: h("div", {
	        "class": Object.assign({}, util.learnClasses({
	          tooltipContainer: true,
	          transitioning: learnTransitioningIn && learnStep.name === "choose-event"
	        }), {
	          'builder-section': true,
	          'builder-show': true
	        })
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(report.sections.show.clauses.reduce(function (__each_nodes, clause, clauseIdx) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            var attrs = {
	              'clause-index': clauseIdx
	            };
	            __jade_nodes = __jade_nodes.concat(clauseIdx ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'clause-container': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'clause-language': true,
	                    'preposition': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat("and");;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : undefined);
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "attrs": attrs,
	              "on": {
	                mouseenter: function mouseenter(ev) {
	                  return $helpers.mouseEntered(ev, clauseIdx);
	                }
	              },
	              "class": {
	                'clause-container': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'clause-header': true,
	                  'irb-learn-disabled': true
	                }
	              }, [$component.child('query-builder-show-header', {
	                attrs: attrs
	              }) || '']));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'clause-body': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(clause.property && $helpers.showSourceForNumericProperties() ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'control-container': true
	                    }
	                  }, [$component.child('builder-numeric-property-edit-control', {
	                    attrs: attrs
	                  }) || '']));
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'clause-language': true,
	                      'preposition': true
	                    }
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat("on");;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'control-container': true
	                  }
	                }, [$component.child('builder-show-edit-control', {
	                  attrs: attrs
	                }) || '']));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(jade_mixins['irb-learn-tooltip'].call(this, "choose-event"));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "learnActive" in locals ? locals.learnActive : typeof learnActive !== "undefined" ? learnActive : undefined, "learnModalStepIndex" in locals ? locals.learnModalStepIndex : typeof learnModalStepIndex !== "undefined" ? learnModalStepIndex : undefined, "learnReminding" in locals ? locals.learnReminding : typeof learnReminding !== "undefined" ? learnReminding : undefined, "learnTransitioningIn" in locals ? locals.learnTransitioningIn : typeof learnTransitioningIn !== "undefined" ? learnTransitioningIn : undefined, "learnTransitioningOut" in locals ? locals.learnTransitioningOut : typeof learnTransitioningOut !== "undefined" ? learnTransitioningOut : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 342 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 343 */,
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	__webpack_require__(345);
	
	__webpack_require__(349);
	
	__webpack_require__(353);
	
	var _index = __webpack_require__(370);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(371);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('query-builder-time', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        helpers: {
	          showUpsellModal: function showUpsellModal() {
	            return _this2.state.upsellModal === 'timeClause';
	          },
	          closeUpsellModal: function closeUpsellModal(ev) {
	            return _this2.app.maybeCloseUpsellModal(ev, 'timeClause');
	          }
	        }
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _util = __webpack_require__(8);
	
	var _editControl = __webpack_require__(291);
	
	var _clause = __webpack_require__(14);
	
	__webpack_require__(346);
	
	var _builderTimeEditControl = __webpack_require__(348);
	
	var _builderTimeEditControl2 = _interopRequireDefault(_builderTimeEditControl);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('builder-time-edit-control', function (_EditControl) {
	  _inherits(_class, _EditControl);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'setDates',
	    value: function setDates(dates) {
	      var old = this.app.getTimeClauseValue();
	      var _dates$from = dates.from,
	          from = _dates$from === undefined ? old.from : _dates$from,
	          _dates$to = dates.to,
	          to = _dates$to === undefined ? old.to : _dates$to;
	
	      var update = {};
	
	      if (from && to) {
	        var _normalizeDates = (0, _util.normalizeDates)(from, to);
	
	        var _normalizeDates2 = _slicedToArray(_normalizeDates, 2);
	
	        from = _normalizeDates2[0];
	        to = _normalizeDates2[1];
	
	        update = { value: [from, to], unit: (0, _util.unitForDateRange)(from, to) };
	      } else if (from) {
	        var _normalizeDates3 = (0, _util.normalizeDates)(from);
	
	        var _normalizeDates4 = _slicedToArray(_normalizeDates3, 1);
	
	        from = _normalizeDates4[0];
	
	        update = { value: [from, to] };
	      } else if (to) {
	        var _normalizeDates5 = (0, _util.normalizeDates)(to);
	
	        var _normalizeDates6 = _slicedToArray(_normalizeDates5, 1);
	
	        to = _normalizeDates6[0];
	
	        update = { value: [from, to] };
	      }
	
	      this.app.updateStageClause(update);
	      this.app.commitStageClause();
	    }
	  }, {
	    key: 'getLabel',
	    value: function getLabel() {
	      return this.getClause().range || _clause.TimeClause.RANGES.CUSTOM;
	    }
	  }, {
	    key: 'getSelectionAttrs',
	    value: function getSelectionAttrs() {
	      return {
	        source: 'time',
	        selected: this.getLabel()
	      };
	    }
	  }, {
	    key: 'isRemovable',
	    value: function isRemovable() {
	      return false;
	    }
	  }, {
	    key: 'openPane',
	    value: function openPane() {
	      this.app.startBuilderOnScreen('builder-screen-time');
	    }
	
	    // based on the value of the input, decide whether to show the preset or custom range screen
	
	  }, {
	    key: 'updateScreen',
	    value: function updateScreen(value, focused) {
	      var presetRangeScreen = 'builder-screen-time';
	      var customRangeScreen = 'builder-screen-time-custom';
	      var currentScreen = this.app.getBuilderCurrentScreen();
	      if (currentScreen && currentScreen.componentName === presetRangeScreen && value.length >= 3 && _clause.TimeClause.RANGE_LIST.every(function (range) {
	        return !(0, _util.stringFilterMatches)(range, value);
	      })) {
	        this.app.updateBuilder((0, _util.extend)(focused, {
	          screens: this.state.builderPane.screens.concat({ componentName: customRangeScreen }),
	          inTransition: true
	        }));
	      }
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderTimeEditControl2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          getDates: function getDates() {
	            return _this2.app.getTimeClauseValue();
	          },
	          isPresetRange: function isPresetRange() {
	            var screen = _this2.app.getBuilderCurrentScreen();
	            var showingCustomRangeControls = screen && screen.componentName === 'builder-screen-time-custom';
	            return _this2.getClause().range && (!screen || !showingCustomRangeControls);
	          },
	          updatedInput: function updatedInput(ev) {
	            _this2.helpers.changedSearch(ev);
	            _this2.updateScreen(ev.target.value, { fromFocused: true });
	          },
	          updatedFrom: function updatedFrom(ev) {
	            return _this2.updateScreen(ev.target.value, { fromFocused: true });
	          },
	          updatedTo: function updatedTo(ev) {
	            return _this2.updateScreen(ev.target.value, { toFocused: true });
	          },
	          clickedFromLabel: function clickedFromLabel() {
	            _this2.app.updateBuilder({ fromFocused: true });
	            _this2.helpers.clickedLabel();
	          },
	          clickedToLabel: function clickedToLabel() {
	            _this2.app.updateBuilder({ toFocused: true });
	            _this2.helpers.clickedLabel();
	          },
	          focusedFrom: function focusedFrom() {
	            return _this2.app.updateBuilder({ fromFocused: true });
	          },
	          focusedTo: function focusedTo() {
	            return _this2.app.updateBuilder({ toFocused: true });
	          },
	          blurredFrom: function blurredFrom() {
	            return _this2.app.updateBuilder({ fromFocused: false });
	          },
	          blurredTo: function blurredTo() {
	            return _this2.app.updateBuilder({ toFocused: false });
	          },
	          changedFrom: function changedFrom(ev) {
	            return _this2.setDates({ from: ev.detail });
	          },
	          changedTo: function changedTo(ev) {
	            return _this2.setDates({ to: ev.detail });
	          }
	        })
	      };
	    }
	  }, {
	    key: 'section',
	    get: function get() {
	      return _clause.TimeClause.TYPE;
	    }
	  }]);
	
	  return _class;
	}(_editControl.EditControl));

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _util = __webpack_require__(8);
	
	var _resizeInput = __webpack_require__(292);
	
	var _resizeInput2 = _interopRequireDefault(_resizeInput);
	
	var _resizeDateInput = __webpack_require__(347);
	
	var _resizeDateInput2 = _interopRequireDefault(_resizeDateInput);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ResizeDateInput = function (_ResizeInput) {
	  _inherits(ResizeDateInput, _ResizeInput);
	
	  function ResizeDateInput() {
	    _classCallCheck(this, ResizeDateInput);
	
	    return _possibleConstructorReturn(this, (ResizeDateInput.__proto__ || Object.getPrototypeOf(ResizeDateInput)).apply(this, arguments));
	  }
	
	  _createClass(ResizeDateInput, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      _get(ResizeDateInput.prototype.__proto__ || Object.getPrototypeOf(ResizeDateInput.prototype), 'attachedCallback', this).apply(this, arguments);
	      this.inputEl.value = this.getAttribute('initial-input-value') || '';
	    }
	  }, {
	    key: 'emitFocus',
	    value: function emitFocus() {
	      this.dispatchEvent(new CustomEvent('focus'));
	    }
	  }, {
	    key: 'emitBlur',
	    value: function emitBlur() {
	      this.dispatchEvent(new CustomEvent('blur'));
	    }
	  }, {
	    key: 'emitChange',
	    value: function emitChange() {
	      var detail = (0, _util.formatDateISO)(this.value);
	      this.dispatchEvent(new CustomEvent('change', { detail: detail }));
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      var config = _get(ResizeDateInput.prototype.__proto__ || Object.getPrototypeOf(ResizeDateInput.prototype), 'config', this);
	      return (0, _util.extend)(config, {
	        template: _resizeDateInput2.default,
	        helpers: (0, _util.extend)(config.helpers, {
	          // TODO: remove duplication of helpers between this and DateInput
	          formatDateDisplay: _util.formatDateDisplay,
	          focusedInput: function focusedInput() {
	            return _this2.emitFocus();
	          },
	          blurredInput: function blurredInput() {
	            _this2.inputEl.value = '';
	            _this2.emitBlur();
	          },
	          changedInput: function changedInput(ev) {
	            ev.stopPropagation();
	            var inputValue = _this2.inputEl.value.length ? (0, _util.parseDate)(_this2.inputEl.value) : null;
	            _this2.update({ inputValue: inputValue });
	            _this2.emitChange();
	          }
	        })
	      });
	    }
	  }, {
	    key: 'inputEl',
	    get: function get() {
	      return this.querySelector('input');
	    }
	  }, {
	    key: 'placeholder',
	    get: function get() {
	      return this.inputEl.getAttribute('placeholder');
	    }
	  }]);
	
	  return ResizeDateInput;
	}(_resizeInput2.default);
	
	exports.default = ResizeDateInput;
	
	
	document.registerElement('resize-date-input', ResizeDateInput);

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, inputValue, inputWidth) {
	    var h = __webpack_require__(232).h;
	    return {
	      value: h("div", {
	        "class": {
	          'resize-date-input': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("input", {
	          "attrs": {
	            type: "text",
	            placeholder: inputValue ? $helpers.formatDateDisplay(inputValue) : ''
	          },
	          "props": {
	            maxLength: 50
	          },
	          "style": {
	            width: inputWidth + "px"
	          },
	          "on": {
	            input: $helpers.updatedInput,
	            focus: $helpers.focusedInput,
	            blur: $helpers.blurredInput,
	            change: $helpers.changedInput
	          },
	          "hook": {
	            insert: $component.getAttribute('autofocus') ? $helpers.inserted : null
	          }
	        }));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "inputValue" in locals ? locals.inputValue : typeof inputValue !== "undefined" ? inputValue : undefined, "inputWidth" in locals ? locals.inputWidth : typeof inputWidth !== "undefined" ? inputWidth : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, builderPane, contextFilter, util) {
	    var h = __webpack_require__(232).h;
	    var open = $helpers.isPaneOpen();
	    return {
	      value: h("div", {
	        "class": {
	          'control-container': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": Object.assign({}, {
	            'pane-open': open
	          }, {
	            'irb-new-control': true,
	            'new-query-builder': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'control-buttons': true,
	              'edit-control': true,
	              'control-button-text': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(open ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat($helpers.isPresetRange() ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("resize-input", {
	                  "attrs": {
	                    placeholder: $helpers.getLabel()
	                  },
	                  "props": {
	                    autoFocus: true,
	                    type: "text",
	                    value: contextFilter
	                  },
	                  "on": {
	                    click: $helpers.clickedInput,
	                    input: $helpers.updatedInput
	                  },
	                  "class": {
	                    'control-label': true
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this) : function () {
	                var __jade_nodes = [];
	
	                var _$helpers$getDates = $helpers.getDates(),
	                    from = _$helpers$getDates.from,
	                    to = _$helpers$getDates.to;
	
	                __jade_nodes = __jade_nodes.concat(h("resize-date-input", {
	                  "attrs": {
	                    autofocus: builderPane.fromFocused,
	                    'min-width': 80,
	                    'initial-input-value': builderPane.fromFocused ? contextFilter : ""
	                  },
	                  "props": {
	                    type: "text",
	                    value: from
	                  },
	                  "on": {
	                    click: $helpers.clickedInput,
	                    input: $helpers.updatedFrom,
	                    change: $helpers.changedFrom,
	                    focus: $helpers.focusedFrom,
	                    blur: $helpers.blurredFrom
	                  },
	                  "class": {
	                    'control-label': true
	                  }
	                }));
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'clause-language': true,
	                    'preposition': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat("to");;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));
	                __jade_nodes = __jade_nodes.concat(h("resize-date-input", {
	                  "attrs": {
	                    autofocus: builderPane.toFocused,
	                    'min-width': 80,
	                    'initial-input-value': builderPane.toFocused ? contextFilter : ""
	                  },
	                  "props": {
	                    type: "text",
	                    value: to
	                  },
	                  "on": {
	                    click: $helpers.clickedInput,
	                    input: $helpers.updatedTo,
	                    change: $helpers.changedTo,
	                    focus: $helpers.focusedTo,
	                    blur: $helpers.blurredTo
	                  },
	                  "class": {
	                    'control-label': true
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this));;
	              return __jade_nodes;
	            }.call(this) : $helpers.isPresetRange() ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'control-label': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "on": {
	                    click: $helpers.clickedLabel
	                  },
	                  "class": {
	                    'control-label-text': true
	                  }
	                }, [$helpers.getLabel() || '']));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	
	              var _$helpers$getDates2 = $helpers.getDates(),
	                  from = _$helpers$getDates2.from,
	                  to = _$helpers$getDates2.to;
	
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'control-label': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "on": {
	                    click: $helpers.clickedFromLabel
	                  },
	                  "class": {
	                    'control-label-text': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(util.formatDateDisplay(from));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'clause-language': true,
	                  'preposition': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("to");;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'control-label': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "on": {
	                    click: $helpers.clickedToLabel
	                  },
	                  "class": {
	                    'control-label-text': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(util.formatDateDisplay(to));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'drop-menu': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-drop-menu", {
	              "attrs": {
	                open: open
	              },
	              "on": {
	                change: $helpers.menuChange
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  'slot-body': true
	                },
	                "class": {
	                  'new-pane-content': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat($component.child("builder-pane", {
	                  attrs: $helpers.getSelectionAttrs(open)
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "contextFilter" in locals ? locals.contextFilter : typeof contextFilter !== "undefined" ? contextFilter : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenBase = __webpack_require__(300);
	
	var _clause = __webpack_require__(14);
	
	var _util = __webpack_require__(8);
	
	var _time = __webpack_require__(118);
	
	var _builderScreenTime = __webpack_require__(350);
	
	var _builderScreenTime2 = _interopRequireDefault(_builderScreenTime);
	
	__webpack_require__(351);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var RANGE_ITEMS = _clause.TimeClause.RANGE_LIST.map(function (name) {
	  return { name: name };
	});
	var RANGE_INFO = _clause.TimeClause.RANGE_TO_VALUE_AND_UNIT;
	var RANGES = _clause.TimeClause.RANGES;
	
	document.registerElement('builder-screen-time', function (_BuilderScreenBase) {
	  _inherits(_class, _BuilderScreenBase);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderScreenTime2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          RANGES: _clause.TimeClause.RANGES,
	          availableRanges: function availableRanges() {
	            var dataHistoryMS = _this2.app.maxDataHistoryDays() * _time.MS_BY_UNIT['day'];
	
	            var featureGatedOptions = RANGE_ITEMS.map(function (range) {
	              if (range.name === RANGES.CUSTOM) {
	                range.upsell = false;
	              } else {
	                var optionMS = RANGE_INFO[range.name].value * _time.MS_BY_UNIT[RANGE_INFO[range.name].unit];
	                range.upsell = optionMS >= dataHistoryMS;
	              }
	              return range;
	            });
	
	            return _this2.matchingItems(featureGatedOptions);
	          },
	          clickedRange: function clickedRange(range) {
	            if (range.upsell) {
	              _this2.app.openUpsellModal('timeClause');
	              return;
	            }
	            if (range.name === _clause.TimeClause.RANGES.CUSTOM) {
	              _this2.nextScreen('builder-screen-time-custom');
	            } else {
	              _this2.updateAndCommitStageClause({ range: range.name });
	            }
	          }
	        })
	      };
	    }
	  }]);
	
	  return _class;
	}(_builderScreenBase.BuilderScreenBase));

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, builderPane, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    var selected = $component.getAttribute("selected");
	    return {
	      value: h("div", {
	        "class": {
	          'builder-screen': true,
	          'time': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "hook": {
	            postpatch: $helpers.updateRenderedSize
	          },
	          "class": {
	            'screen-options-list': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var ranges = $helpers.availableRanges();
	          __jade_nodes = __jade_nodes.concat(ranges.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(ranges.reduce(function (__each_nodes, range, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var isSelected = range.name === selected;
	                var isCustom = range.name === $helpers.RANGES.CUSTOM;
	                var showUpsellIcon = range.upsell;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: !isSelected || isCustom ? function () {
	                      return $helpers.clickedRange(range);
	                    } : null
	                  },
	                  "class": Object.assign({}, {
	                    'list-option-selected': isSelected,
	                    'list-option-time-custom': isCustom,
	                    'list-option-upsell': showUpsellIcon
	                  }, {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, range.name, {
	                    noIcon: true,
	                    matches: range.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(isCustom ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);
	                  __jade_nodes = __jade_nodes.concat(showUpsellIcon ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(h("div", {
	                      "class": {
	                        'upsell-icon': true
	                      }
	                    }, function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                        "attrs": {
	                          icon: 'lighting-bolt'
	                        }
	                      }));;
	                      return __jade_nodes;
	                    }.call(this).filter(Boolean)));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 351 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 352 */,
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _builderScreenBase = __webpack_require__(300);
	
	var _clause = __webpack_require__(14);
	
	var _util = __webpack_require__(8);
	
	var _builderScreenTimeCustom = __webpack_require__(354);
	
	var _builderScreenTimeCustom2 = _interopRequireDefault(_builderScreenTimeCustom);
	
	__webpack_require__(355);
	
	__webpack_require__(357);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UNITS = _clause.TimeClause.TIME_UNIT_LIST.filter(function (choice) {
	  return choice !== _clause.TimeClause.TIME_UNITS.YEAR;
	});
	
	document.registerElement('builder-screen-time-custom', function (_BuilderScreenBase) {
	  _inherits(_class, _BuilderScreenBase);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'setDates',
	    value: function setDates(from, to, unit) {
	      var params = { value: [from, to] };
	      if (unit) {
	        params.unit = unit;
	      }
	      this.updateStageClause(params, { shouldCommit: true });
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _builderScreenTimeCustom2.default,
	        helpers: (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this).helpers, {
	          UNITS: UNITS,
	          changedUnit: function changedUnit(ev) {
	            var update = { unit: ev.detail.selected };
	
	            var _ref = _this2.app.activeStageClause || {},
	                unit = _ref.unit,
	                value = _ref.value;
	
	            var unitPresets = _clause.TimeClause.UNIT_AND_VALUE_TO_RANGE[unit];
	            var presetRange = unitPresets && unitPresets[value];
	
	            if (presetRange) {
	              // need to convert to absolute date values to allow new unit
	              var from = (0, _util.formatDateISO)((0, _util.relativeToAbsoluteDate)(value, unit));
	              var to = (0, _util.formatDateISO)(new Date());
	              update = (0, _util.extend)(update, { value: [from, to] });
	            }
	
	            _this2.updateStageClause(update, { shouldCommit: true });
	          },
	          getDates: function getDates() {
	            return _this2.app.getTimeClauseValue(_this2.app.activeStageClause);
	          },
	          changedDates: function changedDates(ev) {
	            if (ev.detail.selected) {
	              // TODO remove once mp-toggle no longer fires change events
	              return;
	            }
	            var _ev$detail = ev.detail,
	                from = _ev$detail.from,
	                to = _ev$detail.to;
	
	            var unit = (0, _util.unitForDateRange)(from, to);
	            var old = _this2.app.getTimeClauseValue(_this2.app.activeStageClause);
	            if (from !== old.from || to !== old.to || unit !== old.unit) {
	              _this2.setDates(from, to, unit);
	            }
	          },
	          resizedCalendar: function resizedCalendar() {
	            return _this2.updateRenderedSize({
	              cancelDuringTransition: true
	            });
	          },
	          getMaxDataHistoryDays: function getMaxDataHistoryDays() {
	            return _this2.app.maxDataHistoryDays();
	          },
	          getMaxDataHistoryString: function getMaxDataHistoryString() {
	            var days = _this2.app.maxDataHistoryDays();
	            if (days < 365) {
	              return days.toString() + ' days';
	            } else {
	              var years = Math.floor(days / 365);
	              return years.toString() + ' year' + (years > 1 ? 's' : '');
	            }
	          },
	          dateLimited: function dateLimited() {
	            return _this2.app.maxDataHistoryDays() !== _this2.app.getFeatureGateValue('unlimited');
	          }
	        })
	      };
	    }
	  }]);
	
	  return _class;
	}(_builderScreenBase.BuilderScreenBase));

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Object, builderPane, report, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    var _$helpers$getDates = $helpers.getDates(),
	        from = _$helpers$getDates.from,
	        to = _$helpers$getDates.to;
	
	    var maxDataHistoryDays = $helpers.getMaxDataHistoryDays();
	    var maxDataHistoryString = $helpers.getMaxDataHistoryString();
	    return {
	      value: h("div", {
	        "class": {
	          'builder-screen': true,
	          'time-custom': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat($helpers.dateLimited() ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-title'].call(this, "Analyze your historical data beyond " + maxDataHistoryString + ".", {
	            backButton: true,
	            upsell: true,
	            upsellLinkText: "Upgrade your plan."
	          }));;
	          return __jade_nodes;
	        }.call(this) : function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-title'].call(this, "Choose a date range", {
	            backButton: true
	          }));;
	          return __jade_nodes;
	        }.call(this));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'range-control': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("irb-datepicker", {
	            "attrs": {
	              'max-data-history': maxDataHistoryDays,
	              range: true,
	              'double-calendar': true,
	              'hide-text-inputs': true,
	              'from-focused': builderPane.fromFocused,
	              'to-focused': builderPane.toFocused
	            },
	            "props": {
	              value: {
	                from: from, to: to
	              }
	            },
	            "on": {
	              change: $helpers.changedDates,
	              resize: $helpers.resizedCalendar
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat(report.displayOptions.chartType === "line" ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'unit-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'builder-label': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Time unit");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                selected: $helpers.getStageClauseAttr("unit")
	              },
	              "on": {
	                select: $helpers.changedUnit
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat($helpers.UNITS.reduce(function (__each_nodes, unit, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: unit
	                    }
	                  }, [unit || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 355 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 356 */,
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _util = __webpack_require__(8);
	
	var _datepicker = __webpack_require__(358);
	
	var _datepicker2 = _interopRequireDefault(_datepicker);
	
	__webpack_require__(359);
	
	__webpack_require__(361);
	
	__webpack_require__(363);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DatePicker = function (_Component) {
	  _inherits(DatePicker, _Component);
	
	  function DatePicker() {
	    _classCallCheck(this, DatePicker);
	
	    return _possibleConstructorReturn(this, (DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).apply(this, arguments));
	  }
	
	  _createClass(DatePicker, [{
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, oldValue, newValue) {
	      _get(DatePicker.prototype.__proto__ || Object.getPrototypeOf(DatePicker.prototype), 'attributeChangedCallback', this).apply(this, arguments);
	      if (name === 'from-focused') {
	        this.update({ fromFocused: newValue });
	      }
	      if (name === 'to-focused') {
	        this.update({ toFocused: newValue });
	      }
	    }
	  }, {
	    key: 'emitChange',
	    value: function emitChange() {
	      this.dispatchEvent(new CustomEvent('change', { detail: this.value }));
	    }
	  }, {
	    key: 'emitResize',
	    value: function emitResize() {
	      this.dispatchEvent(new CustomEvent('resize'));
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _datepicker2.default,
	        defaultState: {
	          date: null,
	          from: null,
	          to: null,
	          fromFocused: false,
	          toFocused: false
	        },
	        helpers: {
	          isRange: function isRange() {
	            return _this2.isRange;
	          },
	          isDoubleCalendar: function isDoubleCalendar() {
	            return _this2.isDoubleCalendar;
	          },
	          getPreposition: function getPreposition() {
	            return _this2.preposition;
	          },
	          hideTextInputs: function hideTextInputs() {
	            return _this2.hideTextInputs;
	          },
	          maxDataHistory: function maxDataHistory() {
	            return _this2.maxDataHistory;
	          },
	          changedDates: function changedDates(ev) {
	            if (_this2.isRange) {
	              var _ev$detail = ev.detail,
	                  _ev$detail$from = _ev$detail.from,
	                  from = _ev$detail$from === undefined ? _this2.state.from : _ev$detail$from,
	                  _ev$detail$to = _ev$detail.to,
	                  to = _ev$detail$to === undefined ? _this2.state.to : _ev$detail$to;
	
	              var _normalizeDates = (0, _util.normalizeDates)(from, to);
	
	              var _normalizeDates2 = _slicedToArray(_normalizeDates, 2);
	
	              var _normalizeDates2$ = _normalizeDates2[0];
	              from = _normalizeDates2$ === undefined ? null : _normalizeDates2$;
	              var _normalizeDates2$2 = _normalizeDates2[1];
	              to = _normalizeDates2$2 === undefined ? null : _normalizeDates2$2;
	
	              _this2.update({ from: from, to: to, date: null });
	            } else {
	              var _normalizeDates3 = (0, _util.normalizeDates)(ev.detail || _this2.state.date),
	                  _normalizeDates4 = _slicedToArray(_normalizeDates3, 1),
	                  _normalizeDates4$ = _normalizeDates4[0],
	                  date = _normalizeDates4$ === undefined ? null : _normalizeDates4$;
	
	              _this2.update({ date: date, from: null, to: null });
	            }
	            _this2.emitChange();
	          },
	          changedFrom: function changedFrom(ev) {
	            return _this2.helpers.changedDates({ detail: { from: ev.detail } });
	          },
	          changedTo: function changedTo(ev) {
	            return _this2.helpers.changedDates({ detail: { to: ev.detail } });
	          },
	          focusedFrom: function focusedFrom() {
	            return _this2.update({ fromFocused: true });
	          },
	          blurredFrom: function blurredFrom() {
	            return _this2.update({ fromFocused: false });
	          },
	          focusedTo: function focusedTo() {
	            return _this2.update({ toFocused: true });
	          },
	          blurredTo: function blurredTo() {
	            return _this2.update({ toFocused: false });
	          },
	          resizedCalendar: function resizedCalendar() {
	            return _this2.emitResize();
	          }
	        }
	      };
	    }
	  }, {
	    key: 'value',
	    get: function get() {
	      var from = this.state.from ? (0, _util.formatDateISO)(this.state.from) : null;
	      var to = this.state.to ? (0, _util.formatDateISO)(this.state.to) : null;
	      var date = this.state.date ? (0, _util.formatDateISO)(this.state.date) : null;
	      return this.isRange ? { from: from, to: to } : date;
	    },
	    set: function set(val) {
	      this.update(this.isRange ? { from: val.from, to: val.to } : { date: val });
	    }
	  }, {
	    key: 'isRange',
	    get: function get() {
	      return this.isAttributeEnabled('range');
	    }
	  }, {
	    key: 'isDoubleCalendar',
	    get: function get() {
	      return this.isAttributeEnabled('double-calendar');
	    }
	  }, {
	    key: 'hideTextInputs',
	    get: function get() {
	      return this.getAttribute('hide-text-inputs');
	    }
	  }, {
	    key: 'maxDataHistory',
	    get: function get() {
	      return this.getAttribute('max-data-history');
	    }
	  }, {
	    key: 'preposition',
	    get: function get() {
	      return this.getAttribute('preposition');
	    }
	  }]);
	
	  return DatePicker;
	}(_panel.Component);
	
	document.registerElement('irb-datepicker', DatePicker);

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, date, from, fromFocused, to, toFocused) {
	    var h = __webpack_require__(232).h;
	    var isRange = $helpers.isRange();
	    var isDoubleCalendar = $helpers.isDoubleCalendar();
	    return {
	      value: h("div", {
	        "class": {
	          'datepicker': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(!$helpers.hideTextInputs() ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'inputs': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(isRange ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("date-input", {
	                "props": {
	                  value: from
	                },
	                "on": {
	                  focus: $helpers.focusedFrom,
	                  blur: $helpers.blurredFrom,
	                  change: $helpers.changedFrom
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'preposition': true
	                }
	              }, [$helpers.getPreposition() || "to" || '']));
	              __jade_nodes = __jade_nodes.concat(h("date-input", {
	                "props": {
	                  value: to
	                },
	                "on": {
	                  focus: $helpers.focusedTo,
	                  blur: $helpers.blurredTo,
	                  change: $helpers.changedTo
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("date-input", {
	                "props": {
	                  value: date
	                },
	                "on": {
	                  change: $helpers.changedDates
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'calendar': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("irb-calendar", {
	            "attrs": {
	              'max-days': $helpers.maxDataHistory(),
	              range: isRange,
	              'double-calendar': isDoubleCalendar,
	              'from-focused': fromFocused,
	              'to-focused': toFocused
	            },
	            "props": {
	              value: isRange ? {
	                from: from, to: to
	              } : date
	            },
	            "on": {
	              change: $helpers.changedDates,
	              resize: $helpers.resizedCalendar
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "date" in locals ? locals.date : typeof date !== "undefined" ? date : undefined, "from" in locals ? locals.from : typeof from !== "undefined" ? from : undefined, "fromFocused" in locals ? locals.fromFocused : typeof fromFocused !== "undefined" ? fromFocused : undefined, "to" in locals ? locals.to : typeof to !== "undefined" ? to : undefined, "toFocused" in locals ? locals.toFocused : typeof toFocused !== "undefined" ? toFocused : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 359 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 360 */,
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _util = __webpack_require__(8);
	
	var _dateInput = __webpack_require__(362);
	
	var _dateInput2 = _interopRequireDefault(_dateInput);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DateInput = function (_Component) {
	  _inherits(DateInput, _Component);
	
	  function DateInput() {
	    _classCallCheck(this, DateInput);
	
	    return _possibleConstructorReturn(this, (DateInput.__proto__ || Object.getPrototypeOf(DateInput)).apply(this, arguments));
	  }
	
	  _createClass(DateInput, [{
	    key: 'emitFocus',
	    value: function emitFocus() {
	      this.dispatchEvent(new CustomEvent('focus'));
	    }
	  }, {
	    key: 'emitBlur',
	    value: function emitBlur() {
	      this.dispatchEvent(new CustomEvent('blur'));
	    }
	  }, {
	    key: 'emitChange',
	    value: function emitChange() {
	      var detail = (0, _util.formatDateISO)(this.value);
	      this.dispatchEvent(new CustomEvent('change', { detail: detail }));
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _dateInput2.default,
	        defaultState: {
	          inputValue: null
	        },
	        helpers: {
	          formatDateDisplay: _util.formatDateDisplay,
	          focus: function focus(vnode) {
	            return requestAnimationFrame(function () {
	              return vnode.elm.focus();
	            });
	          },
	          focusedInput: function focusedInput() {
	            return _this2.emitFocus();
	          },
	          blurredInput: function blurredInput() {
	            _this2.inputEl.value = '';
	            _this2.emitBlur();
	          },
	          changedInput: function changedInput(ev) {
	            ev.stopPropagation();
	            var inputValue = _this2.inputEl.value.length ? (0, _util.parseDate)(_this2.inputEl.value) : null;
	            _this2.update({ inputValue: inputValue });
	            _this2.emitChange();
	          }
	        }
	      };
	    }
	  }, {
	    key: 'inputEl',
	    get: function get() {
	      return this.querySelector('input');
	    }
	  }, {
	    key: 'value',
	    get: function get() {
	      return this.state.inputValue;
	    },
	    set: function set(inputValue) {
	      this.update({ inputValue: inputValue });
	    }
	  }]);
	
	  return DateInput;
	}(_panel.Component);
	
	exports.default = DateInput;
	
	
	document.registerElement('date-input', DateInput);

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, inputValue) {
	    var h = __webpack_require__(232).h;
	    return {
	      value: h("div", {
	        "class": {
	          'date-input': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("input", {
	          "attrs": {
	            type: 'text',
	            placeholder: inputValue ? $helpers.formatDateDisplay(inputValue) : ''
	          },
	          "on": {
	            focus: $helpers.focusedInput,
	            blur: $helpers.blurredInput,
	            change: $helpers.changedInput
	          },
	          "hook": {
	            insert: $component.getAttribute('autofocus') ? $helpers.focus : null
	          }
	        }));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "inputValue" in locals ? locals.inputValue : typeof inputValue !== "undefined" ? inputValue : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _pikaday = __webpack_require__(364);
	
	var _pikaday2 = _interopRequireDefault(_pikaday);
	
	var _webcomponent = __webpack_require__(238);
	
	var _webcomponent2 = _interopRequireDefault(_webcomponent);
	
	var _util = __webpack_require__(8);
	
	__webpack_require__(365);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var INCOMPLETE_RANGE_CLASS = 'incomplete-range';
	var MS_PER_DAY = 24 * 60 * 60 * 1000;
	
	var Calendar = function (_WebComponent) {
	  _inherits(Calendar, _WebComponent);
	
	  function Calendar() {
	    _classCallCheck(this, Calendar);
	
	    return _possibleConstructorReturn(this, (Calendar.__proto__ || Object.getPrototypeOf(Calendar)).apply(this, arguments));
	  }
	
	  _createClass(Calendar, [{
	    key: 'createdCallback',
	    value: function createdCallback() {
	      this.from = null;
	      this.to = null;
	      this.date = null;
	    }
	  }, {
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      this.init();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name) {
	      if (!this._initialized || name === 'double-calendar') {
	        this.init();
	      }
	    }
	  }, {
	    key: 'init',
	    value: function init() {
	      var _this2 = this;
	
	      this._initialized = true;
	      this.innerHTML = '';
	      this.picker = new _pikaday2.default({
	        bound: false,
	        container: document.getElementsByClassName('calendar-hook')[0],
	        events: this.getFutureDates(),
	        mainCalendar: 'right',
	        maxDate: new Date(),
	        minDate: this.getMinDate(),
	        numberOfMonths: this.isDoubleCalendar ? 2 : 1,
	        i18n: (0, _util.extend)(_pikaday2.default.prototype.config().i18n, {
	          weekdaysShort: ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA']
	        }),
	        showDaysInNextAndPreviousMonths: true,
	        theme: 'pika-mixpanel',
	        yearRange: 10,
	        onSelect: function onSelect(date) {
	          return _this2.selectDate(date);
	        },
	        onDraw: function onDraw() {
	          return _this2.emitResize();
	        }
	      });
	
	      // Pikaday registers a keydown event handler on the document (?#&!), get rid of it
	      document.removeEventListener('keydown', this.picker._onKeyChange);
	
	      this.appendChild(this.picker.el);
	      this.updatePicker();
	    }
	  }, {
	    key: 'getMinDate',
	    value: function getMinDate() {
	      var historyLength = this.historyLengthInDays;
	      var today = new Date().setHours(0, 0, 0, 0);
	      return new Date(today - historyLength * MS_PER_DAY);
	    }
	  }, {
	    key: 'getFutureDates',
	    value: function getFutureDates() {
	      var futureDates = [];
	      var today = new Date();
	      var date = today.getDate();
	      var thisMonth = today.getMonth();
	      var thisYear = today.getFullYear();
	      var newDate = new Date(thisYear, thisMonth, date);
	      while (newDate.getMonth() === thisMonth) {
	        futureDates.push(newDate.toDateString());
	        date++;
	        newDate = new Date(thisYear, thisMonth, date);
	      }
	      return futureDates;
	    }
	  }, {
	    key: 'updatePicker',
	    value: function updatePicker() {
	      if (this.picker) {
	        this.picker.setDate(this.date);
	        this.picker.setStartRange(this.from);
	        this.picker.setEndRange(this.to);
	
	        if (this.from && !this.to) {
	          this.picker.el.classList.add(INCOMPLETE_RANGE_CLASS);
	        } else {
	          this.picker.el.classList.remove(INCOMPLETE_RANGE_CLASS);
	        }
	
	        this.picker.draw();
	      }
	    }
	  }, {
	    key: 'selectDate',
	    value: function selectDate(date) {
	      var emit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	
	      var oldDate = this.date;
	      var oldFrom = this.from;
	      var oldTo = this.to;
	
	      if (!this.isRange) {
	        this.date = date;
	        this.from = null;
	        this.to = null;
	      } else {
	        this.date = null;
	
	        if (this.isAttributeEnabled('from-focused')) {
	          this.from = date;
	        } else if (this.isAttributeEnabled('to-focused')) {
	          this.to = date;
	        } else if (!this.from) {
	          this.from = date;
	        } else if (!this.to) {
	          this.to = date;
	        } else {
	          this.from = date;
	          this.to = null;
	        }
	      }
	
	      if (this.from && this.to && this.from > this.to) {
	        var _ref = [this.to, this.from];
	        this.from = _ref[0];
	        this.to = _ref[1];
	      }
	
	      if ((0, _util.formatDateISO)(this.date) !== (0, _util.formatDateISO)(oldDate) || (0, _util.formatDateISO)(this.from) !== (0, _util.formatDateISO)(oldFrom) || (0, _util.formatDateISO)(this.to) !== (0, _util.formatDateISO)(oldTo)) {
	        this.updatePicker();
	      }
	
	      if (emit) {
	        this.emitChange();
	      }
	    }
	  }, {
	    key: 'emitChange',
	    value: function emitChange() {
	      var from = (0, _util.formatDateISO)(this.from);
	      var to = (0, _util.formatDateISO)(this.to);
	      var date = (0, _util.formatDateISO)(this.date);
	      var detail = this.isRange ? { from: from, to: to } : date;
	
	      if (detail) {
	        this.dispatchEvent(new CustomEvent('change', { detail: detail }));
	      }
	    }
	  }, {
	    key: 'emitResize',
	    value: function emitResize() {
	      this.dispatchEvent(new CustomEvent('resize'));
	    }
	  }, {
	    key: 'value',
	    set: function set(val) {
	      this.from = (0, _util.parseDate)(val && val.from);
	      this.to = (0, _util.parseDate)(val && val.to);
	      this.date = (0, _util.parseDate)(val);
	      this.updatePicker();
	    }
	  }, {
	    key: 'historyLengthInDays',
	    get: function get() {
	      return this.getAttribute('max-days');
	    }
	  }, {
	    key: 'isRange',
	    get: function get() {
	      return this.isAttributeEnabled('range');
	    }
	  }, {
	    key: 'isDoubleCalendar',
	    get: function get() {
	      return this.isAttributeEnabled('double-calendar');
	    }
	  }]);
	
	  return Calendar;
	}(_webcomponent2.default);
	
	document.registerElement('irb-calendar', Calendar);

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Pikaday
	 *
	 * Copyright © 2014 David Bushell | BSD & MIT license | https://github.com/dbushell/Pikaday
	 */
	
	(function (root, factory)
	{
	    'use strict';
	
	    var moment;
	    if (true) {
	        // CommonJS module
	        // Load moment.js as an optional dependency
	        try { moment = __webpack_require__(15); } catch (e) {}
	        module.exports = factory(moment);
	    } else if (typeof define === 'function' && define.amd) {
	        // AMD. Register as an anonymous module.
	        define(function (req)
	        {
	            // Load moment.js as an optional dependency
	            var id = 'moment';
	            try { moment = req(id); } catch (e) {}
	            return factory(moment);
	        });
	    } else {
	        root.Pikaday = factory(root.moment);
	    }
	}(this, function (moment)
	{
	    'use strict';
	
	    /**
	     * feature detection and helper functions
	     */
	    var hasMoment = typeof moment === 'function',
	
	    hasEventListeners = !!window.addEventListener,
	
	    document = window.document,
	
	    sto = window.setTimeout,
	
	    addEvent = function(el, e, callback, capture)
	    {
	        if (hasEventListeners) {
	            el.addEventListener(e, callback, !!capture);
	        } else {
	            el.attachEvent('on' + e, callback);
	        }
	    },
	
	    removeEvent = function(el, e, callback, capture)
	    {
	        if (hasEventListeners) {
	            el.removeEventListener(e, callback, !!capture);
	        } else {
	            el.detachEvent('on' + e, callback);
	        }
	    },
	
	    fireEvent = function(el, eventName, data)
	    {
	        var ev;
	
	        if (document.createEvent) {
	            ev = document.createEvent('HTMLEvents');
	            ev.initEvent(eventName, true, false);
	            ev = extend(ev, data);
	            el.dispatchEvent(ev);
	        } else if (document.createEventObject) {
	            ev = document.createEventObject();
	            ev = extend(ev, data);
	            el.fireEvent('on' + eventName, ev);
	        }
	    },
	
	    trim = function(str)
	    {
	        return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g,'');
	    },
	
	    hasClass = function(el, cn)
	    {
	        return (' ' + el.className + ' ').indexOf(' ' + cn + ' ') !== -1;
	    },
	
	    addClass = function(el, cn)
	    {
	        if (!hasClass(el, cn)) {
	            el.className = (el.className === '') ? cn : el.className + ' ' + cn;
	        }
	    },
	
	    removeClass = function(el, cn)
	    {
	        el.className = trim((' ' + el.className + ' ').replace(' ' + cn + ' ', ' '));
	    },
	
	    isArray = function(obj)
	    {
	        return (/Array/).test(Object.prototype.toString.call(obj));
	    },
	
	    isDate = function(obj)
	    {
	        return (/Date/).test(Object.prototype.toString.call(obj)) && !isNaN(obj.getTime());
	    },
	
	    isWeekend = function(date)
	    {
	        var day = date.getDay();
	        return day === 0 || day === 6;
	    },
	
	    isLeapYear = function(year)
	    {
	        // solution by Matti Virkkunen: http://stackoverflow.com/a/4881951
	        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
	    },
	
	    getDaysInMonth = function(year, month)
	    {
	        return [31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
	    },
	
	    setToStartOfDay = function(date)
	    {
	        if (isDate(date)) date.setHours(0,0,0,0);
	    },
	
	    compareDates = function(a,b)
	    {
	        // weak date comparison (use setToStartOfDay(date) to ensure correct result)
	        return a.getTime() === b.getTime();
	    },
	
	    extend = function(to, from, overwrite)
	    {
	        var prop, hasProp;
	        for (prop in from) {
	            hasProp = to[prop] !== undefined;
	            if (hasProp && typeof from[prop] === 'object' && from[prop] !== null && from[prop].nodeName === undefined) {
	                if (isDate(from[prop])) {
	                    if (overwrite) {
	                        to[prop] = new Date(from[prop].getTime());
	                    }
	                }
	                else if (isArray(from[prop])) {
	                    if (overwrite) {
	                        to[prop] = from[prop].slice(0);
	                    }
	                } else {
	                    to[prop] = extend({}, from[prop], overwrite);
	                }
	            } else if (overwrite || !hasProp) {
	                to[prop] = from[prop];
	            }
	        }
	        return to;
	    },
	
	    adjustCalendar = function(calendar) {
	        if (calendar.month < 0) {
	            calendar.year -= Math.ceil(Math.abs(calendar.month)/12);
	            calendar.month += 12;
	        }
	        if (calendar.month > 11) {
	            calendar.year += Math.floor(Math.abs(calendar.month)/12);
	            calendar.month -= 12;
	        }
	        return calendar;
	    },
	
	    /**
	     * defaults and localisation
	     */
	    defaults = {
	
	        // bind the picker to a form field
	        field: null,
	
	        // automatically show/hide the picker on `field` focus (default `true` if `field` is set)
	        bound: undefined,
	
	        // position of the datepicker, relative to the field (default to bottom & left)
	        // ('bottom' & 'left' keywords are not used, 'top' & 'right' are modifier on the bottom/left position)
	        position: 'bottom left',
	
	        // automatically fit in the viewport even if it means repositioning from the position option
	        reposition: true,
	
	        // the default output format for `.toString()` and `field` value
	        format: 'YYYY-MM-DD',
	
	        // the initial date to view when first opened
	        defaultDate: null,
	
	        // make the `defaultDate` the initial selected value
	        setDefaultDate: false,
	
	        // first day of week (0: Sunday, 1: Monday etc)
	        firstDay: 0,
	
	        // the default flag for moment's strict date parsing
	        formatStrict: false,
	
	        // the minimum/earliest date that can be selected
	        minDate: null,
	        // the maximum/latest date that can be selected
	        maxDate: null,
	
	        // number of years either side, or array of upper/lower range
	        yearRange: 10,
	
	        // show week numbers at head of row
	        showWeekNumber: false,
	
	        // used internally (don't config outside)
	        minYear: 0,
	        maxYear: 9999,
	        minMonth: undefined,
	        maxMonth: undefined,
	
	        startRange: null,
	        endRange: null,
	
	        isRTL: false,
	
	        // Additional text to append to the year in the calendar title
	        yearSuffix: '',
	
	        // Render the month after year in the calendar title
	        showMonthAfterYear: false,
	
	        // Render days of the calendar grid that fall in the next or previous month
	        showDaysInNextAndPreviousMonths: false,
	
	        // how many months are visible
	        numberOfMonths: 1,
	
	        // when numberOfMonths is used, this will help you to choose where the main calendar will be (default `left`, can be set to `right`)
	        // only used for the first display or when a selected date is not visible
	        mainCalendar: 'left',
	
	        // Specify a DOM element to render the calendar in
	        container: undefined,
	
	        // Blur field when date is selected
	        blurFieldOnSelect : true,
	
	        // internationalization
	        i18n: {
	            previousMonth : 'Previous Month',
	            nextMonth     : 'Next Month',
	            months        : ['January','February','March','April','May','June','July','August','September','October','November','December'],
	            weekdays      : ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],
	            weekdaysShort : ['Sun','Mon','Tue','Wed','Thu','Fri','Sat']
	        },
	
	        // Theme Classname
	        theme: null,
	
	        // events array
	        events: [],
	
	        // callback function
	        onSelect: null,
	        onOpen: null,
	        onClose: null,
	        onDraw: null
	    },
	
	
	    /**
	     * templating functions to abstract HTML rendering
	     */
	    renderDayName = function(opts, day, abbr)
	    {
	        day += opts.firstDay;
	        while (day >= 7) {
	            day -= 7;
	        }
	        return abbr ? opts.i18n.weekdaysShort[day] : opts.i18n.weekdays[day];
	    },
	
	    renderDay = function(opts)
	    {
	        var arr = [];
	        var ariaSelected = 'false';
	        if (opts.isEmpty) {
	            if (opts.showDaysInNextAndPreviousMonths) {
	                arr.push('is-outside-current-month');
	            } else {
	                return '<td class="is-empty"></td>';
	            }
	        }
	        if (opts.isDisabled) {
	            arr.push('is-disabled');
	        }
	        if (opts.isToday) {
	            arr.push('is-today');
	        }
	        if (opts.isSelected) {
	            arr.push('is-selected');
	            ariaSelected = 'true';
	        }
	        if (opts.hasEvent) {
	            arr.push('has-event');
	        }
	        if (opts.isInRange) {
	            arr.push('is-inrange');
	        }
	        if (opts.isStartRange) {
	            arr.push('is-startrange');
	        }
	        if (opts.isEndRange) {
	            arr.push('is-endrange');
	        }
	        return '<td data-day="' + opts.day + '" class="' + arr.join(' ') + '" aria-selected="' + ariaSelected + '">' +
	                 '<button class="pika-button pika-day" type="button" ' +
	                    'data-pika-year="' + opts.year + '" data-pika-month="' + opts.month + '" data-pika-day="' + opts.day + '">' +
	                        opts.day +
	                 '</button>' +
	               '</td>';
	    },
	
	    renderWeek = function (d, m, y) {
	        // Lifted from http://javascript.about.com/library/blweekyear.htm, lightly modified.
	        var onejan = new Date(y, 0, 1),
	            weekNum = Math.ceil((((new Date(y, m, d) - onejan) / 86400000) + onejan.getDay()+1)/7);
	        return '<td class="pika-week">' + weekNum + '</td>';
	    },
	
	    renderRow = function(days, isRTL)
	    {
	        return '<tr>' + (isRTL ? days.reverse() : days).join('') + '</tr>';
	    },
	
	    renderBody = function(rows)
	    {
	        return '<tbody>' + rows.join('') + '</tbody>';
	    },
	
	    renderHead = function(opts)
	    {
	        var i, arr = [];
	        if (opts.showWeekNumber) {
	            arr.push('<th></th>');
	        }
	        for (i = 0; i < 7; i++) {
	            arr.push('<th scope="col"><abbr title="' + renderDayName(opts, i) + '">' + renderDayName(opts, i, true) + '</abbr></th>');
	        }
	        return '<thead><tr>' + (opts.isRTL ? arr.reverse() : arr).join('') + '</tr></thead>';
	    },
	
	    renderTitle = function(instance, c, year, month, refYear, randId)
	    {
	        var i, j, arr,
	            opts = instance._o,
	            isMinYear = year === opts.minYear,
	            isMaxYear = year === opts.maxYear,
	            html = '<div id="' + randId + '" class="pika-title" role="heading" aria-live="assertive">',
	            monthHtml,
	            yearHtml,
	            prev = true,
	            next = true;
	
	        for (arr = [], i = 0; i < 12; i++) {
	            arr.push('<option value="' + (year === refYear ? i - c : 12 + i - c) + '"' +
	                (i === month ? ' selected="selected"': '') +
	                ((isMinYear && i < opts.minMonth) || (isMaxYear && i > opts.maxMonth) ? 'disabled="disabled"' : '') + '>' +
	                opts.i18n.months[i] + '</option>');
	        }
	
	        monthHtml = '<div class="pika-label">' + opts.i18n.months[month] + '<select class="pika-select pika-select-month" tabindex="-1">' + arr.join('') + '</select></div>';
	
	        if (isArray(opts.yearRange)) {
	            i = opts.yearRange[0];
	            j = opts.yearRange[1] + 1;
	        } else {
	            i = year - opts.yearRange;
	            j = 1 + year + opts.yearRange;
	        }
	
	        for (arr = []; i < j && i <= opts.maxYear; i++) {
	            if (i >= opts.minYear) {
	                arr.push('<option value="' + i + '"' + (i === year ? ' selected="selected"': '') + '>' + (i) + '</option>');
	            }
	        }
	        yearHtml = '<div class="pika-label">' + year + opts.yearSuffix + '<select class="pika-select pika-select-year" tabindex="-1">' + arr.join('') + '</select></div>';
	
	        if (opts.showMonthAfterYear) {
	            html += yearHtml + monthHtml;
	        } else {
	            html += monthHtml + yearHtml;
	        }
	
	        if (isMinYear && (month === 0 || opts.minMonth >= month)) {
	            prev = false;
	        }
	
	        if (isMaxYear && (month === 11 || opts.maxMonth <= month)) {
	            next = false;
	        }
	
	        if (c === 0) {
	            html += '<button class="pika-prev' + (prev ? '' : ' is-disabled') + '" type="button">' + opts.i18n.previousMonth + '</button>';
	        }
	        if (c === (instance._o.numberOfMonths - 1) ) {
	            html += '<button class="pika-next' + (next ? '' : ' is-disabled') + '" type="button">' + opts.i18n.nextMonth + '</button>';
	        }
	
	        return html += '</div>';
	    },
	
	    renderTable = function(opts, data, randId)
	    {
	        return '<table cellpadding="0" cellspacing="0" class="pika-table" role="grid" aria-labelledby="' + randId + '">' + renderHead(opts) + renderBody(data) + '</table>';
	    },
	
	
	    /**
	     * Pikaday constructor
	     */
	    Pikaday = function(options)
	    {
	        var self = this,
	            opts = self.config(options);
	
	        self._onMouseDown = function(e)
	        {
	            if (!self._v) {
	                return;
	            }
	            e = e || window.event;
	            var target = e.target || e.srcElement;
	            if (!target) {
	                return;
	            }
	
	            if (!hasClass(target, 'is-disabled')) {
	                if (hasClass(target, 'pika-button') && !hasClass(target, 'is-empty') && !hasClass(target.parentNode, 'is-disabled')) {
	                    self.setDate(new Date(target.getAttribute('data-pika-year'), target.getAttribute('data-pika-month'), target.getAttribute('data-pika-day')));
	                    if (opts.bound) {
	                        sto(function() {
	                            self.hide();
	                            if (opts.blurFieldOnSelect && opts.field) {
	                                opts.field.blur();
	                            }
	                        }, 100);
	                    }
	                }
	                else if (hasClass(target, 'pika-prev')) {
	                    self.prevMonth();
	                }
	                else if (hasClass(target, 'pika-next')) {
	                    self.nextMonth();
	                }
	            }
	            if (!hasClass(target, 'pika-select')) {
	                // if this is touch event prevent mouse events emulation
	                if (e.preventDefault) {
	                    e.preventDefault();
	                } else {
	                    e.returnValue = false;
	                    return false;
	                }
	            } else {
	                self._c = true;
	            }
	        };
	
	        self._onChange = function(e)
	        {
	            e = e || window.event;
	            var target = e.target || e.srcElement;
	            if (!target) {
	                return;
	            }
	            if (hasClass(target, 'pika-select-month')) {
	                self.gotoMonth(target.value);
	            }
	            else if (hasClass(target, 'pika-select-year')) {
	                self.gotoYear(target.value);
	            }
	        };
	
	        self._onKeyChange = function(e)
	        {
	            e = e || window.event;
	
	            if (self.isVisible()) {
	
	                switch(e.keyCode){
	                    case 13:
	                    case 27:
	                        opts.field.blur();
	                        break;
	                    case 37:
	                        e.preventDefault();
	                        self.adjustDate('subtract', 1);
	                        break;
	                    case 38:
	                        self.adjustDate('subtract', 7);
	                        break;
	                    case 39:
	                        self.adjustDate('add', 1);
	                        break;
	                    case 40:
	                        self.adjustDate('add', 7);
	                        break;
	                }
	            }
	        };
	
	        self._onInputChange = function(e)
	        {
	            var date;
	
	            if (e.firedBy === self) {
	                return;
	            }
	            if (hasMoment) {
	                date = moment(opts.field.value, opts.format, opts.formatStrict);
	                date = (date && date.isValid()) ? date.toDate() : null;
	            }
	            else {
	                date = new Date(Date.parse(opts.field.value));
	            }
	            if (isDate(date)) {
	              self.setDate(date);
	            }
	            if (!self._v) {
	                self.show();
	            }
	        };
	
	        self._onInputFocus = function()
	        {
	            self.show();
	        };
	
	        self._onInputClick = function()
	        {
	            self.show();
	        };
	
	        self._onInputBlur = function()
	        {
	            // IE allows pika div to gain focus; catch blur the input field
	            var pEl = document.activeElement;
	            do {
	                if (hasClass(pEl, 'pika-single')) {
	                    return;
	                }
	            }
	            while ((pEl = pEl.parentNode));
	
	            if (!self._c) {
	                self._b = sto(function() {
	                    self.hide();
	                }, 50);
	            }
	            self._c = false;
	        };
	
	        self._onClick = function(e)
	        {
	            e = e || window.event;
	            var target = e.target || e.srcElement,
	                pEl = target;
	            if (!target) {
	                return;
	            }
	            if (!hasEventListeners && hasClass(target, 'pika-select')) {
	                if (!target.onchange) {
	                    target.setAttribute('onchange', 'return;');
	                    addEvent(target, 'change', self._onChange);
	                }
	            }
	            do {
	                if (hasClass(pEl, 'pika-single') || pEl === opts.trigger) {
	                    return;
	                }
	            }
	            while ((pEl = pEl.parentNode));
	            if (self._v && target !== opts.trigger && pEl !== opts.trigger) {
	                self.hide();
	            }
	        };
	
	        self.el = document.createElement('div');
	        self.el.className = 'pika-single' + (opts.isRTL ? ' is-rtl' : '') + (opts.theme ? ' ' + opts.theme : '');
	
	        addEvent(self.el, 'mousedown', self._onMouseDown, true);
	        addEvent(self.el, 'touchend', self._onMouseDown, true);
	        addEvent(self.el, 'change', self._onChange);
	        addEvent(document, 'keydown', self._onKeyChange);
	
	        if (opts.field) {
	            if (opts.container) {
	                opts.container.appendChild(self.el);
	            } else if (opts.bound) {
	                document.body.appendChild(self.el);
	            } else {
	                opts.field.parentNode.insertBefore(self.el, opts.field.nextSibling);
	            }
	            addEvent(opts.field, 'change', self._onInputChange);
	
	            if (!opts.defaultDate) {
	                if (hasMoment && opts.field.value) {
	                    opts.defaultDate = moment(opts.field.value, opts.format).toDate();
	                } else {
	                    opts.defaultDate = new Date(Date.parse(opts.field.value));
	                }
	                opts.setDefaultDate = true;
	            }
	        }
	
	        var defDate = opts.defaultDate;
	
	        if (isDate(defDate)) {
	            if (opts.setDefaultDate) {
	                self.setDate(defDate, true);
	            } else {
	                self.gotoDate(defDate);
	            }
	        } else {
	            self.gotoDate(new Date());
	        }
	
	        if (opts.bound) {
	            this.hide();
	            self.el.className += ' is-bound';
	            addEvent(opts.trigger, 'click', self._onInputClick);
	            addEvent(opts.trigger, 'focus', self._onInputFocus);
	            addEvent(opts.trigger, 'blur', self._onInputBlur);
	        } else {
	            this.show();
	        }
	    };
	
	
	    /**
	     * public Pikaday API
	     */
	    Pikaday.prototype = {
	
	
	        /**
	         * configure functionality
	         */
	        config: function(options)
	        {
	            if (!this._o) {
	                this._o = extend({}, defaults, true);
	            }
	
	            var opts = extend(this._o, options, true);
	
	            opts.isRTL = !!opts.isRTL;
	
	            opts.field = (opts.field && opts.field.nodeName) ? opts.field : null;
	
	            opts.theme = (typeof opts.theme) === 'string' && opts.theme ? opts.theme : null;
	
	            opts.bound = !!(opts.bound !== undefined ? opts.field && opts.bound : opts.field);
	
	            opts.trigger = (opts.trigger && opts.trigger.nodeName) ? opts.trigger : opts.field;
	
	            opts.disableWeekends = !!opts.disableWeekends;
	
	            opts.disableDayFn = (typeof opts.disableDayFn) === 'function' ? opts.disableDayFn : null;
	
	            var nom = parseInt(opts.numberOfMonths, 10) || 1;
	            opts.numberOfMonths = nom > 4 ? 4 : nom;
	
	            if (!isDate(opts.minDate)) {
	                opts.minDate = false;
	            }
	            if (!isDate(opts.maxDate)) {
	                opts.maxDate = false;
	            }
	            if ((opts.minDate && opts.maxDate) && opts.maxDate < opts.minDate) {
	                opts.maxDate = opts.minDate = false;
	            }
	            if (opts.minDate) {
	                this.setMinDate(opts.minDate);
	            }
	            if (opts.maxDate) {
	                this.setMaxDate(opts.maxDate);
	            }
	
	            if (isArray(opts.yearRange)) {
	                var fallback = new Date().getFullYear() - 10;
	                opts.yearRange[0] = parseInt(opts.yearRange[0], 10) || fallback;
	                opts.yearRange[1] = parseInt(opts.yearRange[1], 10) || fallback;
	            } else {
	                opts.yearRange = Math.abs(parseInt(opts.yearRange, 10)) || defaults.yearRange;
	                if (opts.yearRange > 100) {
	                    opts.yearRange = 100;
	                }
	            }
	
	            return opts;
	        },
	
	        /**
	         * return a formatted string of the current selection (using Moment.js if available)
	         */
	        toString: function(format)
	        {
	            return !isDate(this._d) ? '' : hasMoment ? moment(this._d).format(format || this._o.format) : this._d.toDateString();
	        },
	
	        /**
	         * return a Moment.js object of the current selection (if available)
	         */
	        getMoment: function()
	        {
	            return hasMoment ? moment(this._d) : null;
	        },
	
	        /**
	         * set the current selection from a Moment.js object (if available)
	         */
	        setMoment: function(date, preventOnSelect)
	        {
	            if (hasMoment && moment.isMoment(date)) {
	                this.setDate(date.toDate(), preventOnSelect);
	            }
	        },
	
	        /**
	         * return a Date object of the current selection with fallback for the current date
	         */
	        getDate: function()
	        {
	            return isDate(this._d) ? new Date(this._d.getTime()) : new Date();
	        },
	
	        /**
	         * set the current selection
	         */
	        setDate: function(date, preventOnSelect)
	        {
	            if (!date) {
	                this._d = null;
	
	                if (this._o.field) {
	                    this._o.field.value = '';
	                    fireEvent(this._o.field, 'change', { firedBy: this });
	                }
	
	                return this.draw();
	            }
	            if (typeof date === 'string') {
	                date = new Date(Date.parse(date));
	            }
	            if (!isDate(date)) {
	                return;
	            }
	
	            var min = this._o.minDate,
	                max = this._o.maxDate;
	
	            if (isDate(min) && date < min) {
	                date = min;
	            } else if (isDate(max) && date > max) {
	                date = max;
	            }
	
	            this._d = new Date(date.getTime());
	            setToStartOfDay(this._d);
	            this.gotoDate(this._d);
	
	            if (this._o.field) {
	                this._o.field.value = this.toString();
	                fireEvent(this._o.field, 'change', { firedBy: this });
	            }
	            if (!preventOnSelect && typeof this._o.onSelect === 'function') {
	                this._o.onSelect.call(this, this.getDate());
	            }
	        },
	
	        /**
	         * change view to a specific date
	         */
	        gotoDate: function(date)
	        {
	            var newCalendar = true;
	
	            if (!isDate(date)) {
	                return;
	            }
	
	            if (this.calendars) {
	                var firstVisibleDate = new Date(this.calendars[0].year, this.calendars[0].month, 1),
	                    lastVisibleDate = new Date(this.calendars[this.calendars.length-1].year, this.calendars[this.calendars.length-1].month, 1),
	                    visibleDate = date.getTime();
	                // get the end of the month
	                lastVisibleDate.setMonth(lastVisibleDate.getMonth()+1);
	                lastVisibleDate.setDate(lastVisibleDate.getDate()-1);
	                newCalendar = (visibleDate < firstVisibleDate.getTime() || lastVisibleDate.getTime() < visibleDate);
	            }
	
	            if (newCalendar) {
	                this.calendars = [{
	                    month: date.getMonth(),
	                    year: date.getFullYear()
	                }];
	                if (this._o.mainCalendar === 'right') {
	                    this.calendars[0].month += 1 - this._o.numberOfMonths;
	                }
	            }
	
	            this.adjustCalendars();
	        },
	
	        adjustDate: function(sign, days) {
	
	            var day = this.getDate();
	            var difference = parseInt(days)*24*60*60*1000;
	
	            var newDay;
	
	            if (sign === 'add') {
	                newDay = new Date(day.valueOf() + difference);
	            } else if (sign === 'subtract') {
	                newDay = new Date(day.valueOf() - difference);
	            }
	
	            if (hasMoment) {
	                if (sign === 'add') {
	                    newDay = moment(day).add(days, "days").toDate();
	                } else if (sign === 'subtract') {
	                    newDay = moment(day).subtract(days, "days").toDate();
	                }
	            }
	
	            this.setDate(newDay);
	        },
	
	        adjustCalendars: function() {
	            this.calendars[0] = adjustCalendar(this.calendars[0]);
	            for (var c = 1; c < this._o.numberOfMonths; c++) {
	                this.calendars[c] = adjustCalendar({
	                    month: this.calendars[0].month + c,
	                    year: this.calendars[0].year
	                });
	            }
	            this.draw();
	        },
	
	        gotoToday: function()
	        {
	            this.gotoDate(new Date());
	        },
	
	        /**
	         * change view to a specific month (zero-index, e.g. 0: January)
	         */
	        gotoMonth: function(month)
	        {
	            if (!isNaN(month)) {
	                this.calendars[0].month = parseInt(month, 10);
	                this.adjustCalendars();
	            }
	        },
	
	        nextMonth: function()
	        {
	            this.calendars[0].month++;
	            this.adjustCalendars();
	        },
	
	        prevMonth: function()
	        {
	            this.calendars[0].month--;
	            this.adjustCalendars();
	        },
	
	        /**
	         * change view to a specific full year (e.g. "2012")
	         */
	        gotoYear: function(year)
	        {
	            if (!isNaN(year)) {
	                this.calendars[0].year = parseInt(year, 10);
	                this.adjustCalendars();
	            }
	        },
	
	        /**
	         * change the minDate
	         */
	        setMinDate: function(value)
	        {
	            if(value instanceof Date) {
	                setToStartOfDay(value);
	                this._o.minDate = value;
	                this._o.minYear  = value.getFullYear();
	                this._o.minMonth = value.getMonth();
	            } else {
	                this._o.minDate = defaults.minDate;
	                this._o.minYear  = defaults.minYear;
	                this._o.minMonth = defaults.minMonth;
	                this._o.startRange = defaults.startRange;
	            }
	
	            this.draw();
	        },
	
	        /**
	         * change the maxDate
	         */
	        setMaxDate: function(value)
	        {
	            if(value instanceof Date) {
	                setToStartOfDay(value);
	                this._o.maxDate = value;
	                this._o.maxYear = value.getFullYear();
	                this._o.maxMonth = value.getMonth();
	            } else {
	                this._o.maxDate = defaults.maxDate;
	                this._o.maxYear = defaults.maxYear;
	                this._o.maxMonth = defaults.maxMonth;
	                this._o.endRange = defaults.endRange;
	            }
	
	            this.draw();
	        },
	
	        setStartRange: function(value)
	        {
	            this._o.startRange = value;
	        },
	
	        setEndRange: function(value)
	        {
	            this._o.endRange = value;
	        },
	
	        /**
	         * refresh the HTML
	         */
	        draw: function(force)
	        {
	            if (!this._v && !force) {
	                return;
	            }
	            var opts = this._o,
	                minYear = opts.minYear,
	                maxYear = opts.maxYear,
	                minMonth = opts.minMonth,
	                maxMonth = opts.maxMonth,
	                html = '',
	                randId;
	
	            if (this._y <= minYear) {
	                this._y = minYear;
	                if (!isNaN(minMonth) && this._m < minMonth) {
	                    this._m = minMonth;
	                }
	            }
	            if (this._y >= maxYear) {
	                this._y = maxYear;
	                if (!isNaN(maxMonth) && this._m > maxMonth) {
	                    this._m = maxMonth;
	                }
	            }
	
	            randId = 'pika-title-' + Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 2);
	
	            for (var c = 0; c < opts.numberOfMonths; c++) {
	                html += '<div class="pika-lendar">' + renderTitle(this, c, this.calendars[c].year, this.calendars[c].month, this.calendars[0].year, randId) + this.render(this.calendars[c].year, this.calendars[c].month, randId) + '</div>';
	            }
	
	            this.el.innerHTML = html;
	
	            if (opts.bound) {
	                if(opts.field.type !== 'hidden') {
	                    sto(function() {
	                        opts.trigger.focus();
	                    }, 1);
	                }
	            }
	
	            if (typeof this._o.onDraw === 'function') {
	                this._o.onDraw(this);
	            }
	
	            if (opts.bound) {
	                // let the screen reader user know to use arrow keys
	                opts.field.setAttribute('aria-label', 'Use the arrow keys to pick a date');
	            }
	        },
	
	        adjustPosition: function()
	        {
	            var field, pEl, width, height, viewportWidth, viewportHeight, scrollTop, left, top, clientRect;
	
	            if (this._o.container) return;
	
	            this.el.style.position = 'absolute';
	
	            field = this._o.trigger;
	            pEl = field;
	            width = this.el.offsetWidth;
	            height = this.el.offsetHeight;
	            viewportWidth = window.innerWidth || document.documentElement.clientWidth;
	            viewportHeight = window.innerHeight || document.documentElement.clientHeight;
	            scrollTop = window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;
	
	            if (typeof field.getBoundingClientRect === 'function') {
	                clientRect = field.getBoundingClientRect();
	                left = clientRect.left + window.pageXOffset;
	                top = clientRect.bottom + window.pageYOffset;
	            } else {
	                left = pEl.offsetLeft;
	                top  = pEl.offsetTop + pEl.offsetHeight;
	                while((pEl = pEl.offsetParent)) {
	                    left += pEl.offsetLeft;
	                    top  += pEl.offsetTop;
	                }
	            }
	
	            // default position is bottom & left
	            if ((this._o.reposition && left + width > viewportWidth) ||
	                (
	                    this._o.position.indexOf('right') > -1 &&
	                    left - width + field.offsetWidth > 0
	                )
	            ) {
	                left = left - width + field.offsetWidth;
	            }
	            if ((this._o.reposition && top + height > viewportHeight + scrollTop) ||
	                (
	                    this._o.position.indexOf('top') > -1 &&
	                    top - height - field.offsetHeight > 0
	                )
	            ) {
	                top = top - height - field.offsetHeight;
	            }
	
	            this.el.style.left = left + 'px';
	            this.el.style.top = top + 'px';
	        },
	
	        /**
	         * render HTML for a particular month
	         */
	        render: function(year, month, randId)
	        {
	            var opts   = this._o,
	                now    = new Date(),
	                days   = getDaysInMonth(year, month),
	                before = new Date(year, month, 1).getDay(),
	                data   = [],
	                row    = [];
	            setToStartOfDay(now);
	            if (opts.firstDay > 0) {
	                before -= opts.firstDay;
	                if (before < 0) {
	                    before += 7;
	                }
	            }
	            var previousMonth = month === 0 ? 11 : month - 1,
	                nextMonth = month === 11 ? 0 : month + 1,
	                yearOfPreviousMonth = month === 0 ? year - 1 : year,
	                yearOfNextMonth = month === 11 ? year + 1 : year,
	                daysInPreviousMonth = getDaysInMonth(yearOfPreviousMonth, previousMonth);
	            var cells = days + before,
	                after = cells;
	            while(after > 7) {
	                after -= 7;
	            }
	            cells += 7 - after;
	            for (var i = 0, r = 0; i < cells; i++)
	            {
	                var day = new Date(year, month, 1 + (i - before)),
	                    isSelected = isDate(this._d) ? compareDates(day, this._d) : false,
	                    isToday = compareDates(day, now),
	                    hasEvent = opts.events.indexOf(day.toDateString()) !== -1 ? true : false,
	                    isEmpty = i < before || i >= (days + before),
	                    dayNumber = 1 + (i - before),
	                    monthNumber = month,
	                    yearNumber = year,
	                    isStartRange = opts.startRange && compareDates(opts.startRange, day),
	                    isEndRange = opts.endRange && compareDates(opts.endRange, day),
	                    isInRange = opts.startRange && opts.endRange && opts.startRange < day && day < opts.endRange,
	                    isDisabled = (opts.minDate && day < opts.minDate) ||
	                                 (opts.maxDate && day > opts.maxDate) ||
	                                 (opts.disableWeekends && isWeekend(day)) ||
	                                 (opts.disableDayFn && opts.disableDayFn(day));
	
	                if (isEmpty) {
	                    if (i < before) {
	                        dayNumber = daysInPreviousMonth + dayNumber;
	                        monthNumber = previousMonth;
	                        yearNumber = yearOfPreviousMonth;
	                    } else {
	                        dayNumber = dayNumber - days;
	                        monthNumber = nextMonth;
	                        yearNumber = yearOfNextMonth;
	                    }
	                }
	
	                var dayConfig = {
	                        day: dayNumber,
	                        month: monthNumber,
	                        year: yearNumber,
	                        hasEvent: hasEvent,
	                        isSelected: isSelected,
	                        isToday: isToday,
	                        isDisabled: isDisabled,
	                        isEmpty: isEmpty,
	                        isStartRange: isStartRange,
	                        isEndRange: isEndRange,
	                        isInRange: isInRange,
	                        showDaysInNextAndPreviousMonths: opts.showDaysInNextAndPreviousMonths
	                    };
	
	                row.push(renderDay(dayConfig));
	
	                if (++r === 7) {
	                    if (opts.showWeekNumber) {
	                        row.unshift(renderWeek(i - before, month, year));
	                    }
	                    data.push(renderRow(row, opts.isRTL));
	                    row = [];
	                    r = 0;
	                }
	            }
	            return renderTable(opts, data, randId);
	        },
	
	        isVisible: function()
	        {
	            return this._v;
	        },
	
	        show: function()
	        {
	            if (!this.isVisible()) {
	                this._v = true;
	                this.draw();
	                if (this._o.bound) {
	                    addEvent(document, 'click', this._onClick);
	                    this.adjustPosition();
	                }
	                removeClass(this.el, 'is-hidden');
	                if (typeof this._o.onOpen === 'function') {
	                    this._o.onOpen.call(this);
	                }
	            }
	        },
	
	        hide: function()
	        {
	            var v = this._v;
	            if (v !== false) {
	                if (this._o.bound) {
	                    removeEvent(document, 'click', this._onClick);
	                }
	                this.el.style.position = 'static'; // reset
	                this.el.style.left = 'auto';
	                this.el.style.top = 'auto';
	                addClass(this.el, 'is-hidden');
	                this._v = false;
	                if (v !== undefined && typeof this._o.onClose === 'function') {
	                    this._o.onClose.call(this);
	                }
	            }
	        },
	
	        /**
	         * GAME OVER
	         */
	        destroy: function()
	        {
	            this.hide();
	            removeEvent(this.el, 'mousedown', this._onMouseDown, true);
	            removeEvent(this.el, 'touchend', this._onMouseDown, true);
	            removeEvent(this.el, 'change', this._onChange);
	            if (this._o.field) {
	                removeEvent(this._o.field, 'change', this._onInputChange);
	                if (this._o.bound) {
	                    removeEvent(this._o.trigger, 'click', this._onInputClick);
	                    removeEvent(this._o.trigger, 'focus', this._onInputFocus);
	                    removeEvent(this._o.trigger, 'blur', this._onInputBlur);
	                }
	            }
	            if (this.el.parentNode) {
	                this.el.parentNode.removeChild(this.el);
	            }
	        }
	
	    };
	
	    return Pikaday;
	
	}));


/***/ },
/* 365 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */,
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, report) {
	    var h = __webpack_require__(232).h;
	    return {
	      value: h("div", {
	        "class": {
	          'builder-section': true,
	          'builder-time': true,
	          'irb-learn-disabled': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(report.sections.time.clauses.length ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'clause-container': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'clause-language': true,
	                'preposition': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("in the");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'clause-container': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'clause-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'header-label': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Time");;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'clause-body': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'control-container': true
	                }
	              }, [$component.child('builder-time-edit-control', {
	                attrs: {
	                  'clause-index': 0
	                }
	              }) || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat($helpers.showUpsellModal() ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-wrapper': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("mp-upsell-popup", {
	                "attrs": {
	                  feature: "date-range",
	                  open: $helpers.showUpsellModal()
	                },
	                "on": {
	                  change: $helpers.closeUpsellModal
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 371 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 372 */,
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _clause = __webpack_require__(14);
	
	var _util = __webpack_require__(8);
	
	var _index = __webpack_require__(374);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(375);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TYPE_FORMAT_MAP = {
	  boolean: 'true / false',
	  datetime: 'date',
	  list: 'list',
	  number: 'number',
	  string: 'string'
	};
	
	document.registerElement('typecast-pane', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'isPaneOpen',
	    value: function isPaneOpen() {
	      return this.state.builderPane.isEditingTypecast && this.app.isEditingClause(this.section, this.clauseIndex);
	    }
	  }, {
	    key: 'getClausePropertyType',
	    value: function getClausePropertyType() {
	      var clause = this.state.report.sections.getClause(this.section, this.clauseIndex);
	      return clause && clause.propertyType;
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        helpers: {
	          avaliableTypes: function avaliableTypes() {
	            var avaliableTypes = Array.from(new Set(_clause.GroupClause.PROPERTY_TYPECASTS.concat(_this2.getClausePropertyType())));
	            return avaliableTypes.map(function (type) {
	              return {
	                icon: (0, _util.getIconForPropertyType)(type),
	                name: TYPE_FORMAT_MAP[type],
	                type: type
	              };
	            });
	          },
	          clickedType: function clickedType(ev, item) {
	            ev.stopPropagation();
	            var typeCast = _this2.getClausePropertyType() === item.type ? null : item.type;
	            _this2.app.updateStageClause({ typeCast: typeCast, unit: null });
	            _this2.app.commitStageClause();
	            _this2.app.updateBuilder({ isEditingTypecast: false });
	          },
	          isPaneOpen: function isPaneOpen() {
	            return _this2.isPaneOpen();
	          },
	          menuChange: function menuChange(ev) {
	            if (ev.detail && ev.detail.state === 'closed') {
	              _this2.app.updateBuilder({ isEditingTypecast: false });
	              if (_this2.app.isEditingClause(_this2.section, _this2.clauseIndex)) {
	                _this2.app.stopEditingClause();
	              }
	            }
	          }
	        },
	        template: _index2.default
	      };
	    }
	  }, {
	    key: 'clauseIndex',
	    get: function get() {
	      return Number(this.getAttribute('clause-index'));
	    }
	  }, {
	    key: 'section',
	    get: function get() {
	      return this.getAttribute('section');
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Object, builderPane, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['filtered-options-lists'] = function (lists) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var hasResults = false;
	        __jade_nodes = __jade_nodes.concat(lists.reduce(function (__each_nodes, listOptions, $index) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(listOptions.list.length ? function () {
	              var __jade_nodes = [];
	              hasResults += true;
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'builder-label': true
	                }
	              }, [listOptions.label || '']));
	              __jade_nodes = __jade_nodes.concat(listOptions.resourceType == "event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['event-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedEvent: $helpers.clickedEvent,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : listOptions.resourceType == "property" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, listOptions.list, listOptions.itemOptions || {
	                  clickedProperty: $helpers.clickedProperty,
	                  hideLoader: true
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	        }, []));
	        __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("li", {
	            "class": {
	              'list-option': true,
	              'list-empty': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['generic-options-list-item'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: options.onclick
	          },
	          "class": Object.assign({}, _defineProperty({}, options.class, true), {
	            'list-option': true,
	            'generic-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	            noIcon: true
	          }));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['secondary-action-pill'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'option-secondary-action': true,
	            'irb-learn-disabled': true,
	            'pill': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("span", {
	            "class": {
	              'secondary-label': true
	            }
	          }, [label || '']));
	          __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['event-list'] = function (events, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: $helpers.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["group-by"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var eventsSource = options.source === "events";
	          __jade_nodes = __jade_nodes.concat(events.reduce(function (__each_nodes, mpEvent, $index) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              var renamedMpEvent = util.renameEvent(mpEvent.name);
	              var isSelected = eventsSource && mpEvent.name === selected;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "attrs": {
	                  title: mpEvent.name
	                },
	                "on": {
	                  click: isSelected ? null : function () {
	                    return options.clickedEvent(mpEvent);
	                  }
	                },
	                "class": Object.assign({}, {
	                  'list-option-selected': isSelected,
	                  'irb-learn-disabled': util.isSpecialEvent(mpEvent)
	                }, {
	                  'list-option': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, renamedMpEvent, {
	                  icon: util.getIconForEvent(mpEvent),
	                  matches: mpEvent.matches
	                }));
	                __jade_nodes = __jade_nodes.concat(options.showPill ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['secondary-action-pill'].call(this, 'Properties', {
	                    onclick: function onclick(ev) {
	                      return options.clickedEventProperties(ev, mpEvent);
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-list'] = function (properties, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": Object.assign({}, util.extend({
	            'show-loader': !options.hideLoader
	          }, util.learnClasses({
	            disabledSteps: ["choose-event", "compare-event"]
	          })), {
	            'screen-options-list': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var selected = options.selected;
	          var source = options.source;
	          __jade_nodes = __jade_nodes.concat(properties.length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(properties.reduce(function (__each_nodes, property, $index) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                var label = util.renameProperty(property.name) || property.name;
	                var isSelected = property.resourceType === source && property.name === selected;
	                __jade_nodes = __jade_nodes.concat(h("li", {
	                  "on": {
	                    click: isSelected && property.type !== "datetime" ? null : function (ev) {
	                      return options.clickedProperty(ev, property);
	                    }
	                  },
	                  "class": Object.assign({}, _defineProperty({
	                    'list-option-selected': isSelected
	                  }, property.type, true), {
	                    'list-option': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(jade_mixins['screen-option'].call(this, label, {
	                    icon: property.icon || util.getIconForProperty(property),
	                    matches: property.matches
	                  }));
	                  __jade_nodes = __jade_nodes.concat(options.caret || options.conditionalCaret && options.conditionalCaret(property, isSelected) ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(jade_mixins['small-caret-icon'].call(this));;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(options.loading ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(jade_mixins['pane-loader'].call(this));;
	              return __jade_nodes;
	            }.call(this) : function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": {
	                  'list-option': true,
	                  'list-empty': true
	                }
	              }, [options.listEmptyMessage || "No properties available" || '']));;
	              return __jade_nodes;
	            }.call(this));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['property-screen-body'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(options.resourceTypes ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'resource-type-control': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-toggle", {
	              "attrs": {
	                square: true,
	                small: true,
	                selected: options.selectedResourceType
	              },
	              "on": {
	                select: function select(ev) {
	                  return options.clickedResourceType(ev.detail.selected);
	                }
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(options.resourceTypes.reduce(function (__each_nodes, type, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("mp-toggle-option", {
	                    "attrs": {
	                      value: type
	                    }
	                  }, [util.formatResourceType(type) || '']));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            scroll: options.scrolledList
	          },
	          "class": {
	            'screen-list-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          var hasResults = false;
	          __jade_nodes = __jade_nodes.concat(options.propertySections.reduce(function (__each_nodes, section, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(section.list.length ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(hasResults === true ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'builder-divider': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'builder-label': true
	                  }
	                }, [section.label || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, section.list, options));
	                hasResults = true;;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(!hasResults ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("li", {
	              "class": {
	                'list-option': true,
	                'list-empty': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat("Your search returned no results");;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-footer-button'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("button", {
	          "on": {
	            click: options.onclick
	          },
	          "class": {
	            'screen-footer': true
	          }
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-option'] = function (label, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(!options.noIcon ? function () {
	          var __jade_nodes = [];
	          var icon = options.icon;
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'option-icon': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: icon, empty: !icon
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'option-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.matches ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, options.matches));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": {
	                'label': true
	              }
	            }, [label || '']));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['screen-title'] = function (title, options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'screen-title': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(options.upsell ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'upsell-header': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'lighting-bolt'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'upsell-text': true
	                }
	              }, [title || '']));
	              __jade_nodes = __jade_nodes.concat(h("a", {
	                "attrs": {
	                  href: '/pricing',
	                  target: '_blank'
	                },
	                "class": {
	                  'upsell-text': true,
	                  'upgrade-link': true
	                }
	              }, [options.upsellLinkText || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(title ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "attrs": {
	                  title: title
	                },
	                "class": {
	                  'title-label': true
	                }
	              }, [title || '']));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(block && block());
	          __jade_nodes = __jade_nodes.concat(options.backButton && builderPane.screens.length > 1 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.clickedBackButton
	              },
	              "class": {
	                'title-button': true,
	                'back-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'caret-left'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(options.closeButton ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.closePane
	              },
	              "class": {
	                'title-button': true,
	                'close-button': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'x'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['small-caret-icon'] = function (options) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        options = options || {};
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'caret-icon': true,
	            'small-caret': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: "caret-" + (options.direction || 'right')
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['pane-loader'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'loading-properties': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    return {
	      value: h("mp-drop-menu", {
	        "attrs": {
	          open: $helpers.isPaneOpen()
	        },
	        "on": {
	          change: $helpers.menuChange
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(jade_mixins['property-list'].call(this, $helpers.avaliableTypes(), {
	          clickedProperty: $helpers.clickedType
	        }));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "builderPane" in locals ? locals.builderPane : typeof builderPane !== "undefined" ? builderPane : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 375 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 376 */,
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _chartUtil = __webpack_require__(378);
	
	var _util = __webpack_require__(8);
	
	__webpack_require__(379);
	
	__webpack_require__(391);
	
	var _index = __webpack_require__(435);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(436);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var AVAILABLE_ANALYSES = {
	  Bar: {
	    linear: true,
	    logarithmic: true,
	    rolling: false,
	    cumulative: false
	  },
	  Line: {
	    linear: true,
	    logarithmic: true,
	    rolling: true,
	    cumulative: true
	  },
	  Table: {
	    linear: true,
	    logarithmic: false,
	    rolling: false,
	    cumulative: false
	  },
	  'Stacked bar': {
	    linear: true,
	    logarithmic: true,
	    rolling: false,
	    cumulative: false
	  },
	  'Stacked line': {
	    linear: true,
	    logarithmic: true,
	    rolling: true,
	    cumulative: true
	  }
	};
	var VALUE_TOGGLE_AVAILABLE = {
	  Bar: true,
	  Line: false,
	  Table: true,
	  'Stacked bar': true,
	  'Stacked line': true
	};
	
	document.registerElement('irb-result', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'isAnalysisEnabled',
	    value: function isAnalysisEnabled(analysis) {
	      var chartName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.selectedChartName();
	
	      return AVAILABLE_ANALYSES[chartName][analysis];
	    }
	  }, {
	    key: 'isValueToggleEnabled',
	    value: function isValueToggleEnabled() {
	      var chartName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.selectedChartName();
	
	      return VALUE_TOGGLE_AVAILABLE[chartName];
	    }
	
	    // TODO just put this in state
	
	  }, {
	    key: 'selectedChartName',
	    value: function selectedChartName() {
	      return (0, _chartUtil.formattedChartName)(this.state.report.displayOptions.chartType, this.state.report.displayOptions.plotStyle);
	    }
	  }, {
	    key: 'updateDisplayOptions',
	    value: function updateDisplayOptions(displayOptions) {
	      var options = (0, _util.extend)(this.state.report.displayOptions, displayOptions);
	
	      var chartToggle = (0, _util.extend)(this.state.chartToggle, { editingType: null });
	      chartToggle[options.chartType].plotStyle = options.plotStyle;
	      this.app.updateChartToggle(chartToggle);
	
	      var newChartName = (0, _chartUtil.formattedChartName)(options.chartType, options.plotStyle);
	
	      this.app.updateDisplayOptions((0, _util.extend)(options, {
	        analysis: this.isAnalysisEnabled(options.analysis, newChartName) ? options.analysis : 'linear',
	        value: this.isValueToggleEnabled(newChartName) ? options.value : 'absolute'
	      }));
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      return {
	        template: _index2.default
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.NESTED_ARRAY_SORT_FUNCS = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	exports.formattedChartName = formattedChartName;
	exports.styleChoicesForChartType = styleChoicesForChartType;
	exports.transpose = transpose;
	exports.countRun = countRun;
	exports.nestedObjectMax = nestedObjectMax;
	exports.stackedNestedObjectMax = stackedNestedObjectMax;
	exports.nestedObjectPaths = nestedObjectPaths;
	exports.nestedObjectToTableData = nestedObjectToTableData;
	exports.nestedObjectToNestedArray = nestedObjectToNestedArray;
	exports.nestedObjectToBarChartData = nestedObjectToBarChartData;
	
	var _util = __webpack_require__(2);
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var CHART_OPTIONS = {
	  bar: {
	    standard: 'Bar',
	    stacked: 'Stacked bar'
	  },
	  line: {
	    standard: 'Line',
	    stacked: 'Stacked line'
	  },
	  table: {
	    standard: 'Table'
	  }
	};
	
	function formattedChartName(type, style) {
	  return CHART_OPTIONS[type][style];
	}
	
	function styleChoicesForChartType(type) {
	  return Object.keys(CHART_OPTIONS[type]);
	}
	
	/**
	 * Transpose a 2-dimensional array:
	 * [[1, 2, 3],    [[1, 4],
	 *  [4, 5, 6]] =>  [2, 5],
	 *                 [3, 6]]
	 */
	function transpose(matrix) {
	  if (matrix && matrix.length) {
	    return matrix[0].map(function (col, i) {
	      return matrix.map(function (row) {
	        return row[i];
	      });
	    });
	  }
	  return matrix;
	}
	
	/**
	 * Given an array of values and a start index,
	 * count the number of the value at the start index repeats:
	 * countRun(['a', 'a', 'b', 'b', 'b', 'c'], 2) => 3
	 */
	function countRun(row, start) {
	  var i = void 0;
	  for (i = start; row[i] === row[start]; i++) {}
	  return i - start;
	}
	
	/**
	 * Get the max leaf value of a nested object
	 */
	function nestedObjectMax(obj) {
	  if (typeof obj === 'number') {
	    return obj;
	  }
	  return Math.max(0, Math.max.apply(Math, _toConsumableArray(Object.keys(obj).map(function (key) {
	    return nestedObjectMax(obj[key]);
	  }))));
	}
	
	function stackedNestedObjectMax(obj) {
	  if (Object.values(obj).some(function (k) {
	    return typeof k === 'number';
	  })) {
	    return Object.values(obj).reduce(function (a, b) {
	      return a + b;
	    }, 0);
	  }
	  return Math.max(0, Math.max.apply(Math, _toConsumableArray(Object.keys(obj).map(function (key) {
	    return stackedNestedObjectMax(obj[key]);
	  }))));
	}
	
	/**
	 * Turn a nested object into a list of "path" arrays,
	 * which represent all of its key combinations.
	 * Example:
	 *   {                     [['a', 'x', 1],
	 *     a: {x: 1, y: 2}, =>  ['a', 'y', 2],
	 *     b: {x: 1, y: 2},     ['b', 'x', 1],
	 *   }                      ['b', 'y', 2]]
	 * The depth param controls how deep into the object the
	 * transformation is applied. Sub-objects of the given
	 * depth will be placed at the last index of the path.
	 * Example (depth=1):
	 *   {                     [['a', {x: 1}],
	 *     a: {x: 1, y: 2}, =>  ['a', {y: 2}],
	 *     b: {x: 1, y: 2},     ['b', {x: 1}],
	 *   }                      ['b', {y: 2}]]
	 */
	function nestedObjectPaths(obj) {
	  var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	
	  var paths = [];
	
	  function _getObjectPaths(obj) {
	    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
	
	    if ((0, _util.nestedObjectDepth)(obj) > depth) {
	      Object.keys(obj).forEach(function (key) {
	        return _getObjectPaths(obj[key], [].concat(_toConsumableArray(path), [key]));
	      });
	    } else {
	      paths.push([].concat(_toConsumableArray(path), [obj]));
	    }
	  }
	
	  _getObjectPaths(obj);
	
	  return paths;
	}
	
	/**
	 * Helper for nestedObjectToTableData.
	 * Converts data object into nested array structure (with subgroup sums),
	 * which can subsequently be sorted.
	 */
	function nestedObjectToArrayWithSums(obj, depth) {
	  var arr = Object.keys(obj).map(function (k) {
	    var child = void 0,
	        currentSum = void 0;
	    if (depth > 2) {
	      child = nestedObjectToArrayWithSums(obj[k], depth - 1);
	      currentSum = (0, _util.sum)(child.map(function (c) {
	        return c[0].sum;
	      }));
	    } else if (depth === 1) {
	      child = { value: obj[k] };
	      currentSum = child.value;
	    } else {
	      child = obj[k];
	      currentSum = (0, _util.sum)(Object.values(child));
	    }
	    return [{ value: k, sum: currentSum }, child];
	  });
	  return arr;
	}
	
	/**
	 * Helper for nestedObjectToTableData.
	 * Recursively turns nested array table structure into row-by-row array.
	 * @param {array} arr - nested array table structure
	 * @param {number} depth - column depth of table
	 * @param {boolean} allowNullHeaders - whether to turn repeated headers in
	 * contiguous rows into null (for coalesced table display)
	 */
	function expandTableHeaderRows(arr, depth) {
	  var allowNullHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
	
	  if (depth <= 2) {
	    return arr;
	  }
	  return arr.reduce(function (expanded, row) {
	    var expandedChild = expandTableHeaderRows(row[1], depth - 1, allowNullHeaders);
	    var newRows = expandedChild.map(function (childRow, cri) {
	      return [cri && allowNullHeaders ? null : row[0]].concat(_toConsumableArray(childRow));
	    });
	    if (allowNullHeaders) {
	      newRows[0][0].rowSpan = newRows.length;
	    }
	    return expanded.concat(newRows);
	  }, []);
	}
	
	/**
	 * Helper for nestedObjectToTableData.
	 * Sorts table rows according to header names, maintaining header groupings.
	 */
	function sortTableColumns(arr, colSortAttrs) {
	  var childSortAttrs = colSortAttrs.slice(1);
	  if (childSortAttrs.length) {
	    arr = arr.map(function (child) {
	      return [child[0], sortTableColumns(child[1], childSortAttrs)];
	    });
	  }
	  return arr.sort(function (a, b) {
	    var _map = [a, b].map(function (entry) {
	      return entry[0].value.toLowerCase();
	    });
	
	    var _map2 = _slicedToArray(_map, 2);
	
	    a = _map2[0];
	    b = _map2[1];
	
	    return (a > b ? 1 : a < b ? -1 : 0) * (colSortAttrs[0].sortOrder === 'desc' ? -1 : 1);
	  });
	}
	
	/**
	 * Format rows for nested table display. Calculates rowspans and intermediate sums, and sorts
	 * according to given config. See tests for detailed examples.
	 *
	 * @example
	 * nestedObjectToTableData({US: {llama: 5, aardvark: 8}}, {
	 *   sortBy: 'column',
	 *   colSortAttrs: [{sortBy: 'label', sortOrder: 'asc'}],
	 * });
	 * // [
	 * //   [{value: 'US', sum: 13}, {llama: 5, aardvark: 8}],
	 * // ]
	 */
	function nestedObjectToTableData(obj, sortConfig) {
	  var objDepth = (0, _util.nestedObjectDepth)(obj);
	  var arr = nestedObjectToArrayWithSums(obj, objDepth);
	
	  switch (sortConfig.sortBy) {
	    case 'column':
	      arr = sortTableColumns(arr, sortConfig.colSortAttrs);
	      arr = expandTableHeaderRows(arr, objDepth);
	      break;
	    case 'value':
	      arr = expandTableHeaderRows(arr, objDepth, false);
	      arr = arr.sort(function (a, b) {
	        var _map3 = [a, b].map(function (entry) {
	          return entry[entry.length - 1][sortConfig.sortColumn] || 0;
	        });
	
	        var _map4 = _slicedToArray(_map3, 2);
	
	        a = _map4[0];
	        b = _map4[1];
	
	        return (a > b ? 1 : a < b ? -1 : 0) * (sortConfig.sortOrder === 'desc' ? -1 : 1);
	      });
	      break;
	  }
	  return arr;
	}
	
	function _headerRowSpan(obj) {
	  if (!obj.children || !obj.children[0].children) {
	    return 1;
	  } else if (obj.children[0].children[0].children) {
	    return (0, _util.sum)(obj.children.map(_headerRowSpan));
	  } else {
	    return obj.children.length;
	  }
	}
	
	function nestedArrayToBarChartData(arr) {
	  if (!(!!arr.length && arr[0].children)) {
	
	    // leaf, entire list in one table cell
	    return [[arr.map(function (n) {
	      return n.label;
	    }), arr.map(function (n) {
	      return n.value;
	    })]];
	  } else {
	
	    var penultimate = !(!!arr[0].children.length && arr[0].children[0].children);
	    if (penultimate) {
	
	      return arr.map(function (n) {
	        return [{ value: n.label, sum: n.value }].concat(_toConsumableArray(nestedArrayToBarChartData(n.children)[0]));
	      });
	    } else {
	
	      // expand nested children beyond the first to extra top-level rows with null headers
	      var ret = [];
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = arr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var entry = _step.value;
	
	          var rowCount = 0,
	              header = void 0;
	          var _iteratorNormalCompletion2 = true;
	          var _didIteratorError2 = false;
	          var _iteratorError2 = undefined;
	
	          try {
	            for (var _iterator2 = entry.children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	              var child = _step2.value;
	
	              var childData = nestedArrayToBarChartData([child]);
	              var _iteratorNormalCompletion3 = true;
	              var _didIteratorError3 = false;
	              var _iteratorError3 = undefined;
	
	              try {
	                for (var _iterator3 = childData[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                  var row = _step3.value;
	
	                  if (!rowCount++) {
	                    var rowSpan = _headerRowSpan(entry);
	                    header = {
	                      value: entry.label,
	                      sum: entry.value
	                    };
	                    if (rowSpan > 1) {
	                      header.rowSpan = rowSpan;
	                    }
	                  } else {
	                    header = null;
	                  }
	                  ret.push([header].concat(_toConsumableArray(row)));
	                }
	              } catch (err) {
	                _didIteratorError3 = true;
	                _iteratorError3 = err;
	              } finally {
	                try {
	                  if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                    _iterator3.return();
	                  }
	                } finally {
	                  if (_didIteratorError3) {
	                    throw _iteratorError3;
	                  }
	                }
	              }
	            }
	          } catch (err) {
	            _didIteratorError2 = true;
	            _iteratorError2 = err;
	          } finally {
	            try {
	              if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                _iterator2.return();
	              }
	            } finally {
	              if (_didIteratorError2) {
	                throw _iteratorError2;
	              }
	            }
	          }
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      return ret;
	    }
	  }
	}
	
	/**
	 * Internal util supporting 'sort by final value' functionality of
	 * nestedObjectToNestedArray. Expands nested subgroups into new rows.
	 *
	 * @example
	 * flattenNestedObjectToArray({US: {llama: 5, aardvark: 8}});
	 * // [
	 * //   {label: 'US', value: 5, children: [{label: 'llama', value: 5}]},
	 * //   {label: 'US', value: 8, children: [{label: 'aardvark', value: 8}]},
	 * // ]
	 */
	function flattenNestedObjectToArray(obj) {
	  if (typeof obj === 'number') {
	    return obj;
	  } else {
	    return Object.keys(obj).map(function (label) {
	      var entry = void 0;
	      var value = obj[label];
	      if (typeof value === 'object') {
	        entry = flattenNestedObjectToArray(value).map(function (child) {
	          return {
	            label: label,
	            children: [child],
	            value: child.value
	          };
	        });
	      } else {
	        entry = { label: label, value: value };
	      }
	      return entry;
	    }).reduce(function (a, b) {
	      return a.concat(b);
	    }, []);
	  }
	}
	
	// sort utils for nestedObjectToNestedArray
	function compareByLabel(a, b) {
	  var _ref = [a.label.toLowerCase(), b.label.toLowerCase()];
	  a = _ref[0];
	  b = _ref[1];
	
	  return a > b ? 1 : a < b ? -1 : 0;
	}
	function compareByValue(a, b) {
	  var _ref2 = [a.value, b.value];
	  a = _ref2[0];
	  b = _ref2[1];
	
	  return a > b ? 1 : a < b ? -1 : 0;
	}
	var NESTED_ARRAY_SORT_FUNCS = exports.NESTED_ARRAY_SORT_FUNCS = {
	  label: {
	    asc: function asc(a, b) {
	      return compareByLabel(a, b);
	    },
	    desc: function desc(a, b) {
	      return compareByLabel(a, b) * -1;
	    }
	  },
	  value: {
	    asc: function asc(a, b) {
	      return compareByValue(a, b);
	    },
	    desc: function desc(a, b) {
	      return compareByValue(a, b) * -1;
	    }
	  }
	};
	
	/**
	 * Helper for nestedObjectToBarChartData. Turns a nested object with numeric leaves
	 * into a nested array with rows sorted according to given multi-level config.
	 * See tests for examples.
	 */
	function nestedObjectToNestedArray(obj, sortConfig) {
	  var arr = void 0;
	  switch (sortConfig.sortBy) {
	
	    case 'column':
	      {
	        var colSortAttrs = sortConfig.colSortAttrs[0];
	        arr = Object.keys(obj).map(function (k) {
	          var entry = { label: k };
	          var value = obj[k];
	          if (typeof value === 'object') {
	            entry.children = nestedObjectToNestedArray(value, Object.assign({}, sortConfig, {
	              colSortAttrs: sortConfig.colSortAttrs.slice(1)
	            }));
	            entry.value = entry.children.reduce(function (sum, n) {
	              return sum + n.value;
	            }, 0);
	          } else {
	            entry.value = value;
	          }
	          return entry;
	        }).sort(NESTED_ARRAY_SORT_FUNCS[colSortAttrs.sortBy][colSortAttrs.sortOrder]);
	        break;
	      }
	
	    case 'value':
	      arr = flattenNestedObjectToArray(obj).sort(NESTED_ARRAY_SORT_FUNCS.value[sortConfig.sortOrder]);
	      break;
	
	    default:
	      throw new Error('Unknown sortBy type: ' + sortConfig.sortBy);
	
	  }
	  return arr;
	}
	
	/**
	 * Format rows for nested display. Calculates rowspans and intermediate sums, and sorts
	 * according to given config. Final numeric value/key pairs become parallel arrays for
	 * inclusion in a single table cell. See tests for detailed examples.
	 *
	 * @example
	 * nestedObjectToBarChartData({US: {llama: 5, aardvark: 8}}, {
	 *   sortBy: 'column',
	 *   colSortAttrs: [
	 *     {sortBy: 'value', sortOrder: 'asc'},
	 *     {sortBy: 'value', sortOrder: 'desc'},
	 *   ],
	 * });
	 * // [
	 * //   [{value: 'US', sum: 13}, ['aardvark', 'llama'], [8, 5]],
	 * // ]
	 */
	function nestedObjectToBarChartData(obj, sortConfig) {
	  if (typeof obj === 'object' && Object.keys(obj).length) {
	    return nestedArrayToBarChartData(nestedObjectToNestedArray(obj, sortConfig));
	  } else {
	    return [];
	  }
	}

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _util = __webpack_require__(8);
	
	var _index = __webpack_require__(380);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(381);
	
	__webpack_require__(383);
	
	__webpack_require__(387);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('chart-controls', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      return (0, _util.extend)(_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'config', this), { template: _index2.default });
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component) {
	    var h = __webpack_require__(232).h;
	    return {
	      value: h("div", {
	        "class": {
	          'chart-controls-container': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'chart-toggle': true,
	            'chart-control': true
	          }
	        }, [$component.child('chart-toggle') || '']));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 381 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 382 */,
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _chartUtil = __webpack_require__(378);
	
	var _clause = __webpack_require__(14);
	
	var _util = __webpack_require__(8);
	
	var _index = __webpack_require__(384);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(385);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var BAR_CHART = 'bar';
	var LINE_CHART = 'line';
	var TABLE_CHART = 'table';
	
	document.registerElement('chart-toggle', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'attachedCallback', this).apply(this, arguments);
	      this.app.onClickOutside(this.tagName, 'stopEditingChartToggle');
	      var chartType = this.state.report.displayOptions.chartType;
	      var chartOptions = (0, _util.extend)(this.state.chartToggle[chartType], (0, _util.pick)(this.state.report.displayOptions, ['plotStyle']));
	      this.app.updateChartToggle(_defineProperty({}, chartType, chartOptions));
	    }
	  }, {
	    key: 'isChartTypeDisabled',
	    value: function isChartTypeDisabled(type) {
	      var disabledChartTypes = new Set();
	      if (this.state.report.sections.show.clauseResourceTypes() === _clause.Clause.RESOURCE_TYPE_PEOPLE && !this.state.result.peopleTimeSeries) {
	        disabledChartTypes.add(LINE_CHART);
	      }
	      return disabledChartTypes.has(type);
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        helpers: {
	          formattedChartName: _chartUtil.formattedChartName,
	          styleChoicesForChartType: _chartUtil.styleChoicesForChartType,
	          chartTypes: function chartTypes() {
	            return [BAR_CHART, LINE_CHART, TABLE_CHART];
	          },
	          isChartTypeDisabled: function isChartTypeDisabled(type) {
	            return _this2.isChartTypeDisabled(type);
	          },
	          selectedPlotStyle: function selectedPlotStyle(type) {
	            return _this2.state.chartToggle[type].plotStyle;
	          },
	          menuChange: function menuChange(ev, type) {
	            return type === _this2.state.chartToggle.editingType && ev.detail && ev.detail.state === 'closed' && _this2.app.stopEditingChartToggle();
	          },
	          onDropdownClick: function onDropdownClick(type) {
	            if (_this2.app.state.projectHasEvents && !_this2.isChartTypeDisabled(type)) {
	              _this2.app.updateChartToggle({
	                editingType: _this2.state.chartToggle.editingType === type ? null : type
	              });
	            }
	          },
	          onStyleClick: function onStyleClick(chartType, plotStyle) {
	            if (_this2.app.state.projectHasEvents && !_this2.isChartTypeDisabled(chartType)) {
	              var reportTrackingData = _this2.state.report.toTrackingData();
	              var displayOptions = _this2.state.report.displayOptions;
	              _this2.IRBResult.updateDisplayOptions({ chartType: chartType, plotStyle: plotStyle });
	              if (displayOptions.chartType !== chartType || displayOptions.plotStyle !== plotStyle) {
	                _this2.app.trackEvent('Chart Options - Changed Chart Type', (0, _util.extend)(reportTrackingData, {
	                  'new chart type': chartType,
	                  'new plot style': plotStyle
	                }));
	              }
	            }
	          }
	        }
	      };
	    }
	  }, {
	    key: 'IRBResult',
	    get: function get() {
	      this._IRBResult = this._IRBResult || this.findPanelParentByTagName('irb-result');
	      return this._IRBResult;
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, chartToggle, learnActive, learnModalStepIndex, learnReminding, learnTransitioningOut, projectHasEvents, report, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['irb-learn-tooltip'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      var stepNames = [];
	      for (var jade_interp = 0; jade_interp < arguments.length; jade_interp++) {
	        stepNames.push(arguments[jade_interp]);
	      }
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(learnActive ? function () {
	          var __jade_nodes = [];
	          var step = util.getLearnStep(report, learnModalStepIndex);
	          var stepName = stepNames.includes(step.name) ? step.name : stepNames[stepNames.length - 1].name;
	          __jade_nodes = __jade_nodes.concat(h("mp-tutorial-tooltip", {
	            "attrs": {
	              hide: learnTransitioningOut || !stepNames.includes(step.name),
	              'placement': "right",
	              'num-steps': 4,
	              'curr-step': step.index - 1,
	              'closeable': true
	            },
	            "on": {
	              close: function close() {
	                return $component.app.helpers.finishLearn();
	              }
	            },
	            "class": {
	              'irb-learn-reminding': learnReminding
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'mp-tooltip-title': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(stepName == "choose-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Start by choosing an event to show");;
	                return __jade_nodes;
	              }.call(this) : stepName == "compare-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Now compare that to a different event");;
	                return __jade_nodes;
	              }.call(this) : stepName == "group-by" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Next, group your events by a property");;
	                return __jade_nodes;
	              }.call(this) : stepName == "manipulate-data" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Lastly, choose the best-suited visualization");;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'mp-tooltip-subtitle': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(stepName == "choose-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Choosing an event shows you how many times your customers completed that action in the chart below.");;
	                return __jade_nodes;
	              }.call(this) : stepName == "compare-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Compare multiple events to see if your customers are performing certain events more than others.");;
	                return __jade_nodes;
	              }.call(this) : stepName == "group-by" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Break your events down into groups to answer deeper questions about how your customers use your product.");;
	                return __jade_nodes;
	              }.call(this) : stepName == "manipulate-data" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("A line chart works well for displaying your data over time, while a bar chart is better at showing quantity.");;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	    return {
	      value: h("div", {
	        "class": {
	          'chart-toggle-container': true,
	          'irb-learn-tooltip-container': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(jade_mixins['irb-learn-tooltip'].call(this, "manipulate-data"));
	        __jade_nodes = __jade_nodes.concat(h("ul", {
	          "class": Object.assign({}, {
	            'editing-charttype': chartToggle.editingType !== null,
	            'enabled': projectHasEvents
	          }, {
	            'chart-toggle': true,
	            'chart-controls-component': true,
	            'irb-learn-emphasize': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat($helpers.chartTypes().reduce(function (__each_nodes, chartType, $index) {
	            return __each_nodes.concat(function () {
	              var _Object$assign;
	
	              var __jade_nodes = [];
	              var isEditingCurrentStyle = chartToggle.editingType === chartType;
	              var selectedPlotStyle = $helpers.selectedPlotStyle(chartType);
	              var styleChoicesForChartType = $helpers.styleChoicesForChartType(chartType);
	              var hasDropDown = styleChoicesForChartType.length > 1;
	              var isActiveChartType = chartType === report.displayOptions.chartType;;
	              __jade_nodes = __jade_nodes.concat(h("li", {
	                "class": Object.assign({}, (_Object$assign = {}, _defineProperty(_Object$assign, chartType, true), _defineProperty(_Object$assign, "disabled", $helpers.isChartTypeDisabled(chartType)), _defineProperty(_Object$assign, "editing", isEditingCurrentStyle), _defineProperty(_Object$assign, 'has-dropdown', hasDropDown), _defineProperty(_Object$assign, "selected", isActiveChartType), _Object$assign), {
	                  'chart-type': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'toggle-button': true
	                  }
	                }, function () {
	                  var _Object$assign2;
	
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("button", {
	                    "on": {
	                      click: function click() {
	                        return $helpers.onStyleClick(chartType, selectedPlotStyle);
	                      }
	                    },
	                    "class": Object.assign({}, (_Object$assign2 = {}, _defineProperty(_Object$assign2, chartType, true), _defineProperty(_Object$assign2, selectedPlotStyle, true), _defineProperty(_Object$assign2, "selected", isActiveChartType), _Object$assign2), {
	                      'label': true
	                    })
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(h("span", {
	                      "class": {
	                        'button-flex-wrapper': true
	                      }
	                    }, function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                        "attrs": {
	                          icon: chartType
	                        }
	                      }));
	                      __jade_nodes = __jade_nodes.concat($helpers.formattedChartName(chartType, selectedPlotStyle));;
	                      return __jade_nodes;
	                    }.call(this).filter(Boolean)));;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));
	                __jade_nodes = __jade_nodes.concat(hasDropDown ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("button", {
	                    "on": {
	                      click: function click() {
	                        return $helpers.onDropdownClick(chartType);
	                      }
	                    },
	                    "class": {
	                      'dropdown': true
	                    }
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(h("span", {
	                      "class": {
	                        'button-flex-wrapper': true
	                      }
	                    }, function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                        "attrs": {
	                          icon: 'caret-down'
	                        }
	                      }));;
	                      return __jade_nodes;
	                    }.call(this).filter(Boolean)));;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(h("mp-drop-menu", {
	                  "attrs": {
	                    open: isEditingCurrentStyle
	                  },
	                  "on": {
	                    change: function change(ev) {
	                      return $helpers.menuChange(ev, chartType);
	                    }
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "attrs": {
	                      'slot-body': true
	                    },
	                    "class": {
	                      'chart-style': true,
	                      'options': true
	                    }
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(styleChoicesForChartType.reduce(function (__each_nodes, plotStyle, $index) {
	                      return __each_nodes.concat(function () {
	                        var _Object$assign3;
	
	                        var __jade_nodes = [];
	                        var isSelectedStyleOption = isActiveChartType && selectedPlotStyle === plotStyle;
	                        __jade_nodes = __jade_nodes.concat(h("button", {
	                          "on": {
	                            click: function click() {
	                              return isSelectedStyleOption ? null : $helpers.onStyleClick(chartType, plotStyle);
	                            }
	                          },
	                          "class": Object.assign({}, (_Object$assign3 = {}, _defineProperty(_Object$assign3, chartType, true), _defineProperty(_Object$assign3, plotStyle, true), _defineProperty(_Object$assign3, "selected", isSelectedStyleOption), _Object$assign3), {
	                            'button-option': true
	                          })
	                        }, function () {
	                          var __jade_nodes = [];
	                          __jade_nodes = __jade_nodes.concat(h("span", {
	                            "class": {
	                              'button-flex-wrapper': true
	                            }
	                          }, function () {
	                            var __jade_nodes = [];
	                            var iconPlotStyle = plotStyle === "standard" ? "" : "-" + plotStyle;;
	                            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                              "attrs": {
	                                icon: chartType + iconPlotStyle
	                              }
	                            }));
	                            __jade_nodes = __jade_nodes.concat($helpers.formattedChartName(chartType, plotStyle));;
	                            return __jade_nodes;
	                          }.call(this).filter(Boolean)));;
	                          return __jade_nodes;
	                        }.call(this).filter(Boolean)));;
	                        return __jade_nodes;
	                      }.call(this));
	                    }, []));;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "chartToggle" in locals ? locals.chartToggle : typeof chartToggle !== "undefined" ? chartToggle : undefined, "learnActive" in locals ? locals.learnActive : typeof learnActive !== "undefined" ? learnActive : undefined, "learnModalStepIndex" in locals ? locals.learnModalStepIndex : typeof learnModalStepIndex !== "undefined" ? learnModalStepIndex : undefined, "learnReminding" in locals ? locals.learnReminding : typeof learnReminding !== "undefined" ? learnReminding : undefined, "learnTransitioningOut" in locals ? locals.learnTransitioningOut : typeof learnTransitioningOut !== "undefined" ? learnTransitioningOut : undefined, "projectHasEvents" in locals ? locals.projectHasEvents : typeof projectHasEvents !== "undefined" ? projectHasEvents : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 385 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 386 */,
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _util = __webpack_require__(8);
	
	var _index = __webpack_require__(388);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(389);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ANALYSIS_LIST = ['linear', 'rolling', 'logarithmic', 'cumulative'];
	var VALUE_LIST = ['absolute', 'relative'];
	
	document.registerElement('extras-menu', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        helpers: {
	          analysisChoices: function analysisChoices() {
	            return ANALYSIS_LIST;
	          },
	          getButtonStyle: function getButtonStyle() {
	            var style = {};
	            var stickyHeader = _this2.state.stickyHeader;
	            if (stickyHeader.isSticky) {
	              // TODO: load from json to protect width
	              var extrasWidth = 30;
	              style.left = stickyHeader.chartWidth + stickyHeader.chartOffsetLeft - extrasWidth - stickyHeader.windowScrollLeft + 'px';
	            }
	            return style;
	          },
	          valueChoices: function valueChoices() {
	            return VALUE_LIST;
	          },
	          isAnalysisDisabled: function isAnalysisDisabled(analysis) {
	            return !_this2.IRBResult.isAnalysisEnabled(analysis);
	          },
	          isValueToggleDisabled: function isValueToggleDisabled() {
	            return !_this2.IRBResult.isValueToggleEnabled();
	          },
	          menuChange: function menuChange(ev) {
	            return ev.detail && ev.detail.state === 'closed' && _this2.app.stopEditingExtrasMenu();
	          },
	          onClickExtrasMenu: function onClickExtrasMenu() {
	            return _this2.update({ isEditingExtrasMenu: !_this2.state.isEditingExtrasMenu });
	          },
	          onAnalysisClick: function onAnalysisClick(analysis) {
	            var reportTrackingData = _this2.state.report.toTrackingData();
	            _this2.IRBResult.updateDisplayOptions({ analysis: analysis });
	            _this2.app.stopEditingExtrasMenu();
	            _this2.app.trackEvent('Chart Options - Changed Analysis', (0, _util.extend)(reportTrackingData, { 'new analysis type': analysis }));
	          },
	          onValueClick: function onValueClick(value) {
	            var reportTrackingData = _this2.state.report.toTrackingData();
	            _this2.IRBResult.updateDisplayOptions({ value: value });
	            _this2.app.stopEditingExtrasMenu();
	            _this2.app.trackEvent('Chart Options - Changed Value Display', (0, _util.extend)(reportTrackingData, { 'new analysis type': value }));
	          }
	        }
	      };
	    }
	  }, {
	    key: 'IRBResult',
	    get: function get() {
	      this._IRBResult = this._IRBResult || this.findPanelParentByTagName('irb-result');
	      return this._IRBResult;
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Object, isEditingExtrasMenu, report) {
	    var h = __webpack_require__(232).h;
	    return {
	      value: h("ul", {
	        "class": {
	          'toggle-view': true,
	          'chart-controls-component': true,
	          'irb-learn-disabled': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "style": $helpers.getButtonStyle(),
	          "class": {
	            selected: isEditingExtrasMenu
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("button", {
	            "on": {
	              click: $helpers.onClickExtrasMenu
	            },
	            "class": Object.assign({}, {
	              selected: isEditingExtrasMenu
	            }, {
	              'extras-menu': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'ellipsis'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("mp-drop-menu", {
	            "attrs": {
	              open: isEditingExtrasMenu
	            },
	            "on": {
	              change: $helpers.menuChange
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "attrs": {
	                'slot-body': true
	              },
	              "class": {
	                'extras-menu-options': true,
	                'options': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'analysis': true,
	                  'section': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'title': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat("analysis");;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));
	                __jade_nodes = __jade_nodes.concat(h("ul", {
	                  "class": {
	                    'control-list': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat($helpers.analysisChoices().reduce(function (__each_nodes, analysis, $index) {
	                    return __each_nodes.concat(function () {
	                      var __jade_nodes = [];
	                      var analysisIsSelected = analysis == report.displayOptions.analysis;
	                      __jade_nodes = __jade_nodes.concat(h("li", function () {
	                        var _Object$assign;
	
	                        var __jade_nodes = [];
	                        __jade_nodes = __jade_nodes.concat(h("button", {
	                          "on": {
	                            click: function click() {
	                              return analysisIsSelected ? null : $helpers.onAnalysisClick(analysis);
	                            }
	                          },
	                          "class": Object.assign({}, (_Object$assign = {}, _defineProperty(_Object$assign, analysis, true), _defineProperty(_Object$assign, "selected", analysisIsSelected), _defineProperty(_Object$assign, "disabled", $helpers.isAnalysisDisabled(analysis)), _Object$assign), {
	                            'button-option': true
	                          })
	                        }, function () {
	                          var __jade_nodes = [];
	                          __jade_nodes = __jade_nodes.concat(h("span", {
	                            "class": {
	                              'button-flex-wrapper': true
	                            }
	                          }, function () {
	                            var __jade_nodes = [];
	                            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                              "attrs": {
	                                icon: "analysis-" + analysis
	                              }
	                            }));
	                            __jade_nodes = __jade_nodes.concat(analysis);;
	                            return __jade_nodes;
	                          }.call(this).filter(Boolean)));;
	                          return __jade_nodes;
	                        }.call(this).filter(Boolean)));;
	                        return __jade_nodes;
	                      }.call(this).filter(Boolean)));;
	                      return __jade_nodes;
	                    }.call(this));
	                  }, []));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'value': true,
	                  'section': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": Object.assign({}, {
	                    disabled: $helpers.isValueToggleDisabled()
	                  }, {
	                    'title': true
	                  })
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat("value");;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));
	                __jade_nodes = __jade_nodes.concat(h("ul", {
	                  "class": {
	                    'control-list': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat($helpers.valueChoices().reduce(function (__each_nodes, value, $index) {
	                    return __each_nodes.concat(function () {
	                      var __jade_nodes = [];
	                      var valueIsSelected = value == report.displayOptions.value;;
	                      __jade_nodes = __jade_nodes.concat(h("li", function () {
	                        var _Object$assign2;
	
	                        var __jade_nodes = [];
	                        __jade_nodes = __jade_nodes.concat(h("button", {
	                          "on": {
	                            click: function click() {
	                              return valueIsSelected ? null : $helpers.onValueClick(value);
	                            }
	                          },
	                          "class": Object.assign({}, (_Object$assign2 = {}, _defineProperty(_Object$assign2, value, true), _defineProperty(_Object$assign2, "selected", valueIsSelected), _defineProperty(_Object$assign2, "disabled", $helpers.isValueToggleDisabled()), _Object$assign2), {
	                            'button-option': true
	                          })
	                        }, function () {
	                          var __jade_nodes = [];
	                          __jade_nodes = __jade_nodes.concat(h("span", {
	                            "class": {
	                              'button-flex-wrapper': true
	                            }
	                          }, function () {
	                            var __jade_nodes = [];
	                            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                              "attrs": {
	                                icon: "value-" + value
	                              }
	                            }));
	                            __jade_nodes = __jade_nodes.concat(value);;
	                            return __jade_nodes;
	                          }.call(this).filter(Boolean)));;
	                          return __jade_nodes;
	                        }.call(this).filter(Boolean)));;
	                        return __jade_nodes;
	                      }.call(this).filter(Boolean)));;
	                      return __jade_nodes;
	                    }.call(this));
	                  }, []));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "isEditingExtrasMenu" in locals ? locals.isEditingExtrasMenu : typeof isEditingExtrasMenu !== "undefined" ? isEditingExtrasMenu : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 389 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 390 */,
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _cloneDeep = __webpack_require__(120);
	
	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);
	
	var _isEqual = __webpack_require__(392);
	
	var _isEqual2 = _interopRequireDefault(_isEqual);
	
	var _throttle = __webpack_require__(282);
	
	var _throttle2 = _interopRequireDefault(_throttle);
	
	var _panel = __webpack_require__(232);
	
	var _util = __webpack_require__(2);
	
	var _util2 = __webpack_require__(8);
	
	var _clause = __webpack_require__(14);
	
	__webpack_require__(406);
	
	__webpack_require__(413);
	
	__webpack_require__(421);
	
	__webpack_require__(427);
	
	var _index = __webpack_require__(431);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(432);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ROLLING_WINDOWS_BY_UNIT = {
	  hour: 12,
	  day: 7,
	  week: 5,
	  month: 3,
	  quarter: 2
	};
	
	function reverseSortOrder(order) {
	  return order === 'desc' ? 'asc' : 'desc';
	}
	
	document.registerElement('chart-display', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'trackSort',
	    value: function trackSort(reportProperties, group, sortConfig, colIdx) {
	      var eventProperties = {};
	      switch (group) {
	        case 'colSort':
	        case 'left':
	          eventProperties['sort by'] = sortConfig.colSortAttrs[colIdx].sortBy;
	          eventProperties['sort order'] = sortConfig.colSortAttrs[colIdx].sortOrder;
	          eventProperties['sort group'] = sortConfig.sortBy;
	          eventProperties['sort column index'] = colIdx;
	          break;
	        case 'axisSort':
	        case 'right':
	          eventProperties['sort by'] = sortConfig.sortBy;
	          eventProperties['sort order'] = sortConfig.sortOrder;
	          eventProperties['sort group'] = 'axis';
	          break;
	      }
	      this.app.trackEvent('Chart Options - Sort', (0, _util2.extend)(reportProperties, eventProperties));
	    }
	  }, {
	    key: 'stateToWatch',
	
	
	    /* PERFORMANCE OPTIMIZATION --------------------------------------------------------- */
	    value: function stateToWatch(state) {
	      try {
	        return {
	          displayOptions: (0, _cloneDeep2.default)(state.report.displayOptions),
	          isEditingExtrasMenu: state.isEditingExtrasMenu,
	          legendRevision: state.report.legend.revisionStr,
	          resultID: state.result.id,
	          resultLoading: state.resultLoading,
	          showLegend: this.helpers.showLegend(state),
	          stickyHeader: state.stickyHeader,
	          sortConfig: (0, _cloneDeep2.default)(state.report.sorting),
	          windowSize: ROLLING_WINDOWS_BY_UNIT[state.report.sections.time.clauses[0].unit]
	        };
	      } catch (e) {
	        return {};
	      }
	    }
	  }, {
	    key: '_render',
	    value: function _render() {
	      var result = _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), '_render', this).apply(this, arguments);
	      this.currentState = this.stateToWatch(this.state);
	      return result;
	    }
	  }, {
	    key: 'shouldUpdate',
	    value: function shouldUpdate(state) {
	      this.currentState = this.currentState || {};
	      return !(0, _isEqual2.default)(this.stateToWatch(state), this.currentState);
	    }
	    /* ---------------------------------------------------------------------------------- */
	
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        helpers: {
	          getChartLabel: function getChartLabel() {
	            var chartLabel = ['number of'];
	            var mathTypes = Array.from(new Set(_this2.state.report.sections.show.clauses.map(function (clause) {
	              return clause.math;
	            })));
	            if (mathTypes && mathTypes.length === 1) {
	              chartLabel.unshift(mathTypes[0]);
	            }
	
	            var showValueNames = _this2.helpers.getShowValueNames();
	            var headers = _this2.state.result.headers;
	            if (headers.length === 1 && !['$event', '$people'].includes(headers[0]) && showValueNames.length === 1) {
	              chartLabel.push(showValueNames[0]);
	            }
	
	            return (0, _util.capitalize)(chartLabel.join(' '));
	          },
	          getLegendStyle: function getLegendStyle() {
	            var style = {};
	            var stickyHeader = _this2.state.stickyHeader;
	            if (stickyHeader.isSticky) {
	              style.left = stickyHeader.chartWidth + stickyHeader.chartOffsetLeft - stickyHeader.windowScrollLeft + 'px';
	              style.height = 'calc(100vh - ' + stickyHeader.chartBottomToPageBottom + 'px)';
	            }
	            return style;
	          },
	          getDisplayOptions: function getDisplayOptions() {
	            return (0, _util2.extend)((0, _util2.pick)(_this2.state.report.displayOptions, ['analysis', 'plotStyle', 'value']), { timeUnit: _this2.state.report.sections.time.clauses[0].unit });
	          },
	          getFunctionLabel: function getFunctionLabel() {
	            switch (_this2.helpers.getDisplayOptions().analysis) {
	              case 'logarithmic':
	                return '(Logarithmic - base 10)';
	              case 'cumulative':
	                return '(Cumulative)';
	              case 'rolling':
	                {
	                  var unit = _this2.state.report.sections.time.clauses[0].unit;
	                  return '(Rolling - ' + ROLLING_WINDOWS_BY_UNIT[unit] + ' ' + unit + ')s';
	                }
	            }
	            // nothing for 'linear'
	            return null;
	          },
	          getShowValueNames: function getShowValueNames() {
	            return _this2.state.report.sections.show.clauses.map(function (clause) {
	              if (clause.type === _clause.Clause.RESOURCE_TYPE_EVENTS) {
	                return (0, _util2.renameEvent)(clause.value.name);
	              }
	              return (0, _util2.renameProperty)(clause.value.name);
	            });
	          },
	          getUniqueShowMathTypes: function getUniqueShowMathTypes() {
	            return new Set(_this2.state.report.sections.show.clauses.map(function (clause) {
	              return clause.math;
	            }));
	          },
	          getUtcOffset: function getUtcOffset() {
	            return _this2.app.mpContext.utcOffset;
	          },
	          stringifyObjValues: function stringifyObjValues(obj) {
	            return (0, _util2.mapObjectKeys)(obj, JSON.stringify);
	          },
	          showLegend: function showLegend() {
	            var chartName = _this2.IRBResult.selectedChartName().toLowerCase(); // TODO
	            var showClauses = _this2.state.report.sections.show.clauses;
	            var groupClauses = _this2.state.report.sections.group.clauses;
	            var shouldShow = false;
	
	            if (chartName.includes('bar')) {
	              shouldShow = groupClauses.length > 0 || chartName === 'stacked bar' && showClauses.length > 1;
	            } else if (chartName.includes('line')) {
	              shouldShow = groupClauses.length > 0 || showClauses.length > 1 || chartName === 'line' && showClauses[0].value.name === '$top_events';
	            }
	
	            return shouldShow;
	          },
	          processResult: function processResult(result) {
	            var isPeopleTimeSeries = !!result.peopleTimeSeries;
	            result = result.transformed({
	              analysis: _this2.state.report.displayOptions.analysis,
	              windowSize: ROLLING_WINDOWS_BY_UNIT[_this2.state.report.sections.time.clauses[0].unit]
	            });
	            var isFlattenedData = _this2.state.report.displayOptions.chartType === 'line';
	            if (_this2.helpers.showLegend()) {
	              (function () {
	                var legend = _this2.state.report.legend;
	                var series = result.peopleTimeSeries || result.series;
	                series = (0, _util2.filterObject)(series, function (value, depth, parentKeys) {
	                  if (isFlattenedData) {
	                    return depth === 2 ? legend.data[0].flattenedData[parentKeys.concat(value).join(' ')] : true;
	                  } else {
	                    return depth > 1 ? legend.data[depth - 2].seriesData[value] : true;
	                  }
	                });
	                if (isPeopleTimeSeries) {
	                  result.peopleTimeSeries = series;
	                } else {
	                  result.series = series;
	                }
	              })();
	            }
	            return result;
	          },
	          barChartChange: function barChartChange(ev) {
	            if (ev.detail) {
	              if (ev.detail.type) {
	                var reportTrackingData = _this2.state.report.toTrackingData();
	                var barSort = _this2.state.report.sorting.bar;
	                var colIdx = ev.detail.colIdx;
	                switch (ev.detail.type) {
	                  case 'axisSort':
	                    barSort.sortBy = 'value';
	                    barSort.sortOrder = ev.detail.sortOrder;
	                    break;
	                  case 'colSort':
	                    barSort.sortBy = 'column';
	                    barSort.colSortAttrs = _this2.app.sortConfigFor(_this2.state.result, _this2.state.report.sorting).bar.colSortAttrs;
	                    barSort.colSortAttrs[colIdx] = (0, _util2.pick)(ev.detail, ['sortBy', 'sortOrder']);
	                    break;
	                }
	                _this2.app.updateReport();
	                _this2.trackSort(reportTrackingData, ev.detail.type, barSort, colIdx);
	              } else if (ev.detail.axis && ev.detail.maxValueText) {
	                var _reportTrackingData = _this2.state.report.toTrackingData();
	                var newValue = _this2.state.report.displayOptions.value === 'absolute' ? 'relative' : 'absolute';
	                _this2.state.report.displayOptions.value = newValue;
	                _this2.app.updateReport();
	                _this2.app.trackEvent('Chart Options - Changed Value Display', (0, _util2.extend)(_reportTrackingData, {
	                  'from bar chart toggle': true,
	                  'new analysis type': newValue
	                }));
	              }
	            }
	          },
	          barChartInserted: function barChartInserted(vdom) {
	            var getDistToBottomFrom = function getDistToBottomFrom(el) {
	              return Math.abs(Math.max(0, window.innerHeight - el.top - el.height));
	            };
	
	            _this2._updateChartBoundaries = (0, _throttle2.default)(function () {
	              var chartBounds = vdom.elm.getBoundingClientRect();
	              _this2.app.updateStickyHeader({
	                chartBottomToPageBottom: getDistToBottomFrom(chartBounds),
	                chartWidth: chartBounds.width,
	                chartOffsetLeft: chartBounds.left,
	                windowScrollLeft: window.scrollX
	              });
	            }, 10);
	
	            _this2._checkForStickyHeader = (0, _throttle2.default)(function () {
	              var chartBounds = vdom.elm.getBoundingClientRect();
	              var stickyHeader = {
	                chartBottomToPageBottom: getDistToBottomFrom(chartBounds),
	                isSticky: chartBounds.top <= 0,
	                windowScrollLeft: window.scrollX
	              };
	
	              if (stickyHeader.isSticky !== _this2.state.stickyHeader.isSticky || stickyHeader.chartBottomToPageBottom !== _this2.state.stickyHeader.chartBottomToPageBottom || stickyHeader.windowScrollLeft !== _this2.state.stickyHeader.windowScrollLeft) {
	                // scroll event happens alot. only update if there are changes.
	                _this2.app.updateStickyHeader(stickyHeader);
	              }
	            }, 10);
	
	            window.requestAnimationFrame(function () {
	              _this2._updateChartBoundaries();
	              _this2._checkForStickyHeader();
	            });
	            window.addEventListener('resize', _this2._updateChartBoundaries);
	            window.addEventListener('scroll', _this2._checkForStickyHeader);
	          },
	          barChartDestroyed: function barChartDestroyed() {
	            _this2.update({ stickyHeader: {} });
	            window.removeEventListener('resize', _this2._updateChartBoundaries);
	            window.removeEventListener('scroll', _this2._checkForStickyHeader);
	          },
	          tableChange: function tableChange(ev) {
	            var reportTrackingData = _this2.state.report.toTrackingData();
	            var _ev$detail = ev.detail,
	                headerType = _ev$detail.headerType,
	                colIdx = _ev$detail.colIdx,
	                colName = _ev$detail.colName;
	
	            var sortConfig = _this2.state.report.sorting.table;
	            switch (headerType) {
	              case 'left':
	                if (sortConfig.sortBy === 'column') {
	                  // already sorting by group label
	                  var col = sortConfig.colSortAttrs[colIdx];
	                  col.sortOrder = reverseSortOrder(col.sortOrder);
	                } else {
	                  // reset back to grouped sort
	                  _this2.state.report.sorting.table = _this2.app.sortConfigFor(_this2.state.result).table;
	                }
	                break;
	              case 'right':
	                if (sortConfig.sortBy === 'value' && sortConfig.sortColumn === colName) {
	                  // already sorting by this column value
	                  sortConfig.sortOrder = reverseSortOrder(sortConfig.sortOrder);
	                } else {
	                  sortConfig.sortBy = 'value';
	                  sortConfig.sortColumn = colName;
	                  sortConfig.sortOrder = 'desc';
	                }
	                break;
	            }
	            _this2.app.updateReport();
	            _this2.trackSort(reportTrackingData, headerType, sortConfig, colIdx);
	          }
	        },
	        template: _index2.default
	      };
	    }
	  }, {
	    key: 'IRBResult',
	    get: function get() {
	      this._IRBResult = this._IRBResult || this.findPanelParentByTagName('irb-result');
	      return this._IRBResult;
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(393);
	
	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are **not** supported.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}
	
	module.exports = isEqual;


/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(394),
	    isObject = __webpack_require__(140),
	    isObjectLike = __webpack_require__(174);
	
	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {boolean} [bitmask] The bitmask of comparison flags.
	 *  The bitmask may be composed of the following flags:
	 *     1 - Unordered comparison
	 *     2 - Partial comparison
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, customizer, bitmask, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	}
	
	module.exports = baseIsEqual;


/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(122),
	    equalArrays = __webpack_require__(395),
	    equalByTag = __webpack_require__(400),
	    equalObjects = __webpack_require__(401),
	    getTag = __webpack_require__(189),
	    isArray = __webpack_require__(175),
	    isHostObject = __webpack_require__(141),
	    isTypedArray = __webpack_require__(402);
	
	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = arrayTag,
	      othTag = arrayTag;
	
	  if (!objIsArr) {
	    objTag = getTag(object);
	    objTag = objTag == argsTag ? objectTag : objTag;
	  }
	  if (!othIsArr) {
	    othTag = getTag(other);
	    othTag = othTag == argsTag ? objectTag : othTag;
	  }
	  var objIsObj = objTag == objectTag && !isHostObject(object),
	      othIsObj = othTag == objectTag && !isHostObject(other),
	      isSameTag = objTag == othTag;
	
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
	      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
	  }
	  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;
	
	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
	}
	
	module.exports = baseIsEqualDeep;


/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(396),
	    arraySome = __webpack_require__(399);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      arrLength = array.length,
	      othLength = other.length;
	
	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;
	
	  stack.set(array, other);
	  stack.set(other, array);
	
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!seen.has(othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
	              return seen.add(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, customizer, bitmask, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalArrays;


/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(148),
	    setCacheAdd = __webpack_require__(397),
	    setCacheHas = __webpack_require__(398);
	
	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values ? values.length : 0;
	
	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}
	
	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;
	
	module.exports = SetCache;


/***/ },
/* 397 */
/***/ function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}
	
	module.exports = setCacheAdd;


/***/ },
/* 398 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}
	
	module.exports = setCacheHas;


/***/ },
/* 399 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array ? array.length : 0;
	
	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arraySome;


/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(209),
	    Uint8Array = __webpack_require__(198),
	    eq = __webpack_require__(127),
	    equalArrays = __webpack_require__(395),
	    mapToArray = __webpack_require__(203),
	    setToArray = __webpack_require__(207);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;
	
	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;
	
	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);
	
	    case errorTag:
	      return object.name == other.name && object.message == other.message;
	
	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');
	
	    case mapTag:
	      var convert = mapToArray;
	
	    case setTag:
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	      convert || (convert = setToArray);
	
	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= UNORDERED_COMPARE_FLAG;
	
	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
	      stack['delete'](object);
	      return result;
	
	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}
	
	module.exports = equalByTag;


/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	var keys = __webpack_require__(167);
	
	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      objProps = keys(object),
	      objLength = objProps.length,
	      othProps = keys(other),
	      othLength = othProps.length;
	
	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);
	
	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;
	
	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalObjects;


/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(403),
	    baseUnary = __webpack_require__(404),
	    nodeUtil = __webpack_require__(405);
	
	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
	
	module.exports = isTypedArray;


/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	var isLength = __webpack_require__(173),
	    isObjectLike = __webpack_require__(174);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	}
	
	module.exports = baseIsTypedArray;


/***/ },
/* 404 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}
	
	module.exports = baseUnary;


/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(145);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;
	
	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    return freeProcess && freeProcess.binding('util');
	  } catch (e) {}
	}());
	
	module.exports = nodeUtil;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)(module)))

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _util = __webpack_require__(8);
	
	var _chartUtil = __webpack_require__(378);
	
	__webpack_require__(407);
	
	var _index = __webpack_require__(410);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(411);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('chart-legend', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        helpers: {
	          allSeriesSelected: function allSeriesSelected(seriesIdx) {
	            return !_this2.state.report.legend.unselectedCount(seriesIdx, _this2.legendDataType);
	          },
	          deleteToFilter: function deleteToFilter(ev, seriesIdx, value) {
	            ev.stopPropagation();
	            var reportTrackingData = _this2.state.report.toTrackingData();
	            var groupClauses = _this2.state.report.sections.group.clauses;
	            var groupProperties = (0, _util.pick)(groupClauses[groupClauses.length - seriesIdx - 1], ['value', 'filterType', 'resourceType']);
	            _this2.app.startAddingClause('filter', (0, _util.extend)(groupProperties, {
	              filterOperator: value === 'null' ? 'is set' : 'does not equal',
	              filterValue: [value]
	            }));
	            _this2.app.commitStageClause();
	            _this2.app.trackEvent('Legend - Delete', (0, _util.extend)(reportTrackingData, { 'deleted value': value.text }));
	          },
	          isAnySeriesLargeSearch: function isAnySeriesLargeSearch(legendData) {
	            return legendData.some(function (series) {
	              return _this2.helpers.isSeriesLargeSearchResult(series);
	            });
	          },
	          isFlattenedData: function isFlattenedData() {
	            return _this2.state.report.displayOptions.chartType === 'line';
	          },
	          isSeriesLargeSearchResult: function isSeriesLargeSearchResult(series) {
	            return _this2.helpers.isSearchActive() && series.seriesValues.length > 12;
	          },
	          isSeriesValueShowing: function isSeriesValueShowing(seriesIdx, name) {
	            return _this2.state.report.legend.data[seriesIdx][_this2.legendDataType][name];
	          },
	          isSearchActive: function isSearchActive() {
	            return !!_this2.state.report.legend.search;
	          },
	          legendDataToDisplay: function legendDataToDisplay() {
	            var legend = _this2.state.report.legend;
	            var isFlattenedData = _this2.helpers.isFlattenedData();
	            var data = isFlattenedData ? [legend.data[0]] : legend.data;
	
	            var sortConfig = _this2.state.report.sorting.bar;
	
	            // safegaurd agaisnt old data without the new combinedResults obj
	            if (data.some(function (series) {
	              return !series.combinedResults;
	            })) {
	              legend.updateLegendData(_this2.state.result);
	            }
	
	            var seriesData = data.map(function (series, idx) {
	              var seriesValues = series[_this2.legendDataType] || [];
	              seriesValues = Object.keys(seriesValues).map(function (originalValue) {
	                var matches = null;
	                var label = null;
	                var value = series.combinedResults[originalValue];
	                if (isFlattenedData) {
	                  (function () {
	                    var dataPath = legend.data[0].flattenedDataPaths[originalValue];
	                    if (Object.keys(_this2.state.result.series).length === 1) {
	                      dataPath = dataPath.slice(1, dataPath.length);
	                    }
	                    label = dataPath.map(function (value, idx) {
	                      return _this2.helpers.renameSeriesValue(dataPath.length - 1 - idx, value);
	                    });
	                    var allMatches = label.map(function (text) {
	                      return (0, _util.stringFilterMatches)(text, legend.search);
	                    });
	                    if (allMatches.some(Boolean)) {
	                      matches = allMatches.map(function (match, idx) {
	                        return match || ['', label[idx]];
	                      });
	                    }
	                  })();
	                } else {
	                  label = _this2.helpers.renameSeriesValue(idx, originalValue);
	                  matches = legend && (0, _util.stringFilterMatches)(label, legend.search);
	                }
	                return matches ? { label: label, matches: matches, originalValue: originalValue, value: value } : null;
	              }).filter(Boolean);
	
	              if (!isFlattenedData && sortConfig.colSortAttrs) {
	                var configForSeries = sortConfig;
	                if (sortConfig.sortBy !== 'value' || !sortConfig.sortOrder) {
	                  configForSeries = sortConfig.colSortAttrs[sortConfig.colSortAttrs.length - 1 - idx];
	                }
	                seriesValues.sort(_chartUtil.NESTED_ARRAY_SORT_FUNCS[configForSeries.sortBy][configForSeries.sortOrder]);
	              }
	              if (legend.getSeriesDisplayAtIndex(idx) === 'minimized') {
	                seriesValues.splice(12);
	              }
	              return { seriesName: series.seriesName, seriesValues: seriesValues };
	            });
	            return seriesData.some(function (series) {
	              return series.seriesValues.length;
	            }) ? seriesData : [];
	          },
	          renameSeriesValue: function renameSeriesValue(seriesIdx, name) {
	            return _this2.state.report.legend.data[seriesIdx].seriesName === '$event' ? (0, _util.renameEvent)(name) : (0, _util.renamePropertyValue)(name);
	          },
	          changedSearch: function changedSearch(ev) {
	            if (ev.target.value) {
	              _this2.state.report.legend.showAllSeries();
	              if (!_this2.state.report.legend.search) {
	                _this2.app.trackEvent('Legend - Search', _this2.state.report.toTrackingData());
	              }
	            } else {
	              _this2.state.report.legend.setDefaultSeriesShowing();
	            }
	            _this2.app.updateLegendState({ search: ev.target.value });
	          },
	          selectedSeriesCount: function selectedSeriesCount(idx) {
	            return Object.values(_this2.state.report.legend.data[idx].seriesData).filter(Boolean).length;
	          },
	          seriesDisplayOption: function seriesDisplayOption(idx) {
	            var label = null;
	            switch (_this2.state.report.legend.getSeriesDisplayAtIndex(idx)) {
	              case 'minimized':
	                label = 'More';
	                break;
	              case 'expanded':
	                label = 'Less';
	                break;
	            }
	            return label;
	          },
	          toggleAllSeriesValue: function toggleAllSeriesValue(seriesIdx) {
	            var legend = _this2.state.report.legend;
	            var reportTrackingData = _this2.state.report.toTrackingData();
	            var dataType = _this2.legendDataType;
	            var seriesData = legend.data[seriesIdx][dataType];
	            var showAll = !_this2.helpers.allSeriesSelected(seriesIdx);
	            if (showAll) {
	              _this2.app.updateReport({
	                legend: legend.showAllLegendSeries(dataType)
	              });
	            } else {
	              Object.keys(seriesData).forEach(function (key) {
	                return seriesData[key] = false;
	              });
	              _this2.app.updateLegendSeriesAtIndex(seriesIdx, dataType, seriesData);
	            }
	            _this2.app.trackEvent('Legend - ' + (showAll ? 'Show' : 'Hide') + ' All', reportTrackingData);
	          },
	          toggleShowSeriesValue: function toggleShowSeriesValue(seriesIdx, name) {
	            var dataType = _this2.legendDataType;
	            var seriesData = _this2.state.report.legend.data[seriesIdx][dataType];
	            if (seriesData.hasOwnProperty(name)) {
	              var reportTrackingData = _this2.state.report.toTrackingData();
	              _this2.app.updateLegendSeriesAtIndex(seriesIdx, dataType, _defineProperty({}, name, !seriesData[name]));
	              _this2.app.trackEvent('Legend - ' + (seriesData[name] ? 'Show' : 'Hide'), reportTrackingData);
	            }
	          },
	          totalSeriesCount: function totalSeriesCount(idx) {
	            return Object.keys(_this2.state.report.legend.data[idx][_this2.legendDataType]).length;
	          }
	        }
	      };
	    }
	  }, {
	    key: 'legendDataType',
	    get: function get() {
	      var legend = this.state.report.legend;
	      return this.helpers.isFlattenedData() ? legend.FLAT_DATA : legend.SERIES_DATA;
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _webcomponent = __webpack_require__(238);
	
	var _webcomponent2 = _interopRequireDefault(_webcomponent);
	
	var _throttle = __webpack_require__(282);
	
	var _throttle2 = _interopRequireDefault(_throttle);
	
	__webpack_require__(408);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('sticky-scroll', function (_WebComponent) {
	  _inherits(_class, _WebComponent);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback() {
	      var _this2 = this;
	
	      window.requestAnimationFrame(function () {
	        return _this2.updateIfInitialized();
	      });
	    }
	  }, {
	    key: 'createdCallback',
	    value: function createdCallback() {
	      var _this3 = this;
	
	      this.firstScroll = true;
	      this.stickyBody = null;
	      this.stickyHeader = null;
	      this.stuckTitle = null;
	
	      this.onBodyScrollHandler = (0, _throttle2.default)(function () {
	        return _this3.updateStuckHeader();
	      }, 10);
	      this.onFirstScrollHandler = function () {
	        if (_this3.firstScroll) {
	          _this3.style.overflowY = 'hidden';
	          _this3.stickyBody = _this3.querySelector('.body');
	          _this3.stickyBody.style.overflowY = 'auto';
	          _this3.stickyBody.scrollTop = _this3.scrollTop;
	          _this3.stickyHeader = document.createElement('div');
	          _this3.setWidth();
	          _this3.stickyHeader.classList.add('sticky-header');
	          _this3.appendChild(_this3.stickyHeader);
	          _this3.render();
	          _this3.firstScroll = false;
	          _this3.stickyBody.addEventListener('scroll', _this3.onBodyScrollHandler);
	        }
	      };
	
	      this.addEventListener('scroll', this.onFirstScrollHandler);
	    }
	  }, {
	    key: 'detachedCallback',
	    value: function detachedCallback() {
	      this.removeEventListener('scroll', this.onFirstScrollHandler);
	      if (this.stickyBody) {
	        this.stickyBody.removeEventListener('scroll', this.onBodyScrollHandler);
	      }
	    }
	  }, {
	    key: 'hideTitle',
	    value: function hideTitle(title) {
	      title.classList.remove('stuck');
	      title.style.marginTop = '-' + title.offsetHeight + 'px';
	    }
	  }, {
	    key: 'moveTitleAtIndex',
	    value: function moveTitleAtIndex(idx, px) {
	      var title = this.headerStickyTitles[idx];
	      title.classList.add('stuck');
	      this.stuckTitle = title;
	      title.style.marginTop = px + 'px';
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this4 = this;
	
	      this.bodyStickyTitles = [].concat(_toConsumableArray(this.stickyBody.getElementsByClassName('sticky-title')));
	      while (this.stickyHeader.hasChildNodes()) {
	        this.stickyHeader.removeChild(this.stickyHeader.lastChild);
	      }
	      this.headerStickyTitles = this.bodyStickyTitles.map(function (title) {
	        return title.cloneNode(true);
	      });
	      this.headerStickyTitles.forEach(function (title, idx) {
	        title.onclick = _this4.bodyStickyTitles[idx].onclick;
	        _this4.stickyHeader.appendChild(title);
	      });
	      this.setWidth();
	      this.resetStickyHeaders();
	    }
	  }, {
	    key: 'resetStickyHeaders',
	    value: function resetStickyHeaders() {
	      if (this.headerStickyTitles.length) {
	        this.headerStickyTitles.forEach(function (title) {
	          return title.style.marginTop = '-' + title.offsetHeight + 'px';
	        });
	        this.updateStuckHeader();
	      }
	    }
	  }, {
	    key: 'setWidth',
	    value: function setWidth() {
	      this.stickyHeader.style.width = this.stickyBody.clientWidth + 'px';
	    }
	  }, {
	    key: 'showTitle',
	    value: function showTitle(title) {
	      title.classList.add('stuck');
	      this.stuckTitle = title;
	      title.style.marginTop = '';
	    }
	  }, {
	    key: 'updateIfInitialized',
	    value: function updateIfInitialized() {
	      if (!this.firstScroll) {
	        this.render();
	      }
	    }
	  }, {
	    key: 'updateStuckHeader',
	    value: function updateStuckHeader() {
	      var _this5 = this;
	
	      if (this.headerStickyTitles.length) {
	        (function () {
	          var bodyScrollTop = _this5.stickyBody.scrollTop;
	          var titleDistances = _this5.bodyStickyTitles.map(function (title) {
	            return title.offsetTop - bodyScrollTop;
	          });
	          _this5.stuckTitle = _this5.stuckTitle || _this5.headerStickyTitles[0];
	          var headerHeight = _this5.stuckTitle.offsetHeight;
	          _this5.headerStickyTitles.forEach(function (title, idx) {
	            if (titleDistances[idx] <= headerHeight && (titleDistances[idx + 1] >= headerHeight || !titleDistances[idx + 1])) {
	              if (titleDistances[idx] <= 0) {
	                _this5.showTitle(title);
	              } else {
	                _this5.hideTitle(title);
	                _this5.moveTitleAtIndex(idx - 1, titleDistances[idx] - headerHeight);
	              }
	            } else {
	              _this5.hideTitle(title);
	            }
	          });
	        })();
	      }
	    }
	  }]);
	
	  return _class;
	}(_webcomponent2.default));

/***/ },
/* 408 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 409 */,
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Array, JSON, Object, report, resultLoading, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    return {
	      value: h("div", {
	        "class": {
	          'chart-legend': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'header': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat("Legend");;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'content-wrapper': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(resultLoading ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'search': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'search'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("input", {
	                "attrs": {
	                  type: 'text',
	                  placeholder: 'Search'
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'body-loader': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              var numOfLoaderLines = 6;
	              __jade_nodes = __jade_nodes.concat(Array(numOfLoaderLines).fill().reduce(function (__each_nodes, _, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'series-loader': true
	                    }
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(h("div", {
	                      "class": {
	                        'select-icon-loader': true
	                      }
	                    }));
	                    __jade_nodes = __jade_nodes.concat(h("div", {
	                      "class": {
	                        'label-loader': true
	                      }
	                    }));;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            var legendDataToDisplay = $helpers.legendDataToDisplay();
	            var isFlattenedData = $helpers.isFlattenedData();
	            var isSearchActive = $helpers.isSearchActive();
	            var isMultiColor = !(report.displayOptions.chartType === 'bar' && report.displayOptions.plotStyle === 'standard' && legendDataToDisplay.length === 1);
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": Object.assign({}, {
	                active: isSearchActive
	              }, {
	                'search': true
	              })
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: 'search'
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("input", {
	                "attrs": {
	                  placeholder: 'Search'
	                },
	                "on": {
	                  input: $helpers.changedSearch
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("sticky-scroll", {
	              "attrs": {
	                'refresh-data': JSON.stringify({
	                  showing: report.legend.seriesShowing,
	                  legendDataToDisplay: legendDataToDisplay
	                })
	              },
	              "class": {
	                'has-results': legendDataToDisplay.length
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'body': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(!legendDataToDisplay.length ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'no-result': true
	                    }
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat("Your search didn't return any results");;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this) : undefined);
	                __jade_nodes = __jade_nodes.concat(legendDataToDisplay.reduce(function (__each_nodes, series, seriesIdx) {
	                  return __each_nodes.concat(function () {
	                    var __jade_nodes = [];
	                    var isSeriesShowing = report.legend.isSeriesShowing(seriesIdx);
	                    var seriesDisplay = report.legend.getSeriesDisplayAtIndex(seriesIdx);
	                    var seriesDisplayLabel = $helpers.seriesDisplayOption(seriesIdx);
	                    __jade_nodes = __jade_nodes.concat(!isFlattenedData ? function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(h("div", {
	                        "on": {
	                          click: function click() {
	                            return report.legend.toggleShowSeries(seriesIdx);
	                          }
	                        },
	                        "class": {
	                          'sticky-title': true,
	                          'info': true
	                        }
	                      }, function () {
	                        var __jade_nodes = [];
	                        var titleName = util.renameProperty(series.seriesName);
	                        __jade_nodes = __jade_nodes.concat(h("div", {
	                          "attrs": {
	                            title: titleName
	                          },
	                          "class": Object.assign({}, {
	                            showing: isSeriesShowing
	                          }, {
	                            'name': true
	                          })
	                        }, function () {
	                          var __jade_nodes = [];
	                          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                            "attrs": {
	                              icon: 'triangle-right'
	                            }
	                          }));
	                          __jade_nodes = __jade_nodes.concat(titleName);;
	                          return __jade_nodes;
	                        }.call(this).filter(Boolean)));
	                        __jade_nodes = __jade_nodes.concat(h("div", {
	                          "class": {
	                            'count': true
	                          }
	                        }, function () {
	                          var __jade_nodes = [];
	                          __jade_nodes = __jade_nodes.concat("" + $helpers.selectedSeriesCount(seriesIdx) + "/" + $helpers.totalSeriesCount(seriesIdx) + "");;
	                          return __jade_nodes;
	                        }.call(this).filter(Boolean)));;
	                        return __jade_nodes;
	                      }.call(this).filter(Boolean)));;
	                      return __jade_nodes;
	                    }.call(this) : undefined);
	                    __jade_nodes = __jade_nodes.concat(h("ul", {
	                      "class": {
	                        'series-values': true
	                      }
	                    }, function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(isSeriesShowing ? function () {
	                        var __jade_nodes = [];
	                        __jade_nodes = __jade_nodes.concat(!isSearchActive ? function () {
	                          var __jade_nodes = [];
	                          __jade_nodes = __jade_nodes.concat(jade_mixins['checkbox-select-all'].call(this, $helpers.allSeriesSelected(seriesIdx), function () {
	                            return $helpers.toggleAllSeriesValue(seriesIdx);
	                          }));;
	                          return __jade_nodes;
	                        }.call(this) : undefined);
	                        __jade_nodes = __jade_nodes.concat(!series.seriesValues.length ? function () {
	                          var __jade_nodes = [];
	                          __jade_nodes = __jade_nodes.concat(h("div", {
	                            "class": {
	                              'no-result': true
	                            }
	                          }, ['No results' || '']));;
	                          return __jade_nodes;
	                        }.call(this) : undefined);
	                        __jade_nodes = __jade_nodes.concat(series.seriesValues.reduce(function (__each_nodes, value, $index) {
	                          return __each_nodes.concat(function () {
	                            var __jade_nodes = [];
	                            var showing = $helpers.isSeriesValueShowing(seriesIdx, value.originalValue);
	                            __jade_nodes = __jade_nodes.concat(h("li", {
	                              "on": {
	                                click: function click() {
	                                  return $helpers.toggleShowSeriesValue(seriesIdx, value.originalValue);
	                                }
	                              },
	                              "class": Object.assign({}, {
	                                'is-event': series.seriesName === '$event',
	                                showing: showing
	                              }, {
	                                'checkbox-item': true,
	                                'series': true
	                              })
	                            }, function () {
	                              var __jade_nodes = []; /*  TODO: when fixing line chart rendering bring back color to line chart legend */
	                              var shouldHaveColor = !isFlattenedData && seriesIdx === 0 && isMultiColor;
	                              __jade_nodes = __jade_nodes.concat(h("div", {
	                                "class": Object.assign({}, _defineProperty({
	                                  color: shouldHaveColor
	                                }, "segment-color-" + report.legend.getColorForSeries(value.originalValue, isFlattenedData), showing && seriesIdx === 0), {
	                                  'checkbox-select-icon': true,
	                                  'series-icon': true
	                                })
	                              }, function () {
	                                var __jade_nodes = [];
	                                __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                                  "attrs": {
	                                    icon: 'check-checkbox',
	                                    empty: !showing
	                                  }
	                                }));;
	                                return __jade_nodes;
	                              }.call(this).filter(Boolean)));
	                              __jade_nodes = __jade_nodes.concat(isFlattenedData ? function () {
	                                var __jade_nodes = [];
	                                var dataTitle = value.label.join(' / ');;
	                                __jade_nodes = __jade_nodes.concat(isSearchActive ? function () {
	                                  var __jade_nodes = [];
	                                  __jade_nodes = __jade_nodes.concat(h("div", {
	                                    "attrs": {
	                                      title: dataTitle
	                                    },
	                                    "class": {
	                                      'checkbox-label': true,
	                                      'search-result': true
	                                    }
	                                  }, function () {
	                                    var __jade_nodes = [];
	                                    __jade_nodes = __jade_nodes.concat(value.matches.reduce(function (__each_nodes, match, $index) {
	                                      return __each_nodes.concat(function () {
	                                        var __jade_nodes = [];
	                                        __jade_nodes = __jade_nodes.concat(h("div", {
	                                          "class": {
	                                            'flattened-segment': true
	                                          }
	                                        }, function () {
	                                          var __jade_nodes = [];
	                                          __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, match));;
	                                          return __jade_nodes;
	                                        }.call(this).filter(Boolean)));;
	                                        return __jade_nodes;
	                                      }.call(this));
	                                    }, []));;
	                                    return __jade_nodes;
	                                  }.call(this).filter(Boolean)));;
	                                  return __jade_nodes;
	                                }.call(this) : function () {
	                                  var __jade_nodes = [];
	                                  __jade_nodes = __jade_nodes.concat(h("div", {
	                                    "attrs": {
	                                      title: dataTitle
	                                    },
	                                    "class": {
	                                      'checkbox-label': true
	                                    }
	                                  }, function () {
	                                    var __jade_nodes = [];
	                                    __jade_nodes = __jade_nodes.concat(value.label.reduce(function (__each_nodes, text, $index) {
	                                      return __each_nodes.concat(function () {
	                                        var __jade_nodes = [];
	                                        __jade_nodes = __jade_nodes.concat(h("div", {
	                                          "class": {
	                                            'flattened-segment': true
	                                          }
	                                        }, [text || '']));;
	                                        return __jade_nodes;
	                                      }.call(this));
	                                    }, []));;
	                                    return __jade_nodes;
	                                  }.call(this).filter(Boolean)));;
	                                  return __jade_nodes;
	                                }.call(this));;
	                                return __jade_nodes;
	                              }.call(this) : function () {
	                                var __jade_nodes = [];
	                                __jade_nodes = __jade_nodes.concat(isSearchActive ? function () {
	                                  var __jade_nodes = [];
	                                  __jade_nodes = __jade_nodes.concat(h("div", {
	                                    "attrs": {
	                                      title: value.label
	                                    },
	                                    "class": {
	                                      'checkbox-label': true,
	                                      'search-result': true
	                                    }
	                                  }, function () {
	                                    var __jade_nodes = [];
	                                    __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, value.matches));;
	                                    return __jade_nodes;
	                                  }.call(this).filter(Boolean)));;
	                                  return __jade_nodes;
	                                }.call(this) : function () {
	                                  var __jade_nodes = [];
	                                  __jade_nodes = __jade_nodes.concat(h("div", {
	                                    "attrs": {
	                                      title: value.label
	                                    },
	                                    "class": {
	                                      'checkbox-label': true
	                                    }
	                                  }, [value.label || '']));;
	                                  return __jade_nodes;
	                                }.call(this));
	                                __jade_nodes = __jade_nodes.concat(h("div", {
	                                  "class": {
	                                    'delete-wrapper': true
	                                  }
	                                }, function () {
	                                  var __jade_nodes = [];
	                                  __jade_nodes = __jade_nodes.concat(h("div", {
	                                    "class": {
	                                      'delete-icon': true
	                                    }
	                                  }, function () {
	                                    var __jade_nodes = [];
	                                    __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                                      "attrs": {
	                                        icon: 'x'
	                                      },
	                                      "on": {
	                                        click: function click(ev) {
	                                          return $helpers.deleteToFilter(ev, seriesIdx, value.originalValue);
	                                        }
	                                      }
	                                    }));;
	                                    return __jade_nodes;
	                                  }.call(this).filter(Boolean)));;
	                                  return __jade_nodes;
	                                }.call(this).filter(Boolean)));;
	                                return __jade_nodes;
	                              }.call(this));;
	                              return __jade_nodes;
	                            }.call(this).filter(Boolean)));;
	                            return __jade_nodes;
	                          }.call(this));
	                        }, []));;
	                        return __jade_nodes;
	                      }.call(this) : undefined);;
	                      return __jade_nodes;
	                    }.call(this).filter(Boolean)));
	                    __jade_nodes = __jade_nodes.concat(isSeriesShowing && seriesDisplayLabel ? function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(h("div", {
	                        "on": {
	                          click: function click() {
	                            return report.legend.toggleSeriesDisplaySetting(seriesIdx);
	                          }
	                        },
	                        "class": {
	                          'display-option': true
	                        }
	                      }, [seriesDisplayLabel || '']));;
	                      return __jade_nodes;
	                    }.call(this) : undefined);;
	                    return __jade_nodes;
	                  }.call(this));
	                }, []));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Array" in locals ? locals.Array : typeof Array !== "undefined" ? Array : undefined, "JSON" in locals ? locals.JSON : typeof JSON !== "undefined" ? JSON : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined, "resultLoading" in locals ? locals.resultLoading : typeof resultLoading !== "undefined" ? resultLoading : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 411 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 412 */,
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _throttle = __webpack_require__(282);
	
	var _throttle2 = _interopRequireDefault(_throttle);
	
	var _util = __webpack_require__(8);
	
	var util = _interopRequireWildcard(_util);
	
	var _chartUtil = __webpack_require__(378);
	
	var _index = __webpack_require__(414);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(415);
	
	__webpack_require__(417);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SORT_ICON_WIDTH = 36;
	
	document.registerElement('bar-chart', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'attachedCallback', this).apply(this, arguments);
	      for (var el = this.parentNode; el.parentNode && !this.parentChartContainer; el = el.parentNode) {
	        this.parentChartContainer = el.classList.contains('main-chart') && el;
	      }
	      // TODO: research why attributeChangedCallback is not called before component
	      // is attached only in full webcomponents polyfill (and not lite version)
	      this.updateChartState();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(attrName, oldValue, newValue) {
	      if (attrName === 'sticky-header') {
	        // TODO: dont use serialized JSON (talk to Ted)
	        this.update({ stickyHeader: JSON.parse(newValue) });
	      } else {
	        this.updateChartState();
	      }
	    }
	  }, {
	    key: 'updateHeaderWidths',
	    value: function updateHeaderWidths() {
	      var _this2 = this;
	
	      window.requestAnimationFrame(function () {
	        // defer so we can inspect the fully-rendered table
	        var tableHeaderColumns = Array.from(_this2.querySelectorAll('table tbody tr:first-child td.chart-header'));
	        var headersStyle = tableHeaderColumns.map(function (el, idx) {
	          return { name: _this2.state.headers[idx], width: el.offsetWidth };
	        });
	
	        var headerWidths = headersStyle && headersStyle.reduce(function (sum, header) {
	          return sum + header.width;
	        }, 0);
	        var axisWidthStyle = 'calc(100% - ' + headerWidths + 'px)';
	        _this2.update({
	          axisWidthStyle: axisWidthStyle,
	          headersStyle: headersStyle
	        });
	      });
	    }
	  }, {
	    key: 'updateChartState',
	    value: function updateChartState() {
	      if (!this.chartData || !this.initialized) {
	        return;
	      }
	
	      var _chartData = this.chartData,
	          headers = _chartData.headers,
	          series = _chartData.series;
	
	      var segmentColorMap = this.getJSONAttribute('segment-color-map') || {};
	      var chartLabel = this.getJSONAttribute('chart-label') || '';
	      var legendChangeID = this.getJSONAttribute('legend-change-id');
	      var displayOptions = this.getJSONAttribute('display-options') || {};
	      var functionLabel = this.getJSONAttribute('function-label') || '';
	      var sortConfig = this.getJSONAttribute('sorting');
	      var stickyHeader = this.getJSONAttribute('sticky-header');
	
	      if (!this.validSortConfig(headers, sortConfig)) {
	        return;
	      }
	
	      if (functionLabel) {
	        chartLabel = chartLabel + ' ' + functionLabel;
	      }
	
	      series = util.nestedObjectSum(series);
	      var rows = (0, _chartUtil.nestedObjectToBarChartData)(series, sortConfig);
	
	      var chartMax = displayOptions.plotStyle === 'stacked' ? (0, _chartUtil.stackedNestedObjectMax)(series) : (0, _chartUtil.nestedObjectMax)(series);
	
	      sortConfig = util.extend(sortConfig, { hideFirstSort: displayOptions.plotStyle === 'stacked' && rows.length === 1 });
	
	      // prevent glitching widths by waiting until render on new column counts
	      var headersStyle = this.state.headersStyle;
	      var numOfHeaders = headers && headers.length;
	      var numOfHeadersStyles = headersStyle && headersStyle.length;
	      if (numOfHeaders !== numOfHeadersStyles) {
	        headersStyle = null;
	      }
	
	      this.update({
	        chartLabel: chartLabel,
	        chartMax: chartMax,
	        displayOptions: displayOptions,
	        functionLabel: functionLabel,
	        headers: headers,
	        headersStyle: headersStyle,
	        legendChangeID: legendChangeID,
	        rows: rows,
	        segmentColorMap: segmentColorMap,
	        sortConfig: sortConfig,
	        stickyHeader: stickyHeader
	      });
	
	      this.updateHeaderWidths();
	    }
	  }, {
	    key: 'validSortConfig',
	    value: function validSortConfig(headers, sortConfig) {
	      return sortConfig && (sortConfig.sortBy === 'value' || sortConfig.colSortAttrs.length === headers.length);
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this3 = this;
	
	      return {
	        template: _index2.default,
	        defaultState: {
	          axisWidthStyle: {},
	          chartMax: 0,
	          chartLabel: '',
	          displayOptions: {},
	          functionLabel: '',
	          hoverTooltip: { rowIdx: null, cellIdx: null, mouseXPos: null },
	          headers: [],
	          headersStyle: [],
	          headerSortPanel: null,
	          rows: [],
	          segmentColorMap: {},
	          showValueNames: [],
	          util: util
	        },
	        helpers: {
	          formatLabel: function formatLabel(header, value) {
	            switch (header) {
	              case '$event':
	                return util.renameEvent(value);
	              case '$people':
	                return util.renameProperty(value);
	            }
	            return util.renamePropertyValue(value);
	          },
	          getHeaderWidth: function getHeaderWidth(text) {
	            return util.getTextWidth(text, 'bold 14px Helvetica') + SORT_ICON_WIDTH;
	          },
	          getHeaderStyle: function getHeaderStyle() {
	            var style = {};
	            var stickyHeader = _this3.state.stickyHeader;
	            if (stickyHeader && stickyHeader.isSticky) {
	              style.width = stickyHeader.chartWidth + 'px';
	              style.left = stickyHeader.chartOffsetLeft - stickyHeader.windowScrollLeft + 'px';
	            }
	            return style;
	          },
	          headersToDisplay: function headersToDisplay() {
	            var headers = null;
	            if (_this3.state.displayOptions.plotStyle === 'stacked') {
	              headers = _this3.state.headers.slice(0, _this3.state.headers.length - 1);
	              if (!headers.length) {
	                headers.push('$event');
	              }
	            }
	            return headers || _this3.state.headers;
	          },
	          mousedOverSegment: (0, _throttle2.default)(function (ev, rowIdx, cellIdx) {
	            if (ev.target.classList.contains('show-tool-tip-on-hover')) {
	              var hoverTooltip = _this3.state.hoverTooltip;
	              // start with min dimensions until the tooltip renders
	              var tooltipWidth = hoverTooltip.tooltipWidth || 200;
	              var tooltipHeight = hoverTooltip.tooltipHeight || 70;
	
	              var cursorSpace = 10;
	
	              var _parentChartContainer = _this3.parentChartContainer.getBoundingClientRect(),
	                  left = _parentChartContainer.left,
	                  top = _parentChartContainer.top,
	                  width = _parentChartContainer.width;
	
	              // determine x-position
	
	
	              var distanceFromChartRight = left + width - (ev.pageX + tooltipWidth);
	              var distanceFromChartLeft = ev.pageX - left;
	              var tooltipRightDistance = ev.offsetX + cursorSpace;
	              var tooltipLeftDistance = ev.offsetX - tooltipWidth + cursorSpace;
	              var doesNotFitInsideChartLeft = distanceFromChartLeft - tooltipWidth < 0;
	              var fitsInChartRight = distanceFromChartRight > tooltipWidth / 4;
	              var leftPos = fitsInChartRight || doesNotFitInsideChartLeft ? tooltipRightDistance : tooltipLeftDistance;
	
	              // determine y-position
	              var bufferHeight = tooltipHeight * 3;
	              var tooltipAboveDistance = ev.offsetY / 2 - cursorSpace;
	              var tooltipBelowDistance = ev.offsetY / 2 + cursorSpace * 3 + tooltipHeight;
	              var tooCloseToChartTop = ev.clientY - tooltipAboveDistance - tooltipHeight - top < bufferHeight;
	              var tooCloseToViewportTop = ev.clientY < bufferHeight;
	              var topPos = tooCloseToChartTop || tooCloseToViewportTop ? tooltipBelowDistance : tooltipAboveDistance;
	
	              hoverTooltip = util.extend(hoverTooltip, {
	                cellIdx: cellIdx,
	                leftPos: leftPos,
	                rowIdx: rowIdx,
	                showTooltip: true,
	                topPos: topPos
	              });
	
	              _this3.update({ hoverTooltip: hoverTooltip });
	            } else {
	              _this3.update({ hoverTooltip: util.extend(_this3.state.hoverTooltip, { showTooltip: false }) });
	            }
	          }, 50, { leading: true, trailing: false }),
	          onMouseLeave: function onMouseLeave() {
	            return _this3.update({ hoverTooltip: {} });
	          },
	          insertedTooltip: function insertedTooltip(vnode) {
	            var tooltipEl = vnode.elm.childNodes[0];
	            _this3.update({ hoverTooltip: util.extend(_this3.state.hoverTooltip, {
	                tooltipWidth: tooltipEl.offsetWidth,
	                tooltipHeight: tooltipEl.offsetHeight
	              })
	            });
	          },
	          sortChange: function sortChange(ev) {
	            return ev.detail && _this3.dispatchEvent(new CustomEvent('change', { detail: ev.detail }));
	          },
	          renameLabel: function renameLabel(header) {
	            return header === '$event' ? 'Event' : 'All People';
	          }
	        }
	      };
	    }
	  }, {
	    key: 'chartData',
	    get: function get() {
	      return this._chartData;
	    },
	    set: function set(data) {
	      this._chartData = data;
	      this.updateChartState();
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Array, Math, Object, cellValue, chartMax, displayOptions, headers, hoverTooltip, rowIsKeyValuePair, rows, segmentColorMap, stickyHeader, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['tooltip'] = function (className, shouldHaveClass, title, count, percent) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "style": {
	            left: hoverTooltip.leftPos + "px",
	            top: hoverTooltip.topPos + "px"
	          },
	          "hook": {
	            insert: $helpers.insertedTooltip
	          },
	          "class": {
	            'hover-label': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'content': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "attrs": {
	                title: title
	              },
	              "class": Object.assign({}, _defineProperty({}, className, shouldHaveClass), {
	                'title': true
	              })
	            }, [title || '']));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'results': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'absolute': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'count': true
	                  }
	                }, [util.commaizeNumber(count) || '']));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'percent': true
	                }
	              }, [util.formatPercent(percent) || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['chart-bar'] = function () {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var widthStyle = {
	          width: util.formatPercent(options.width)
	        };
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "style": isStacked ? widthStyle : {},
	          "on": options.on,
	          "class": {
	            'chart-bar': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "style": isStacked ? {} : widthStyle,
	            "class": Object.assign({}, options.colorClass, {
	              'bar-color': true,
	              'show-tool-tip-on-hover': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'label-wrapper': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'bar-text-nudger': true
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'label': true
	                }
	              }, [options.label || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(options.outsideLabel && options.width < .5 ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'label-wrapper': true,
	                'outside-label': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "style": isStacked ? {} : widthStyle,
	                "class": {
	                  'outside-label-wrapper': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'bar-text-nudger': true
	                  }
	                }));
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": Object.assign({}, options.colorClass, {
	                    'label': true,
	                    'show-tool-tip-on-hover': true
	                  })
	                }, [options.label || '']));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);
	          __jade_nodes = __jade_nodes.concat(block ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(block && block());;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    var isStacked = displayOptions.plotStyle === 'stacked';
	    var isLogarithmic = displayOptions.analysis === 'logarithmic';
	    var isValueAbsolute = displayOptions.value === 'absolute';
	    return {
	      value: h("div", {
	        "class": Object.assign({}, {
	          'sticky-chart-headers': stickyHeader.isSticky
	        }, {
	          'bar-chart': true
	        })
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("table", function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("thead", {
	            "style": $helpers.getHeaderStyle()
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("tr", function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("th", {
	                "props": {
	                  colSpan: 0
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'irb-bar-chart-header': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat($component.child('irb-bar-chart-header', {
	                    on: {
	                      change: $helpers.sortChange
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("tbody", function () {
	            var __jade_nodes = [];
	            var singleRowData = rows.length == 1;
	            __jade_nodes = __jade_nodes.concat(rows.reduce(function (__each_nodes, row, rowIndex) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                rowIsKeyValuePair = row.length == 2;
	                var addTopLevelKey = singleRowData && rowIsKeyValuePair && isStacked;
	                var isMultiColor = row.length > 2 || isStacked;
	                __jade_nodes = __jade_nodes.concat(h("tr", function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(row.reduce(function (__each_nodes, cell, cellIndex) {
	                    return __each_nodes.concat(function () {
	                      var __jade_nodes = [];
	                      var lastCellIdx = row.length - 1;
	                      var segmentSum = util.sum(row[lastCellIdx]);
	                      __jade_nodes = __jade_nodes.concat(cell ? function () {
	                        var __jade_nodes = [];
	                        var headersToDisplay = $helpers.headersToDisplay();
	                        __jade_nodes = __jade_nodes.concat(cellIndex < lastCellIdx ? function () {
	                          var __jade_nodes = [];
	                          var colHeader = headersToDisplay[cellIndex];
	                          var headerText = headersToDisplay[cellIndex] === '$event' ? 'Events' : util.renameProperty(headersToDisplay[cellIndex]);
	                          __jade_nodes = __jade_nodes.concat(!Array.isArray(cell) || !isStacked || addTopLevelKey ? function () {
	                            var __jade_nodes = [];
	                            __jade_nodes = __jade_nodes.concat(h("td", {
	                              "attrs": {
	                                rowSpan: cell.rowSpan || 1
	                              },
	                              "style": {
	                                'min-width': $helpers.getHeaderWidth(headerText) + "px"
	                              },
	                              "class": {
	                                'chart-header': true
	                              }
	                            }, function () {
	                              var __jade_nodes = [];
	                              __jade_nodes = __jade_nodes.concat(!Array.isArray(cell) || isStacked ? function () {
	                                var __jade_nodes = [];
	                                cellValue = addTopLevelKey ? $helpers.renameLabel(headers[0]) : cell.value;
	                                var title = $helpers.formatLabel(colHeader, cellValue);
	                                __jade_nodes = __jade_nodes.concat(h("div", {
	                                  "attrs": {
	                                    title: title
	                                  },
	                                  "class": {
	                                    'chart-header-text': true
	                                  }
	                                }, [title || '']));;
	                                return __jade_nodes;
	                              }.call(this) : function () {
	                                var __jade_nodes = [];
	                                __jade_nodes = __jade_nodes.concat(h("ul", function () {
	                                  var __jade_nodes = [];
	                                  __jade_nodes = __jade_nodes.concat(cell.reduce(function (__each_nodes, value, valueIndex) {
	                                    return __each_nodes.concat(function () {
	                                      var __jade_nodes = [];
	                                      var title = $helpers.formatLabel(colHeader, value);
	                                      __jade_nodes = __jade_nodes.concat(h("li", {
	                                        "attrs": {
	                                          title: title
	                                        },
	                                        "on": {
	                                          mouseenter: function mouseenter(ev) {
	                                            return $helpers.mousedOverSegment(ev, rowIndex, title);
	                                          },
	                                          mousemove: function mousemove(ev) {
	                                            return $helpers.mousedOverSegment(ev, rowIndex, title);
	                                          },
	                                          mouseleave: $helpers.onMouseLeave
	                                        },
	                                        "class": {
	                                          'cell-label-container': true
	                                        }
	                                      }, function () {
	                                        var __jade_nodes = [];
	                                        __jade_nodes = __jade_nodes.concat(h("div", {
	                                          "class": {
	                                            'label': true
	                                          }
	                                        }, function () {
	                                          var __jade_nodes = [];
	                                          __jade_nodes = __jade_nodes.concat(h("span", {
	                                            "class": {
	                                              'label-text': true,
	                                              'show-tool-tip-on-hover': true
	                                            }
	                                          }, [title || '']));;
	                                          return __jade_nodes;
	                                        }.call(this).filter(Boolean)));
	                                        __jade_nodes = __jade_nodes.concat(hoverTooltip.showTooltip && hoverTooltip.rowIdx === rowIndex && hoverTooltip.cellIdx === title ? function () {
	                                          var __jade_nodes = [];
	                                          var segmentColorClassName = "segment-color-" + segmentColorMap[value];
	                                          var count = row[lastCellIdx][valueIndex];
	                                          var percent = count / segmentSum;
	                                          __jade_nodes = __jade_nodes.concat(jade_mixins['tooltip'].call(this, segmentColorClassName, isMultiColor, title, count, percent));;
	                                          return __jade_nodes;
	                                        }.call(this) : undefined);;
	                                        return __jade_nodes;
	                                      }.call(this).filter(Boolean)));;
	                                      return __jade_nodes;
	                                    }.call(this));
	                                  }, []));;
	                                  return __jade_nodes;
	                                }.call(this).filter(Boolean)));;
	                                return __jade_nodes;
	                              }.call(this));;
	                              return __jade_nodes;
	                            }.call(this).filter(Boolean)));;
	                            return __jade_nodes;
	                          }.call(this) : undefined);;
	                          return __jade_nodes;
	                        }.call(this) : function () {
	                          var __jade_nodes = [];
	                          __jade_nodes = __jade_nodes.concat(h("td", {
	                            "class": {
	                              'chart-data': true
	                            }
	                          }, function () {
	                            var __jade_nodes = [];
	                            __jade_nodes = __jade_nodes.concat(h("div", {
	                              "class": {
	                                'chart-grid': true
	                              }
	                            }, function () {
	                              var __jade_nodes = [];
	                              var numOfGridLines = 8;
	                              __jade_nodes = __jade_nodes.concat(Array(numOfGridLines).fill().reduce(function (__each_nodes, _, $index) {
	                                return __each_nodes.concat(function () {
	                                  var __jade_nodes = [];
	                                  __jade_nodes = __jade_nodes.concat(h("div", {
	                                    "class": {
	                                      'grid-line': true
	                                    }
	                                  }));;
	                                  return __jade_nodes;
	                                }.call(this));
	                              }, []));;
	                              return __jade_nodes;
	                            }.call(this).filter(Boolean)));
	                            __jade_nodes = __jade_nodes.concat(h("ul", {
	                              "class": {
	                                stacked: isStacked
	                              }
	                            }, function () {
	                              var __jade_nodes = [];
	                              var segmentCell = isLogarithmic ? cell.map(function (value) {
	                                return Math.log10(value);
	                              }) : cell;
	                              var segmentMax = void 0;
	                              __jade_nodes = __jade_nodes.concat(isValueAbsolute ? function () {
	                                var __jade_nodes = [];
	                                segmentMax = isLogarithmic ? Math.log10(chartMax) : chartMax;;
	                                return __jade_nodes;
	                              }.call(this) : function () {
	                                var __jade_nodes = [];
	                                __jade_nodes = __jade_nodes.concat(isStacked ? function () {
	                                  var __jade_nodes = [];
	                                  segmentMax = util.sum(segmentCell);;
	                                  return __jade_nodes;
	                                }.call(this) : function () {
	                                  var __jade_nodes = [];
	                                  segmentMax = Math.max.apply(Math, _toConsumableArray(segmentCell));;
	                                  return __jade_nodes;
	                                }.call(this));;
	                                return __jade_nodes;
	                              }.call(this));
	                              __jade_nodes = __jade_nodes.concat(cell.reduce(function (__each_nodes, value, valueIndex) {
	                                return __each_nodes.concat(function () {
	                                  var __jade_nodes = [];
	                                  var percent = value / segmentSum;
	                                  var percentValueString = util.formatPercent(percent);
	                                  var widthAsPercentage = (isLogarithmic ? Math.log10(value) : value) / segmentMax;
	                                  var segmentName = row[cellIndex - 1][valueIndex];;
	                                  var formattedSegmentName = $helpers.formatLabel(headersToDisplay[cellIndex - 1], segmentName);
	                                  var segmentColorClassName = "segment-color-" + segmentColorMap[segmentName];
	                                  __jade_nodes = __jade_nodes.concat(jade_mixins['chart-bar'].call({
	                                    block: function block() {
	                                      return function () {
	                                        var __jade_nodes = [];
	                                        __jade_nodes = __jade_nodes.concat(hoverTooltip.showTooltip && hoverTooltip.rowIdx === rowIndex && hoverTooltip.cellIdx === valueIndex ? function () {
	                                          var __jade_nodes = [];
	                                          __jade_nodes = __jade_nodes.concat(jade_mixins['tooltip'].call(this, segmentColorClassName, isMultiColor, formattedSegmentName, value, percent));;
	                                          return __jade_nodes;
	                                        }.call(this) : undefined);;
	                                        return __jade_nodes;
	                                      }.call(this);
	                                    }
	                                  }, {
	                                    outsideLabel: !isStacked,
	                                    colorClass: _defineProperty({}, isMultiColor ? segmentColorClassName : "not-multi-color", true),
	                                    label: isValueAbsolute ? util.abbreviateNumber(value) : percentValueString,
	                                    on: {
	                                      mouseenter: function mouseenter(ev) {
	                                        return $helpers.mousedOverSegment(ev, rowIndex, valueIndex);
	                                      },
	                                      mousemove: function mousemove(ev) {
	                                        return $helpers.mousedOverSegment(ev, rowIndex, valueIndex);
	                                      },
	                                      mouseleave: $helpers.onMouseLeave
	                                    },
	                                    width: widthAsPercentage
	                                  }));;
	                                  return __jade_nodes;
	                                }.call(this));
	                              }, []));;
	                              return __jade_nodes;
	                            }.call(this).filter(Boolean)));;
	                            return __jade_nodes;
	                          }.call(this).filter(Boolean)));;
	                          return __jade_nodes;
	                        }.call(this));;
	                        return __jade_nodes;
	                      }.call(this) : undefined);;
	                      return __jade_nodes;
	                    }.call(this));
	                  }, []));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Array" in locals ? locals.Array : typeof Array !== "undefined" ? Array : undefined, "Math" in locals ? locals.Math : typeof Math !== "undefined" ? Math : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "cellValue" in locals ? locals.cellValue : typeof cellValue !== "undefined" ? cellValue : undefined, "chartMax" in locals ? locals.chartMax : typeof chartMax !== "undefined" ? chartMax : undefined, "displayOptions" in locals ? locals.displayOptions : typeof displayOptions !== "undefined" ? displayOptions : undefined, "headers" in locals ? locals.headers : typeof headers !== "undefined" ? headers : undefined, "hoverTooltip" in locals ? locals.hoverTooltip : typeof hoverTooltip !== "undefined" ? hoverTooltip : undefined, "rowIsKeyValuePair" in locals ? locals.rowIsKeyValuePair : typeof rowIsKeyValuePair !== "undefined" ? rowIsKeyValuePair : undefined, "rows" in locals ? locals.rows : typeof rows !== "undefined" ? rows : undefined, "segmentColorMap" in locals ? locals.segmentColorMap : typeof segmentColorMap !== "undefined" ? segmentColorMap : undefined, "stickyHeader" in locals ? locals.stickyHeader : typeof stickyHeader !== "undefined" ? stickyHeader : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 415 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 416 */,
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	var _util = __webpack_require__(8);
	
	var _index = __webpack_require__(418);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(419);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SORT_ICONS = {
	  label: 'alpha',
	  value: 'value'
	};
	
	document.registerElement('irb-bar-chart-header', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'shouldUpdate',
	    value: function shouldUpdate(state) {
	      return !!(this.state.sortConfig || state.sortConfig);
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        helpers: {
	          SORT_ICONS: SORT_ICONS,
	          clickedHeader: function clickedHeader(section) {
	            var activeSortPanel = section === _this2.state.activeSortPanel ? null : section;
	            _this2.update({ activeSortPanel: activeSortPanel });
	          },
	          clickedMaxValue: function clickedMaxValue(ev) {
	            ev.stopPropagation();
	            _this2.dispatchEvent(new CustomEvent('change', { detail: { axis: true, maxValueText: true } }));
	          },
	          getAxisSortIcon: function getAxisSortIcon() {
	            var icon = '';
	            if (_this2.state.sortConfig) {
	              if (_this2.state.sortConfig.colSortAttrs && _this2.state.displayOptions && _this2.state.displayOptions.plotStyle === 'stacked') {
	                var headerIdx = _this2.state.sortConfig.hideFirstSort ? 0 : _this2.state.headers.length;
	                var colAttrs = _this2.state.sortConfig.colSortAttrs[headerIdx];
	                if (colAttrs) {
	                  icon = 'sort-' + SORT_ICONS[colAttrs.sortBy] + '-' + colAttrs.sortOrder;
	                }
	              } else if (_this2.state.sortConfig.sortBy === 'value') {
	                icon = 'sort-value-' + _this2.state.sortConfig.sortOrder;
	              }
	            }
	            return icon;
	          },
	          getHeaderSortActive: function getHeaderSortActive(headerIdx) {
	            var icon = '';
	            var sortConfig = _this2.state.sortConfig;
	            if (sortConfig && sortConfig.sortBy === 'column' && !(sortConfig.hideFirstSort && headerIdx === 0)) {
	              var colAttrs = sortConfig.colSortAttrs[headerIdx];
	              if (colAttrs) {
	                icon = 'sort-' + SORT_ICONS[colAttrs.sortBy] + '-' + colAttrs.sortOrder;
	              }
	            }
	            return icon;
	          },
	          getMaxValueLabel: function getMaxValueLabel() {
	            return _this2.state.displayOptions.value === 'absolute' ? (0, _util.abbreviateNumber)(_this2.state.chartMax) : '%';
	          },
	          isSortSelected: function isSortSelected(colAccessor, sortBy, sortOrder) {
	            var sortConfig = _this2.state.sortConfig;
	            if (isFinite(colAccessor)) {
	              sortConfig = sortConfig.colSortAttrs[colAccessor];
	            }
	            return sortConfig.sortBy === sortBy && sortConfig.sortOrder === sortOrder;
	          },
	          menuChange: function menuChange(ev, idx) {
	            if (ev.detail && ev.detail.state === 'closed' && _this2.state.activeSortPanel === idx) {
	              _this2.update({ activeSortPanel: null });
	            }
	          },
	          renameHeaderLabel: function renameHeaderLabel(header) {
	            return header === '$event' ? 'Events' : (0, _util.renameProperty)(header);
	          },
	          selectedHeaderSort: function selectedHeaderSort(type, colIdx, sortBy, sortOrder) {
	            _this2.dispatchEvent(new CustomEvent('change', { detail: { colIdx: colIdx, sortBy: sortBy, sortOrder: sortOrder, type: type } }));
	            _this2.update({ activeSortPanel: null });
	          }
	        },
	        template: _index2.default
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Object, activeSortPanel, axisWidthStyle, chartLabel, headersStyle, isFinite) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['sort-icon'] = function (colAccessor) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        var isAxis = !isFinite(colAccessor);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: function click() {
	              return $helpers.clickedHeader(colAccessor);
	            }
	          },
	          "class": Object.assign({}, {
	            'sort-axis': isAxis,
	            'sort-bar-header': !isAxis
	          }, {
	            'sort-icon': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          var icon = isAxis ? $helpers.getAxisSortIcon() : $helpers.getHeaderSortActive(colAccessor);;
	          __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	            "attrs": {
	              icon: icon, empty: !icon
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['sort-holder'] = function (type, sortByOptions, sortOrderOptions, colAccessor) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'sort-holder': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-drop-menu", {
	            "attrs": {
	              open: activeSortPanel === colAccessor
	            },
	            "on": {
	              change: function change(ev) {
	                return $helpers.menuChange(ev, colAccessor);
	              }
	            },
	            "class": {
	              'sort-controls': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'chart-controls-component': true,
	                'chart-control': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'title': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("sort");;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("ul", {
	                "class": {
	                  'control-list': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(sortByOptions.reduce(function (__each_nodes, sortBy, $index) {
	                  return __each_nodes.concat(function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(sortOrderOptions.reduce(function (__each_nodes, sortOrder, $index) {
	                      return __each_nodes.concat(function () {
	                        var __jade_nodes = [];
	                        var isSelected = $helpers.isSortSelected(colAccessor, sortBy, sortOrder);
	                        __jade_nodes = __jade_nodes.concat(h("li", function () {
	                          var __jade_nodes = [];
	                          __jade_nodes = __jade_nodes.concat(h("button", {
	                            "on": {
	                              click: function click() {
	                                return isSelected ? null : $helpers.selectedHeaderSort(type, colAccessor, sortBy, sortOrder);
	                              }
	                            },
	                            "class": Object.assign({}, {
	                              selected: isSelected
	                            }, {
	                              'button-option': true
	                            })
	                          }, function () {
	                            var __jade_nodes = [];
	                            __jade_nodes = __jade_nodes.concat(h("span", {
	                              "class": {
	                                'button-flex-wrapper': true
	                              }
	                            }, function () {
	                              var __jade_nodes = [];
	                              var sortByIconName = $helpers.SORT_ICONS[sortBy];
	                              __jade_nodes = __jade_nodes.concat(h("div", {
	                                "class": {
	                                  'sort-icon': true
	                                }
	                              }, function () {
	                                var __jade_nodes = [];
	                                __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                                  "attrs": {
	                                    icon: "sort-" + sortByIconName + "-" + sortOrder
	                                  }
	                                }));;
	                                return __jade_nodes;
	                              }.call(this).filter(Boolean)));
	                              __jade_nodes = __jade_nodes.concat(h("div", {
	                                "class": {
	                                  'sort-by-label': true
	                                }
	                              }, [sortByIconName || '']));
	                              __jade_nodes = __jade_nodes.concat(h("div", {
	                                "class": {
	                                  'sort-order-label': true
	                                }
	                              }, [sortOrder || '']));;
	                              return __jade_nodes;
	                            }.call(this).filter(Boolean)));;
	                            return __jade_nodes;
	                          }.call(this).filter(Boolean)));;
	                          return __jade_nodes;
	                        }.call(this).filter(Boolean)));;
	                        return __jade_nodes;
	                      }.call(this));
	                    }, []));;
	                    return __jade_nodes;
	                  }.call(this));
	                }, []));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    return {
	      value: h("div", {
	        "class": {
	          'chart-header-container': true,
	          'irb-learn-disabled': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(headersStyle ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(headersStyle.reduce(function (__each_nodes, header, idx) {
	            return __each_nodes.concat(function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "style": {
	                  width: header.width + "px"
	                },
	                "class": Object.assign({}, {
	                  'active-sort-panel': activeSortPanel == idx
	                }, {
	                  'bar-chart-header': true
	                })
	              }, function () {
	                var __jade_nodes = [];
	                var headerLabel = $helpers.renameHeaderLabel(header.name);
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "on": {
	                    click: function click() {
	                      return $helpers.clickedHeader(idx);
	                    }
	                  },
	                  "attrs": {
	                    title: headerLabel
	                  },
	                  "class": {
	                    'text': true,
	                    'shrinkable-label': true
	                  }
	                }, [headerLabel || '']));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['sort-icon'].call(this, idx));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['sort-holder'].call(this, "colSort", ["label", "value"], ["asc", "desc"], idx));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this));
	          }, []));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "style": {
	              width: axisWidthStyle
	            },
	            "class": Object.assign({}, {
	              'active-sort-panel': activeSortPanel == "axis"
	            }, {
	              'bar-chart-axis': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'axis-title': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "on": {
	                  click: function click() {
	                    return $helpers.clickedHeader("axis");
	                  }
	                },
	                "attrs": {
	                  title: chartLabel
	                },
	                "class": {
	                  'text': true,
	                  'shrinkable-label': true
	                }
	              }, [chartLabel || '']));
	              __jade_nodes = __jade_nodes.concat(jade_mixins['sort-icon'].call(this, "axis"));
	              __jade_nodes = __jade_nodes.concat(jade_mixins['sort-holder'].call(this, "axisSort", ["value"], ["asc", "desc"], "axis"));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'max-value': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "on": {
	                  click: $helpers.clickedMaxValue
	                },
	                "class": {
	                  'text': true
	                }
	              }, [$helpers.getMaxValueLabel() || '']));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "activeSortPanel" in locals ? locals.activeSortPanel : typeof activeSortPanel !== "undefined" ? activeSortPanel : undefined, "axisWidthStyle" in locals ? locals.axisWidthStyle : typeof axisWidthStyle !== "undefined" ? axisWidthStyle : undefined, "chartLabel" in locals ? locals.chartLabel : typeof chartLabel !== "undefined" ? chartLabel : undefined, "headersStyle" in locals ? locals.headersStyle : typeof headersStyle !== "undefined" ? headersStyle : undefined, "isFinite" in locals ? locals.isFinite : typeof isFinite !== "undefined" ? isFinite : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 419 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 420 */,
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _moment = __webpack_require__(15);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _panel = __webpack_require__(232);
	
	var _webcomponent = __webpack_require__(238);
	
	var _webcomponent2 = _interopRequireDefault(_webcomponent);
	
	var _util = __webpack_require__(8);
	
	var util = _interopRequireWildcard(_util);
	
	var _chartUtil = __webpack_require__(378);
	
	var _common = __webpack_require__(422);
	
	var _common2 = _interopRequireDefault(_common);
	
	var _index = __webpack_require__(424);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(425);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global $, Highcharts */
	
	var LOGARITHMIC_CHART_ZERO_REMAPPING = 0.6;
	
	/**
	 * https://github.com/mixpanel/mixpanel-platform/blob/d171a3ec/js/ui/chart.js#L38-L54
	 * this function is a hack because highcharts insists on showing a
	 * gridline for the 0th label on the y-axis, which conflicts with
	 * the x-axis
	 */
	function killLastGridline() {
	  var gridlines = $('.highcharts-grid path', this.container).show().map(function (gridline) {
	    var $gridline = $(gridline);
	    var offset = $gridline.offset();
	    return [$gridline, offset && offset.top || 0];
	  }).sort(function (a, b) {
	    return a[1] - b[1];
	  });
	  var line = gridlines[gridlines.length - 1];
	  if (line && line[0] && line[0].hide) {
	    line[0].hide();
	  }
	}
	
	document.registerElement('line-chart', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'attachedCallback', this).apply(this, arguments);
	      // TODO: research why attributeChangedCallback is not called before component
	      // is attached only in full webcomponents polyfill (and not lite version)
	      this.updateChartState();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback() {
	      this.updateChartState();
	    }
	  }, {
	    key: 'updateChartState',
	    value: function updateChartState() {
	      var _this2 = this;
	
	      if (!this.chartData || !this.initialized) {
	        return;
	      }
	
	      var _chartData = this.chartData,
	          headers = _chartData.headers,
	          series = _chartData.series,
	          peopleTimeSeries = _chartData.peopleTimeSeries;
	
	      var chartLabel = JSON.parse(this.getAttribute('chart-label'));
	
	      var data = peopleTimeSeries || series;
	
	      if (headers && data) {
	        this.update({
	          // transform nested object into single-level object:
	          // {'a': {'b': {'c': 5}}} => {'a / b / c': 5}
	          chartLabel: chartLabel,
	          data: util.objectFromPairs((0, _chartUtil.nestedObjectPaths)(data, 1).map(function (path) {
	            return [_this2.formatHeader(path.slice(0, -1), headers), path.slice(-1)[0]];
	          })),
	          displayOptions: JSON.parse(this.getAttribute('display-options')),
	          utcOffset: this.utcOffset
	        });
	      }
	    }
	  }, {
	    key: 'formatHeader',
	    value: function formatHeader(parts, headers) {
	      if (headers[0] === '$events') {
	        parts = [util.renameEvent(parts[0])].concat(_toConsumableArray(parts.slice(0, -1).map(util.renamePropertyValue)));
	      } else {
	        parts = parts.map(util.renamePropertyValue);
	      }
	      return parts.join(' / ');
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      return {
	        template: _index2.default,
	        defaultState: {
	          chartLabel: null,
	          data: {},
	          util: util
	        }
	      };
	    }
	  }, {
	    key: 'chartData',
	    get: function get() {
	      return this._chartData;
	    },
	    set: function set(data) {
	      this._chartData = data;
	      this.updateChartState();
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));
	
	document.registerElement('mp-line-chart', function (_WebComponent) {
	  _inherits(_class2, _WebComponent);
	
	  function _class2() {
	    _classCallCheck(this, _class2);
	
	    return _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).apply(this, arguments));
	  }
	
	  _createClass(_class2, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      this.initialized = true;
	      this.renderChart();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback() {
	      this._displayOptions = JSON.parse(this.getAttribute('display-options') || '{}');
	      this.renderChart();
	    }
	  }, {
	    key: 'epochToTimeUnitFunction',
	    value: function epochToTimeUnitFunction() {
	      var _this4 = this;
	
	      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref$displayRangeIfWe = _ref.displayRangeIfWeek,
	          displayRangeIfWeek = _ref$displayRangeIfWe === undefined ? true : _ref$displayRangeIfWe;
	
	      var customFormatting = { 'day': 'MMM D' };
	      return function (epoch) {
	        return util.epochToFormattedDate(epoch, _this4._displayOptions.timeUnit, { displayRangeIfWeek: displayRangeIfWeek, customFormatting: customFormatting });
	      };
	    }
	  }, {
	    key: 'getTickPositions',
	    value: function getTickPositions() {
	      var _this5 = this;
	
	      // TODO (Jordan): Pass in buckets from query. Handle short date ranges.
	      if (['week', 'quarter'].includes(this._displayOptions.timeUnit)) {
	        var _ret = function () {
	          var uniqueDates = new Set();
	          Object.keys(_this5.chartData).forEach(function (segment) {
	            Object.keys(_this5.chartData[segment]).forEach(function (date) {
	              return uniqueDates.add(_moment2.default.utc(date).unix() * 1000);
	            });
	          });
	          var ticks = [].concat(_toConsumableArray(uniqueDates)).sort();
	          var MAX_TICKS = 20;
	          if (ticks.length > MAX_TICKS) {
	            (function () {
	              var tickDivisor = 1 + Math.floor(ticks.length / MAX_TICKS); // preserve 1 of every n ticks
	              ticks = ticks.filter(function (_, idx) {
	                return !(idx % tickDivisor);
	              });
	            })();
	          }
	          return {
	            v: ticks
	          };
	        }();
	
	        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	      }
	      return null; // giving null in highcharts means "use default"
	    }
	  }, {
	    key: 'tooltipFormatter',
	    value: function tooltipFormatter() {
	      var timeFormatter = this.epochToTimeUnitFunction();
	      var unit = this._displayOptions.timeUnit;
	      var utcOffset = this.utcOffset;
	
	      return function () {
	        var isIncomplete = util.isIncompleteInterval([this], { unit: unit, utcOffset: utcOffset });
	        var index = this.series.data.indexOf(this.point);
	        var delta = null;
	        // TODO: revisit design for stacked chart, which already shows proportional percentage
	        if (index > 0 && !this.percentage) {
	          var last = this.series.data[index - 1];
	          delta = last.y > 0 ? (this.y - last.y) / last.y : null;
	        }
	        return '\n        <div class="title" style="background-color: ' + this.series.color + ';">' + util.truncateMiddle(this.series.name, 45) + '</div>\n        <div class="results">\n          <div class="absolute">\n            <span class="date">' + timeFormatter(this.key) + ': </span>\n            <span class="count">' + util.commaizeNumber(this.y) + '</span>\n          </div>\n          ' + (this.percentage ? '<div class="percent">' + util.formatPercent(this.percentage * .01) + '</div>' : '') + '\n          ' + (delta !== null ? '<div class="delta ' + (delta < 0 ? 'delta-neg' : delta > 0 ? 'delta-pos' : '') + '">' + util.formatPercent(delta) + '</div>' : '') + '\n        </div>\n        ' + (isIncomplete ? '<div class="footer">Incomplete ' + unit + '</div>' : '') + '\n      ';
	      };
	    }
	  }, {
	    key: 'xAxisFormatter',
	    value: function xAxisFormatter() {
	      var timeFormatter = this.epochToTimeUnitFunction({ displayRangeIfWeek: false });
	      return function () {
	        return timeFormatter(this.value);
	      };
	    }
	  }, {
	    key: 'createChartOptions',
	    value: function createChartOptions() {
	      var _this6 = this;
	
	      var displayOptions = this._displayOptions || {};
	      var axisOptions = {
	        endOnTick: true,
	        lineWidth: 1,
	        lineColor: _common2.default.grey150,
	        minPadding: 0,
	        maxPadding: 0,
	        startOnTick: true
	      };
	      var highchartsOptions = {
	
	        chart: {
	          backgroundColor: 'rgba(255,255,255,0)',
	          borderRadius: 0,
	          events: {
	            redraw: killLastGridline
	          },
	          marginTop: 0,
	          marginRight: 0,
	          marginBottom: null,
	          marginLeft: null,
	          renderTo: this.el,
	          spacingBottom: 30,
	          spacingLeft: 28,
	          style: {
	            fontFamily: '"Helvetica Neue", helvetica, sans-serif',
	            fontSize: '12px'
	          },
	          type: 'line',
	          zoomType: 'x'
	        },
	
	        colors: [_common2.default.segmentColor1, _common2.default.segmentColor2, _common2.default.segmentColor3, _common2.default.segmentColor4, _common2.default.segmentColor5, _common2.default.segmentColor6, _common2.default.segmentColor7, _common2.default.segmentColor8],
	
	        credits: {
	          enabled: false
	        },
	        legend: {
	          enabled: false
	        },
	        loading: {
	          labelStyle: {
	            color: 'transparent'
	          }
	        },
	        global: {
	          useUTC: false
	        },
	
	        plotOptions: {
	          line: {
	            incompleteStyle: {
	              'stroke-dasharray': '3,5'
	            },
	            lineWidth: 3,
	            marker: {
	              hover: {
	                enabled: true
	              },
	              lineColor: '#fff',
	              lineWidth: 2,
	              radius: 5,
	              symbol: 'circle'
	            },
	            shadow: false,
	            states: {
	              hover: {
	                lineWidth: 4,
	                lineWidthPlus: 0
	              }
	            },
	            turboThreshold: 0
	          },
	          series: {
	            animation: {
	              duration: 300
	            },
	            cursor: 'pointer',
	            fillOpacity: 1,
	            marker: {
	              enabled: null,
	              hover: {
	                enabled: true
	              },
	              lineWidth: 2,
	              symbol: 'circle'
	            },
	            shadow: false,
	            stacking: null
	          }
	        },
	
	        title: {
	          text: null
	        },
	
	        tooltip: {
	          backgroundColor: '#fff',
	          borderWidth: 0,
	          formatter: this.tooltipFormatter(),
	          shadow: false,
	          useHTML: true
	        },
	
	        xAxis: util.extend(axisOptions, {
	          dateTimeLabelFormats: {
	            day: '%b %e'
	          },
	          endOnTick: false,
	          labels: {
	            formatter: this.xAxisFormatter(),
	            style: {
	              color: '#868ea3'
	            },
	            y: 18
	          },
	          maxPadding: 0.017,
	          minPadding: 0.017,
	          minTickInterval: util.MS_BY_UNIT[this._displayOptions.timeUnit],
	          startOnTick: false,
	          tickmarkPlacement: 'on',
	          tickPosition: 'outside',
	          tickPositions: this.getTickPositions()
	        }),
	        yAxis: util.extend(axisOptions, {
	          allowDecimals: true,
	          gridLineColor: '#e6e8eb',
	          gridLineDashStyle: 'shortDash',
	          labels: {
	            x: -20,
	            style: {
	              fontWeight: 'bold',
	              color: '#868ea3'
	            }
	          },
	          min: 0,
	          minPadding: 0,
	          title: {
	            text: null
	          },
	          showFirstLabel: false,
	          showLastLabel: false
	        })
	      };
	
	      if (displayOptions.plotStyle === 'stacked') {
	        highchartsOptions.plotOptions.series.stacking = 'normal';
	        highchartsOptions.plotOptions.series.fillOpacity = 0.2;
	        highchartsOptions.chart.type = 'area';
	        if (displayOptions.value === 'relative') {
	          highchartsOptions.plotOptions.series.stacking = 'percent';
	        }
	      }
	      if (displayOptions.analysis === 'logarithmic') {
	        highchartsOptions.yAxis.type = 'logarithmic';
	        highchartsOptions.yAxis.min = LOGARITHMIC_CHART_ZERO_REMAPPING;
	      }
	
	      // create the series data!
	      //
	      // a whole pile of garbage courtesy of
	      // https://github.com/mixpanel/mixpanel-platform/blob/d171a3e/js/ui/chart.js#L449-L580
	
	      // I presume we can replace this with one of our existing IRB/mp-common utils
	      var _flat = function _flat(obj, depth) {
	        if (typeof obj !== 'object') {
	          return obj;
	        } else {
	          if (depth <= 0) {
	            return Object.values(obj).reduce(function (sum, v) {
	              return sum + _flat(v, depth);
	            }, 0);
	          } else {
	            depth--;
	            var ag = {};
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;
	
	            try {
	              for (var _iterator = Object.keys(obj)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                var key = _step.value;
	
	                ag[key] = _flat(obj[key], depth);
	              }
	            } catch (err) {
	              _didIteratorError = true;
	              _iteratorError = err;
	            } finally {
	              try {
	                if (!_iteratorNormalCompletion && _iterator.return) {
	                  _iterator.return();
	                }
	              } finally {
	                if (_didIteratorError) {
	                  throw _iteratorError;
	                }
	              }
	            }
	
	            return ag;
	          }
	        }
	      };
	
	      var data = _flat(this.chartData, 2);
	
	      var seriesMap = {};
	      var allLabelsAreDates = true;
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        var _loop = function _loop() {
	          var segmentName = _step2.value;
	
	          var counts = data[segmentName];
	
	          var type = 'line';
	          if (highchartsOptions && highchartsOptions.chart && highchartsOptions.chart.type === 'area') {
	            type = 'area';
	          }
	          var series = {
	            name: segmentName,
	            type: type,
	            data: Object.keys(counts).map(function (label) {
	              var count = counts[label];
	              var labelAsDate = (0, _moment2.default)(label);
	              if (labelAsDate.isValid()) {
	                label = labelAsDate.valueOf();
	              } else {
	                allLabelsAreDates = false;
	              }
	              return [label, count];
	            })
	          };
	          seriesMap[segmentName] = series;
	        };
	
	        for (var _iterator2 = Object.keys(data)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          _loop();
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	
	      if (allLabelsAreDates) {
	        highchartsOptions.xAxis.type = 'datetime';
	        var _iteratorNormalCompletion3 = true;
	        var _didIteratorError3 = false;
	        var _iteratorError3 = undefined;
	
	        try {
	          for (var _iterator3 = Object.values(seriesMap)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	            var series = _step3.value;
	
	            series.data = util.sorted(series.data, { transform: function transform(d) {
	                return d[0];
	              } }); // sort by date
	          }
	        } catch (err) {
	          _didIteratorError3 = true;
	          _iteratorError3 = err;
	        } finally {
	          try {
	            if (!_iteratorNormalCompletion3 && _iterator3.return) {
	              _iterator3.return();
	            }
	          } finally {
	            if (_didIteratorError3) {
	              throw _iteratorError3;
	            }
	          }
	        }
	      } else {
	        highchartsOptions.xAxis.type = 'category';
	      }
	
	      var sortedSegments = Object.keys(data).map(function (segment) {
	        // vals is a dictionary of timestamps to counts
	        var vals = data[segment];
	        var segmentTotal = Object.values(vals).reduce(function (sum, val) {
	          return sum + val;
	        }, 0);
	        return [segment, segmentTotal];
	      }).sort(function (a, b) {
	        return b[1] - a[1];
	      }).map(function (pair) {
	        return pair[0];
	      });
	
	      highchartsOptions.series = sortedSegments.map(function (s, idx) {
	        return util.extend(seriesMap[s], {
	          color: highchartsOptions.colors[idx % highchartsOptions.colors.length],
	          isIncompletePath: util.isIncompleteInterval(seriesMap[s].data, {
	            unit: _this6._displayOptions.timeUnit,
	            utcOffset: _this6.utcOffset
	          })
	        });
	      });
	
	      return highchartsOptions;
	    }
	  }, {
	    key: 'renderChart',
	    value: function renderChart() {
	      if (!this.chartData || !this.initialized || !this._displayOptions) {
	        return;
	      }
	
	      if (this.el) {
	        this.removeChild(this.el);
	      }
	
	      this.el = document.createElement('div');
	      this.el.className = 'mp-highcharts-container';
	      this.appendChild(this.el);
	
	      this.highchart = new Highcharts.Chart(this.createChartOptions());
	    }
	  }, {
	    key: 'chartData',
	    get: function get() {
	      return this._chartData;
	    },
	    set: function set(data) {
	      this._chartData = data;
	      this.renderChart();
	    }
	  }, {
	    key: 'utcOffset',
	    get: function get() {
	      return this._utcOffset;
	    },
	    set: function set(offset) {
	      this._utcOffset = offset;
	      this.renderChart();
	    }
	  }]);
	
	  return _class2;
	}(_webcomponent2.default));

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(423);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(273)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js?camelCase!./../../node_modules/stylus-loader/index.js!./common.styl", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js?camelCase!./../../node_modules/stylus-loader/index.js!./common.styl");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(272)();
	// imports
	
	
	// module
	exports.push([module.id, "span.substr.matches-search{color:#4c6072;font-weight:600}span.button-flex-wrapper{align-items:inherit;display:flex;justify-content:inherit}input[type=text]{box-shadow:none;height:auto}", ""]);
	
	// exports
	exports.locals = {
		"grey-150": "#e5eaef",
		"grey150": "#e5eaef",
		"segment-color-1": "#23588c",
		"segmentColor1": "#23588c",
		"segment-color-2": "#106eca",
		"segmentColor2": "#106eca",
		"segment-color-3": "#4ba8ff",
		"segmentColor3": "#4ba8ff",
		"segment-color-4": "#24d2ef",
		"segmentColor4": "#24d2ef",
		"segment-color-5": "#46b5ab",
		"segmentColor5": "#46b5ab",
		"segment-color-6": "#6fe9aa",
		"segmentColor6": "#6fe9aa",
		"segment-color-7": "#f1842b",
		"segmentColor7": "#f1842b",
		"segment-color-8": "#ffd209",
		"segmentColor8": "#ffd209"
	};

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function (JSON, chartLabel, data, displayOptions, utcOffset) {
	    var h = __webpack_require__(232).h;
	    return {
	      value: h("div", {
	        "class": {
	          'line-chart-container': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'chart-header-container': true
	          }
	        }, [chartLabel || '']));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'line-chart': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-line-chart", {
	            "props": {
	              chartData: data,
	              utcOffset: utcOffset
	            },
	            "attrs": {
	              'display-options': JSON.stringify(displayOptions)
	            }
	          }));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "JSON" in locals ? locals.JSON : typeof JSON !== "undefined" ? JSON : undefined, "chartLabel" in locals ? locals.chartLabel : typeof chartLabel !== "undefined" ? chartLabel : undefined, "data" in locals ? locals.data : typeof data !== "undefined" ? data : undefined, "displayOptions" in locals ? locals.displayOptions : typeof displayOptions !== "undefined" ? displayOptions : undefined, "utcOffset" in locals ? locals.utcOffset : typeof utcOffset !== "undefined" ? utcOffset : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 425 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 426 */,
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _webcomponent = __webpack_require__(238);
	
	var _webcomponent2 = _interopRequireDefault(_webcomponent);
	
	var _util = __webpack_require__(8);
	
	var util = _interopRequireWildcard(_util);
	
	var _chartUtil = __webpack_require__(378);
	
	var _index = __webpack_require__(428);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(429);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global $ */
	
	document.registerElement('table-chart', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'attachedCallback', this).apply(this, arguments);
	      // TODO: research why attributeChangedCallback is not called before component
	      // is attached only in full webcomponents polyfill (and not lite version)
	      this.updateChartState();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback() {
	      this.updateChartState();
	    }
	  }, {
	    key: 'updateChartState',
	    value: function updateChartState() {
	      if (!this.chartData || !this.initialized) {
	        return;
	      }
	
	      var _chartData = this.chartData,
	          headers = _chartData.headers,
	          series = _chartData.series,
	          resourceDescription = _chartData.resourceDescription;
	
	      var displayOptions = this.getJSONAttribute('display-options');
	      var sortConfig = this.getJSONAttribute('sorting');
	      if (!this.validSortConfig(headers, sortConfig)) {
	        return;
	      }
	      this.sortConfig = sortConfig;
	
	      series = util.nestedObjectSum(series);
	
	      var columnHeaders = void 0;
	      var columnRows = void 0;
	      var rows = (0, _chartUtil.nestedObjectToTableData)(series, sortConfig);
	      var rowData = rows.map(function (row) {
	        return row.slice(-1)[0];
	      }); // last item of each row is data
	      rows = rows.map(function (row) {
	        return row.slice(0, -1);
	      }); // strip off data items
	
	      if (headers.length > 1) {
	        headers = headers.slice(0, -1);
	        columnHeaders = util.nestedObjectKeys(series).sort().map(function (header) {
	          return { display: header, value: header };
	        });
	        columnRows = rowData.map(function (row) {
	          return columnHeaders.map(function (header) {
	            return row[header.value];
	          });
	        });
	      } else {
	        columnHeaders = [{ display: resourceDescription, value: 'value' }];
	        columnRows = rowData.map(function (row) {
	          return [row.value];
	        });
	      }
	
	      var singleValueColumnSum = columnHeaders.length === 1 ? util.sum(Object.values(series)) : null;
	
	      this.update({
	        headers: headers,
	        rows: rows,
	        columnHeaders: columnHeaders,
	        columnRows: columnRows,
	        displayOptions: displayOptions,
	        singleValueColumnSum: singleValueColumnSum
	      });
	    }
	  }, {
	    key: 'validSortConfig',
	    value: function validSortConfig(headers, sortConfig) {
	      if (!sortConfig) {
	        return false;
	      }
	
	      if (sortConfig.sortBy === 'value') {
	        return !!sortConfig.sortColumn;
	      } else {
	        return sortConfig.colSortAttrs.length === Math.max(1, headers.length - 1);
	      }
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        defaultState: {
	          headers: [],
	          rows: [],
	          columnHeaders: [],
	          columnRows: [],
	          displayOptions: {},
	          singleValueColumnSum: null,
	          util: util
	        },
	
	        helpers: {
	          clickHeader: function clickHeader(headerType, colIdx, colName) {
	            _this2.dispatchEvent(new CustomEvent('change', { detail: {
	                headerType: headerType, colIdx: colIdx, colName: colName
	              } }));
	          },
	
	          leftSortArrowClasses: function leftSortArrowClasses(idx) {
	            if (_this2.sortConfig.sortBy === 'column') {
	              return _defineProperty({
	                'sort-active': true
	              }, 'sort-' + _this2.sortConfig.colSortAttrs[idx].sortOrder, true);
	            } else {
	              return {};
	            }
	          },
	
	          rightSortArrowClasses: function rightSortArrowClasses(header) {
	            if (_this2.sortConfig.sortBy === 'value' && _this2.sortConfig.sortColumn === header) {
	              return _defineProperty({
	                'sort-active': true
	              }, 'sort-' + _this2.sortConfig.sortOrder, true);
	            } else {
	              return {};
	            }
	          }
	        }
	      };
	    }
	  }, {
	    key: 'chartData',
	    get: function get() {
	      return this._chartData;
	    },
	    set: function set(data) {
	      this._chartData = data;
	      this.updateChartState();
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));
	
	document.registerElement('table-manager', function (_WebComponent) {
	  _inherits(_class2, _WebComponent);
	
	  function _class2() {
	    _classCallCheck(this, _class2);
	
	    return _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).apply(this, arguments));
	  }
	
	  _createClass(_class2, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      var _this4 = this;
	
	      this.scrollHandler = function (ev) {
	        var $target = $(ev.target);
	        var scrollX = $target.scrollLeft();
	        var scrollY = $target.scrollTop();
	
	        _this4.$container.toggleClass('scrolled-y', !!scrollY);
	
	        if ($target.hasClass('right-table')) {
	          _this4.$container.toggleClass('scrolled-x', !!scrollX);
	
	          // vertically scroll left table as right table is scrolled
	          _this4.$left.scrollTop(scrollY);
	
	          // horizontally scroll fixed header as right table is scrolled
	          _this4.$rightFixedHeader.css('transform', 'translateX(-' + scrollX + 'px)'); //
	        }
	      };
	
	      this.sizeHandler = function () {
	        _this4.$right.width(_this4.$container.width() - _this4.$left.children('table').width());
	
	        var $leftHeaders = _this4.$left.find('th');
	        var $leftFixedHeaders = _this4.$leftFixedHeader.children();
	
	        var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;
	
	        $leftHeaders.each(function (i, el) {
	          var adjust = isFirefox ? 2 : 1;
	          var width = $(el).width() - (i === $leftHeaders.length - 1 ? adjust : 0) + (1 - adjust);
	          $leftFixedHeaders.eq(i).width(width);
	        });
	
	        var $rightHeaders = _this4.$right.find('th');
	        var $rightFixedHeaders = _this4.$rightFixedHeader.children();
	
	        $rightHeaders.each(function (i, el) {
	          var adjust = isFirefox ? 2 : 0;
	          $rightFixedHeaders.eq(i).width($(el).width() - adjust);
	        });
	      };
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback() {
	      if (this._initialized) {
	        this.render();
	      }
	    }
	  }, {
	    key: 'detachedCallback',
	    value: function detachedCallback() {
	      $(window).off('resize', this.sizeHandler);
	      this.$left.off('scroll', this.scrollHandler);
	      this.$right.off('scroll', this.scrollHandler);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      this._initialized = true;
	      this.$container = $(this).parent();
	      this.$left = this.$container.find('.left-table');
	      this.$right = this.$container.find('.right-table');
	      this.$leftFixedHeader = this.$left.siblings('.fixed-header');
	      this.$rightFixedHeader = this.$right.siblings('.fixed-header');
	
	      this.sizeHandler();
	      $(window).on('resize', this.sizeHandler);
	      this.$right.on('scroll', this.scrollHandler);
	      this.$left.on('scroll', this.scrollHandler);
	    }
	  }, {
	    key: 'data',
	    get: function get() {
	      return this._data;
	    },
	    set: function set(data) {
	      var _this5 = this;
	
	      this._data = data;
	      // allow time for table to fully render so we can check width
	      window.requestAnimationFrame(function () {
	        return _this5.render();
	      });
	    }
	  }]);
	
	  return _class2;
	}(_webcomponent2.default));

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Object, columnHeaders, columnRows, displayOptions, headers, percent, rows, singleValueColumnSum, util) {
	    var h = __webpack_require__(232).h;
	    var fullWidthTable = columnHeaders.length && columnRows.length;
	    var isRelativeValue = displayOptions.value === 'relative';
	    return {
	      value: h("div", {
	        "class": Object.assign({}, {
	          'full-width': fullWidthTable
	        }, {
	          'table-chart': true
	        })
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("table-manager", {
	          "props": {
	            data: {
	              headers: headers, rows: rows, columnHeaders: columnHeaders, columnRows: columnRows, displayOptions: displayOptions
	            }
	          }
	        }));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'left-table-container': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'fixed-header': true,
	              'chart-header-container': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(headers.reduce(function (__each_nodes, header, idx) {
	              return __each_nodes.concat(function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "on": {
	                    click: function click() {
	                      return $helpers.clickHeader('left', idx, header);
	                    }
	                  },
	                  "class": {
	                    'fixed-header-cell': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("span", [header === '$event' ? 'Event' : util.renameProperty(header) || '']));
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": Object.assign({}, $helpers.leftSortArrowClasses(idx), {
	                      'sort-arrows': true
	                    })
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                      "attrs": {
	                        icon: 'triangle-up'
	                      },
	                      "class": {
	                        'triangle-up': true
	                      }
	                    }));
	                    __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                      "attrs": {
	                        icon: 'triangle-down'
	                      },
	                      "class": {
	                        'triangle-down': true
	                      }
	                    }));;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this));
	            }, []));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'left-table': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("table", function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("thead", function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("tr", {
	                  "class": {
	                    'chart-header-container': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(headers.reduce(function (__each_nodes, header, $index) {
	                    return __each_nodes.concat(function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(h("th", [util.renameProperty(header) || '']));;
	                      return __jade_nodes;
	                    }.call(this));
	                  }, []));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("tbody", function () {
	                var __jade_nodes = [];
	                var firstColIdx = 0;
	                __jade_nodes = __jade_nodes.concat(rows.reduce(function (__each_nodes, row, $index) {
	                  return __each_nodes.concat(function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(h("tr", function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(row.reduce(function (__each_nodes, cell, cellIdx) {
	                        return __each_nodes.concat(function () {
	                          var __jade_nodes = [];
	                          var isFirstCol = cellIdx === 0;;
	                          __jade_nodes = __jade_nodes.concat(cell ? function () {
	                            var __jade_nodes = [];
	                            var value = headers[cellIdx] === '$event' ? util.renameEvent(cell.value) : util.renamePropertyValue(cell.value);
	                            __jade_nodes = __jade_nodes.concat(h("td", {
	                              "props": {
	                                rowSpan: cell.rowSpan || 1,
	                                title: value
	                              },
	                              "class": {
	                                'first-column-cell': isFirstCol,
	                                'even': isFirstCol && firstColIdx++ % 2
	                              }
	                            }, [value || '']));;
	                            return __jade_nodes;
	                          }.call(this) : undefined);;
	                          return __jade_nodes;
	                        }.call(this));
	                      }, []));;
	                      return __jade_nodes;
	                    }.call(this).filter(Boolean)));;
	                    return __jade_nodes;
	                  }.call(this));
	                }, []));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat(fullWidthTable ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'right-table-container': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'fixed-header': true,
	                'chart-header-container': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(columnHeaders.reduce(function (__each_nodes, header, idx) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "on": {
	                      click: function click() {
	                        return $helpers.clickHeader('right', idx, header.value);
	                      }
	                    },
	                    "class": {
	                      'fixed-header-cell': true
	                    }
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(h("span", [header.display || '']));
	                    __jade_nodes = __jade_nodes.concat(h("div", {
	                      "class": Object.assign({}, $helpers.rightSortArrowClasses(header.value), {
	                        'sort-arrows': true
	                      })
	                    }, function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                        "attrs": {
	                          icon: 'triangle-up'
	                        },
	                        "class": {
	                          'triangle-up': true
	                        }
	                      }));
	                      __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                        "attrs": {
	                          icon: 'triangle-down'
	                        },
	                        "class": {
	                          'triangle-down': true
	                        }
	                      }));;
	                      return __jade_nodes;
	                    }.call(this).filter(Boolean)));;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'right-table': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("table", function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("thead", function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("tr", {
	                    "class": {
	                      'chart-header-container': true
	                    }
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(columnHeaders.reduce(function (__each_nodes, header, $index) {
	                      return __each_nodes.concat(function () {
	                        var __jade_nodes = [];
	                        __jade_nodes = __jade_nodes.concat(h("th", [header.display || '']));;
	                        return __jade_nodes;
	                      }.call(this));
	                    }, []));;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));
	                __jade_nodes = __jade_nodes.concat(h("tbody", function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(columnRows.reduce(function (__each_nodes, row, $index) {
	                    return __each_nodes.concat(function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(h("tr", function () {
	                        var __jade_nodes = [];
	                        var segmentMax = singleValueColumnSum ? singleValueColumnSum : util.sum(row.filter(function (val) {
	                          return val;
	                        }));
	                        __jade_nodes = __jade_nodes.concat(row.reduce(function (__each_nodes, cell, $index) {
	                          return __each_nodes.concat(function () {
	                            var __jade_nodes = [];
	                            __jade_nodes = __jade_nodes.concat(cell || cell === 0 ? function () {
	                              var __jade_nodes = [];
	                              var cellValue = cell.value || cell;
	                              __jade_nodes = __jade_nodes.concat(isRelativeValue ? function () {
	                                var __jade_nodes = [];
	                                percent = util.formatPercent(cellValue / segmentMax);
	                                cellValue = percent === '0%' ? '< 0.01%' : percent;;
	                                return __jade_nodes;
	                              }.call(this) : undefined);
	                              __jade_nodes = __jade_nodes.concat(h("td", {
	                                "props": {
	                                  rowSpan: cell.rowSpan || 1
	                                }
	                              }, [cellValue || '']));;
	                              return __jade_nodes;
	                            }.call(this) : function () {
	                              var __jade_nodes = [];
	                              __jade_nodes = __jade_nodes.concat(h("td"));;
	                              return __jade_nodes;
	                            }.call(this));;
	                            return __jade_nodes;
	                          }.call(this));
	                        }, []));;
	                        return __jade_nodes;
	                      }.call(this).filter(Boolean)));;
	                      return __jade_nodes;
	                    }.call(this));
	                  }, []));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "columnHeaders" in locals ? locals.columnHeaders : typeof columnHeaders !== "undefined" ? columnHeaders : undefined, "columnRows" in locals ? locals.columnRows : typeof columnRows !== "undefined" ? columnRows : undefined, "displayOptions" in locals ? locals.displayOptions : typeof displayOptions !== "undefined" ? displayOptions : undefined, "headers" in locals ? locals.headers : typeof headers !== "undefined" ? headers : undefined, "percent" in locals ? locals.percent : typeof percent !== "undefined" ? percent : undefined, "rows" in locals ? locals.rows : typeof rows !== "undefined" ? rows : undefined, "singleValueColumnSum" in locals ? locals.singleValueColumnSum : typeof singleValueColumnSum !== "undefined" ? singleValueColumnSum : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 429 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 430 */,
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, projectHasEvents, report, result, resultLoading, stickyHeader, util) {
	    var _Object$assign;
	
	    var h = __webpack_require__(232).h;
	    var hasLegend = $helpers.showLegend();
	    return {
	      value: h("div", {
	        "class": Object.assign({}, (_Object$assign = {}, _defineProperty(_Object$assign, report.displayOptions.chartType + "-chart-type", true), _defineProperty(_Object$assign, 'has-legend', hasLegend), _defineProperty(_Object$assign, 'sticky-chart-headers', stickyHeader.isSticky), _Object$assign), {
	          'chart': true
	        })
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'main-chart': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(resultLoading && projectHasEvents ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'chart-loader': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'chart-header-container': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'header-text-container': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "class": {
	                      'header-text': true
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'header-icon': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                    "attrs": {
	                      icon: 'ellipsis'
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'chart-graph': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("mp-spinner"));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : !projectHasEvents ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'chart-loader': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'chart-header-container': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'header-text-container': true
	                  }
	                }));
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'header-icon': true
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'chart-graph': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'chart-error-data-image': true
	                  }
	                }));
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'chart-error-no-data-text': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat("We don't have any data for your project.");;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            var processedResult = $helpers.processResult(result);;
	            __jade_nodes = __jade_nodes.concat(report.displayOptions.chartType == 'bar' ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'extras-menu-container': true,
	                  'chart-control': true
	                }
	              }, [$component.child('extras-menu') || '']));
	              __jade_nodes = __jade_nodes.concat(h("bar-chart", {
	                "props": {
	                  chartData: processedResult
	                },
	                "attrs": $helpers.stringifyObjValues({
	                  'segment-color-map': report.legend.colorMap,
	                  'chart-label': $helpers.getChartLabel(),
	                  'display-options': $helpers.getDisplayOptions(),
	                  'function-label': $helpers.getFunctionLabel(),
	                  'sorting': report.sorting.bar,
	                  'legend-change-id': report.legend.changeID,
	                  'sticky-header': util.pick(stickyHeader, ["isSticky", "chartWidth", "windowScrollLeft", "chartOffsetLeft"])
	                }),
	                "on": {
	                  change: $helpers.barChartChange
	                },
	                "hook": {
	                  insert: $helpers.barChartInserted,
	                  destroy: $helpers.barChartDestroyed
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this) : report.displayOptions.chartType == 'line' ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'extras-menu-container': true,
	                  'chart-control': true
	                }
	              }, [$component.child('extras-menu') || '']));
	              __jade_nodes = __jade_nodes.concat(h("line-chart", {
	                "props": {
	                  chartData: processedResult,
	                  utcOffset: $helpers.getUtcOffset()
	                },
	                "attrs": $helpers.stringifyObjValues({
	                  'chart-label': $helpers.getChartLabel(),
	                  'display-options': $helpers.getDisplayOptions()
	                })
	              }));;
	              return __jade_nodes;
	            }.call(this) : report.displayOptions.chartType == 'table' ? function () {
	              var __jade_nodes = [];
	              var functionLabel = $helpers.getFunctionLabel();;
	              var resourceDescription = $helpers.getChartLabel() + (functionLabel ? " " + functionLabel : '');;
	              __jade_nodes = __jade_nodes.concat(h("table-chart", {
	                "props": {
	                  chartData: util.extend(processedResult, {
	                    resourceDescription: resourceDescription
	                  })
	                },
	                "attrs": $helpers.stringifyObjValues({
	                  'display-options': $helpers.getDisplayOptions(),
	                  'sorting': report.sorting.table
	                }),
	                "on": {
	                  change: $helpers.tableChange
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat(hasLegend ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "style": $helpers.getLegendStyle(),
	            "class": {
	              'legend': true,
	              'irb-learn-manipulate-data-disabled': true
	            }
	          }, [$component.child('chart-legend') || '']));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "projectHasEvents" in locals ? locals.projectHasEvents : typeof projectHasEvents !== "undefined" ? projectHasEvents : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined, "result" in locals ? locals.result : typeof result !== "undefined" ? result : undefined, "resultLoading" in locals ? locals.resultLoading : typeof resultLoading !== "undefined" ? resultLoading : undefined, "stickyHeader" in locals ? locals.stickyHeader : typeof stickyHeader !== "undefined" ? stickyHeader : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 432 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 433 */,
/* 434 */,
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, Object, learnTransitioningIn, report, util) {
	    var h = __webpack_require__(232).h;
	    var learnStep = util.getLearnStep(report);
	    var isManipulateDataStep = learnStep.name === "manipulate-data";
	    return {
	      value: h("div", {
	        "class": Object.assign({}, util.learnClasses({
	          disabledSteps: ["choose-event", "compare-event", "group-by"],
	          tooltipContainer: true,
	          transitioning: learnTransitioningIn && isManipulateDataStep
	        }), {
	          'irb-result': true
	        })
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'result-controls': true
	          }
	        }, [$component.child('chart-controls') || '']));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'result-display': true
	          }
	        }, [$component.child('chart-display') || '']));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "learnTransitioningIn" in locals ? locals.learnTransitioningIn : typeof learnTransitioningIn !== "undefined" ? learnTransitioningIn : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 436 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 437 */,
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _panel = __webpack_require__(232);
	
	__webpack_require__(439);
	
	var _index = __webpack_require__(443);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(444);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('irb-learn', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        template: _index2.default,
	        helpers: {
	          clickedModalButton: function clickedModalButton(step) {
	            if (step === 'conclusion') {
	              _this2.app.finishLearn();
	            } else {
	              _this2.update({
	                learnModalStepIndex: (_this2.state.learnModalStepIndex || 0) + 1
	              });
	              _this2.app.transitionLearn();
	            }
	          }
	        }
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _registerElement = __webpack_require__(440);
	
	var _index = __webpack_require__(441);
	
	var _index2 = _interopRequireDefault(_index);
	
	var _index3 = __webpack_require__(442);
	
	var _index4 = _interopRequireDefault(_index3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	(0, _registerElement.registerMPElement)('mp-tutorial-tooltip', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback() {
	      _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'attributeChangedCallback', this).apply(this, arguments);
	
	      var update = {};
	      var numSteps = parseInt(this.getAttribute('num-steps'));
	      var currStep = parseInt(this.getAttribute('curr-step'));
	
	      if (Number.isInteger(numSteps)) {
	        update.numSteps = numSteps;
	      }
	      if (Number.isInteger(currStep)) {
	        update.currStep = currStep;
	      }
	
	      this.update(update);
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        css: _index4.default,
	        template: _index2.default,
	        useShadowDom: true,
	        defaultState: {
	          numSteps: 0,
	          currStep: 0,
	          delayRemove: 400 },
	        helpers: {
	          close: function close(e) {
	            e.stopPropagation();
	            _this2.dispatchEvent(new CustomEvent('close'));
	          },
	          getSteps: function getSteps() {
	            return [].concat(_toConsumableArray(Array(_this2.state.numSteps).keys()));
	          }
	        }
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 440 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.registerMPElement = registerMPElement;
	/**
	 * Supports registering MP web components safely even when multiple
	 * copies of this library are loaded separately on the same page
	 * (e.g., autotrack editor on a page which already has these components).
	 */
	function registerMPElement(tagName, componentClass) {
	  var registry = window["mp-common-registered-components"];
	  if (!registry) {
	    window["mp-common-registered-components"] = registry = {};
	  }
	
	  if (!registry[tagName]) {
	    registry[tagName] = document.registerElement(tagName, componentClass);
	  }
	}

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, currStep, delayRemove) {
	    var h = __webpack_require__(232).h;
	    var hide = $component.isAttributeEnabled('hide');
	    var hideFooter = $component.isAttributeEnabled('hide-footer');
	    var placement = $component.getAttribute('placement');
	    var arrowAlign = $component.getAttribute('arrow-align');
	    return {
	      value: h("div", {
	        "class": {
	          'mp-tutorial-tooltip-stage': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(!hide ? function () {
	          var _Object$assign;
	
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, (_Object$assign = {
	              'mp-tutorial-tooltip-hide-footer': hideFooter
	            }, _defineProperty(_Object$assign, 'mp-tutorial-tooltip-placement-' + placement, placement), _defineProperty(_Object$assign, 'mp-tutorial-tooltip-arrow-align-' + arrowAlign, arrowAlign), _defineProperty(_Object$assign, 'delayed', {
	              'mp-tutorial-tooltip-in': true
	            }), _defineProperty(_Object$assign, 'remove', {
	              'mp-tutorial-tooltip-out': true,
	              delayRemove: delayRemove
	            }), _Object$assign), {
	              'mp-tutorial-tooltip-wrapper': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'mp-tutorial-tooltip-content': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("content"));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat($component.isAttributeEnabled('closeable') ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "on": {
	                  click: $helpers.close
	                },
	                "class": {
	                  'mp-tutorial-tooltip-close-btn': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                  "attrs": {
	                    icon: 'x'
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : undefined);
	            __jade_nodes = __jade_nodes.concat(!$component.isAttributeEnabled('hide-footer') ? function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'mp-tutorial-tooltip-footer': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("ul", {
	                  "class": {
	                    'mp-tutorial-tooltip-steps': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat($helpers.getSteps().reduce(function (__each_nodes, step, $index) {
	                    return __each_nodes.concat(function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(h("li", {
	                        "class": Object.assign({}, {
	                          'mp-tutorial-tooltip-active': step === currStep
	                        }, {
	                          'mp-tutorial-tooltip-step': true
	                        })
	                      }));;
	                      return __jade_nodes;
	                    }.call(this));
	                  }, []));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this) : undefined);;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "currStep" in locals ? locals.currStep : typeof currStep !== "undefined" ? currStep : undefined, "delayRemove" in locals ? locals.delayRemove : typeof delayRemove !== "undefined" ? delayRemove : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 442 */
/***/ function(module, exports) {

	module.exports = "svg-icon {   display: inline-block;   height: 22px;   min-height: 22px;   min-width: 22px;   position: relative;   width: 22px; } svg-icon svg {   left: 0;   position: absolute;   top: 0; } svg-icon[icon=type-boolean] #left-dot {   color: #fff;   fill: #fff; } svg-icon[icon=type-boolean] #right-dot {   color: #4c6072;   fill: #4c6072; } * {   -webkit-font-smoothing: antialiased; } *:focus {   outline: 0; } *::-ms-clear {   height: 0;   width: 0; } body {   color: #6e859d;   font-family: 'Helvetica Neue', 'Helvetica', 'Tahoma', 'Geneva', 'Arial', sans-serif;   font-size: 12px;   font-stretch: normal;   font-weight: 400; } a, .mp-link {   cursor: pointer;   text-decoration: none; } a, .mp-link, a:visited, .mp-link:visited {   color: #3b99f0; } a:hover, .mp-link:hover {   color: #4ba8ff; } .mp-font-size-xl {   font-size: 18px; } .mp-font-size-large {   font-size: 16px; } .mp-font-size-medium {   font-size: 14px; } .mp-font-size-default {   font-size: 12px; } .mp-font-size-xs {   font-size: 11px;   text-transform: uppercase; } .mp-font-weight-bold {   font-weight: 600; } .mp-font-weight-medium {   font-weight: 500; } .mp-font-weight-regular {   font-weight: 400; } .mp-font-paragraph {   color: #6e859d;   font-size: 14px;   font-family: 'Helvetica Neue', 'Helvetica', 'Tahoma', 'Geneva', 'Arial', sans-serif;   font-stretch: normal;   font-weight: 500;   line-height: 18px; } input[type=text], textarea {   border: 1px solid #d8e0e6;   border-radius: 5px;   box-sizing: border-box;   color: #4c6072;   display: inline-block;   font-family: 'Helvetica Neue', 'Helvetica', 'Tahoma', 'Geneva', 'Arial', sans-serif;   font-size: 12px;   font-weight: 400;   padding: 8px;   -webkit-transition: border-color 150ms ease-out;   transition: border-color 150ms ease-out; } input[type=text]::-webkit-input-placeholder, textarea::-webkit-input-placeholder {   color: #9cacbb !important;   font-weight: weight-normal !important; } input[type=text]::-moz-placeholder, textarea::-moz-placeholder {   color: #9cacbb !important;   font-weight: weight-normal !important; } input[type=text]:-ms-input-placeholder, textarea:-ms-input-placeholder {   color: #9cacbb !important;   font-weight: weight-normal !important; } input[type=text]::placeholder, textarea::placeholder {   color: #9cacbb !important;   font-weight: weight-normal !important; } input[type=text]:focus, textarea:focus, input[type=text]:active, textarea:active {   border-color: #3391e9;   -webkit-transition: border-color 200ms ease-in;   transition: border-color 200ms ease-in; } input[type=text] {   height: 36px; } mp-tutorial-tooltip {   color: rgba(255,255,255,0.64);   cursor: default;   font-weight: 500;   height: 160px;   position: absolute;   width: 420px;   z-index: 6000;   bottom: calc(100% + 12px);   left: calc(50% - 210px); } :host {   color: rgba(255,255,255,0.64);   cursor: default;   font-weight: 500;   height: 160px;   position: absolute;   width: 420px;   z-index: 6000;   bottom: calc(100% + 12px);   left: calc(50% - 210px); } mp-tutorial-tooltip[hide=\"true\"] {   pointer-events: none; } :host([hide=\"true\"]) {   pointer-events: none; } mp-tutorial-tooltip[placement=\"bottom\"] {   bottom: initial;   left: calc(50% - 210px);   top: calc(100% + 12px); } :host([placement=\"bottom\"]) {   bottom: initial;   left: calc(50% - 210px);   top: calc(100% + 12px); } mp-tutorial-tooltip[placement=\"left\"] {   bottom: initial;   left: initial;   right: calc(100% + 12px);   top: calc(50% - 80px); } :host([placement=\"left\"]) {   bottom: initial;   left: initial;   right: calc(100% + 12px);   top: calc(50% - 80px); } mp-tutorial-tooltip[placement=\"right\"] {   bottom: initial;   left: calc(100% + 12px);   top: calc(50% - 80px); } :host([placement=\"right\"]) {   bottom: initial;   left: calc(100% + 12px);   top: calc(50% - 80px); } mp-tutorial-tooltip[placement=\"center\"] {   bottom: initial;   left: calc(50% - 210px);   top: calc(50% - 80px); } :host([placement=\"center\"]) {   bottom: initial;   left: calc(50% - 210px);   top: calc(50% - 80px); } mp-tutorial-tooltip[arrow-align=\"top\"] {   bottom: initial;   top: calc(50% - 31px); } :host([arrow-align=\"top\"]) {   bottom: initial;   top: calc(50% - 31px); } mp-tutorial-tooltip[arrow-align=\"bottom\"] {   bottom: calc(50% - 24px);   top: initial; } :host([arrow-align=\"bottom\"]) {   bottom: calc(50% - 24px);   top: initial; } mp-tutorial-tooltip[arrow-align=\"left\"] {   left: calc(50% - 32px);   right: initial; } :host([arrow-align=\"left\"]) {   left: calc(50% - 32px);   right: initial; } mp-tutorial-tooltip[arrow-align=\"right\"] {   left: initial;   right: calc(50% - 36px); } :host([arrow-align=\"right\"]) {   left: initial;   right: calc(50% - 36px); } .mp-tutorial-tooltip-stage {   height: inherit; } .mp-tutorial-tooltip-wrapper {   background: #3391e9;   border-radius: 8px;   box-shadow: 0 16px 41px 0 rgba(18,82,143,0.37);   height: inherit;   opacity: 0; } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-in {   opacity: 1;   -webkit-transition: all 400ms cubic-bezier(0.165, 0.84, 0.44, 1);   transition: all 400ms cubic-bezier(0.165, 0.84, 0.44, 1); } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-out {   opacity: 0;   -webkit-transition: all 400ms cubic-bezier(0.895, 0.03, 0.685, 0.22);   transition: all 400ms cubic-bezier(0.895, 0.03, 0.685, 0.22); } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-bottom.mp-tutorial-tooltip-in, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-top.mp-tutorial-tooltip-in, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-left.mp-tutorial-tooltip-in, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-right.mp-tutorial-tooltip-in {   -webkit-transform: translate(0);           transform: translate(0); } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-top, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-top.mp-tutorial-tooltip-out {   -webkit-transform: translateY(-20px);           transform: translateY(-20px); } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-bottom, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-bottom.mp-tutorial-tooltip-out {   -webkit-transform: translateY(20px);           transform: translateY(20px); } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-left, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-left.mp-tutorial-tooltip-out {   -webkit-transform: translateX(-20px);           transform: translateX(-20px); } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-right, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-right.mp-tutorial-tooltip-out {   -webkit-transform: translateX(20px);           transform: translateX(20px); } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-center.mp-tutorial-tooltip-in {   -webkit-transform: scale(1);           transform: scale(1); } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-center, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-center.mp-tutorial-tooltip-out {   -webkit-transform: scale(0.95);           transform: scale(0.95); } .mp-tutorial-tooltip-wrapper::after {   border: 11px solid transparent;   content: '';   height: 0;   position: absolute;   width: 0; } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-top::after {   border-top-color: #2687e3;   left: 50%;   margin-left: -11px;   top: 100%; } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-top.mp-tutorial-tooltip-hide-footer::after {   border-top-color: #3391e9; } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-bottom::after {   border-bottom-color: #3391e9;   bottom: 100%;   left: 50%;   margin-left: -11px; } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-left::after {   border-left-color: #3391e9;   left: 100%;   margin-top: -11px;   top: 50%; } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-placement-right::after {   border-right-color: #3391e9;   margin-top: -11px;   right: 100%;   top: 50%; } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-arrow-align-top.mp-tutorial-tooltip-placement-left::after, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-arrow-align-top.mp-tutorial-tooltip-placement-right::after {   bottom: initial;   top: 32px; } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-arrow-align-bottom.mp-tutorial-tooltip-placement-left::after, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-arrow-align-bottom.mp-tutorial-tooltip-placement-right::after {   bottom: 13px;   top: initial; } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-arrow-align-bottom.mp-tutorial-tooltip-placement-left:not(.mp-tutorial-tooltip-hide-footer)::after, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-arrow-align-bottom.mp-tutorial-tooltip-placement-right:not(.mp-tutorial-tooltip-hide-footer)::after {   border-right-color: #2687e3; } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-arrow-align-right.mp-tutorial-tooltip-placement-top::after, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-arrow-align-right.mp-tutorial-tooltip-placement-bottom::after {   left: initial;   right: 23px; } .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-arrow-align-left.mp-tutorial-tooltip-placement-top::after, .mp-tutorial-tooltip-wrapper.mp-tutorial-tooltip-arrow-align-left.mp-tutorial-tooltip-placement-bottom::after {   left: 32px;   right: initial; } .mp-tutorial-tooltip-close-btn {   cursor: pointer;   position: absolute;   right: 10px;   top: 10px; } .mp-tutorial-tooltip-close-btn svg-icon svg {   left: 0;   top: 0; } .mp-tutorial-tooltip-close-btn svg-icon svg, .mp-tutorial-tooltip-close-btn svg-icon path {   color: #6cb8ff;   fill: #6cb8ff;   -webkit-transition: 0.2s;   transition: 0.2s; } .mp-tutorial-tooltip-close-btn:hover svg-icon svg, .mp-tutorial-tooltip-close-btn:hover svg-icon path {   color: #fff;   fill: #fff; } .mp-tutorial-tooltip-content {   padding: 20px 30px; } .mp-tutorial-tooltip-footer {   background: #2687e3;   border-radius: 0 0 8px 8px;   border-top: 1px solid #2687e3;   bottom: 0;   height: 42px;   position: absolute;   width: 100%; } .mp-tutorial-tooltip-footer ul.mp-tutorial-tooltip-steps {   list-style: none;   margin: 0;   padding: 0;   padding-left: 30px; } .mp-tutorial-tooltip-footer ul.mp-tutorial-tooltip-steps li.mp-tutorial-tooltip-step {   background: #6cb8ff;   border-radius: 50%;   float: left;   height: 6px;   margin: 17px 14px 17px 0;   position: relative;   width: 6px; } .mp-tutorial-tooltip-footer ul.mp-tutorial-tooltip-steps li.mp-tutorial-tooltip-step.mp-tutorial-tooltip-active {   background: transparent; } .mp-tutorial-tooltip-footer ul.mp-tutorial-tooltip-steps li.mp-tutorial-tooltip-step.mp-tutorial-tooltip-active::after {   border: 4px solid #ffd209;   border-radius: 50%;   box-shadow: 0 2px 3px 0 rgba(19,102,179,0.66);   content: '';   height: 4px;   left: -3px;   position: absolute;   top: -3px;   width: 4px; } ";


/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, learnActive, learnModalStepIndex, learnReminding, learnTransitioningOut, report, util) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['irb-learn-tooltip'] = function () {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      var stepNames = [];
	      for (var jade_interp = 0; jade_interp < arguments.length; jade_interp++) {
	        stepNames.push(arguments[jade_interp]);
	      }
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(learnActive ? function () {
	          var __jade_nodes = [];
	          var step = util.getLearnStep(report, learnModalStepIndex);
	          var stepName = stepNames.includes(step.name) ? step.name : stepNames[stepNames.length - 1].name;
	          __jade_nodes = __jade_nodes.concat(h("mp-tutorial-tooltip", {
	            "attrs": {
	              hide: learnTransitioningOut || !stepNames.includes(step.name),
	              'placement': "right",
	              'num-steps': 4,
	              'curr-step': step.index - 1,
	              'closeable': true
	            },
	            "on": {
	              close: function close() {
	                return $component.app.helpers.finishLearn();
	              }
	            },
	            "class": {
	              'irb-learn-reminding': learnReminding
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'mp-tooltip-title': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(stepName == "choose-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Start by choosing an event to show");;
	                return __jade_nodes;
	              }.call(this) : stepName == "compare-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Now compare that to a different event");;
	                return __jade_nodes;
	              }.call(this) : stepName == "group-by" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Next, group your events by a property");;
	                return __jade_nodes;
	              }.call(this) : stepName == "manipulate-data" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Lastly, choose the best-suited visualization");;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'mp-tooltip-subtitle': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(stepName == "choose-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Choosing an event shows you how many times your customers completed that action in the chart below.");;
	                return __jade_nodes;
	              }.call(this) : stepName == "compare-event" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Compare multiple events to see if your customers are performing certain events more than others.");;
	                return __jade_nodes;
	              }.call(this) : stepName == "group-by" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Break your events down into groups to answer deeper questions about how your customers use your product.");;
	                return __jade_nodes;
	              }.call(this) : stepName == "manipulate-data" ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("A line chart works well for displaying your data over time, while a bar chart is better at showing quantity.");;
	                return __jade_nodes;
	              }.call(this) : undefined);;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this);
	    };
	    return {
	      value: h("div", {
	        "class": {
	          'irb-learn': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(learnActive ? function () {
	          var __jade_nodes = [];
	          var step = util.getLearnStep(report, learnModalStepIndex);;
	          var isModalStep = ["introduction", "getting-started", "conclusion"].includes(step.name);;
	          __jade_nodes = __jade_nodes.concat(isModalStep && !learnTransitioningOut ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("mp-modal", {
	              "attrs": {
	                open: true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'mp-modal-content': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'mp-modal-title': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(step.name == "introduction" ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat("Introducing Insights");;
	                    return __jade_nodes;
	                  }.call(this) : step.name == "conclusion" ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat("Congratulations, you’ve built your first Insights query!");;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "class": {
	                    'mp-modal-subtitle': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(step.name == "introduction" ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat("Built to make exploring your data easier than ever,");
	                    __jade_nodes = __jade_nodes.concat(h("br"));
	                    __jade_nodes = __jade_nodes.concat("Insights allows you to create complex queries that help");
	                    __jade_nodes = __jade_nodes.concat(h("br"));
	                    __jade_nodes = __jade_nodes.concat("you understand how your customers use your product.");;
	                    return __jade_nodes;
	                  }.call(this) : step.name == "conclusion" ? function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat("You’ve only scratched the surface. Go ahead and explore");
	                    __jade_nodes = __jade_nodes.concat(h("br"));
	                    __jade_nodes = __jade_nodes.concat("the full power of Insights. If you have other questions");
	                    __jade_nodes = __jade_nodes.concat(h("br"));
	                    __jade_nodes = __jade_nodes.concat("about all of the additional ways you can analyze and");
	                    __jade_nodes = __jade_nodes.concat(h("br"));
	                    __jade_nodes = __jade_nodes.concat("visualize your data using Insights,");
	                    __jade_nodes = __jade_nodes.concat(" ");
	                    __jade_nodes = __jade_nodes.concat(h("a", {
	                      "href": 'docs-url-here'
	                    }, function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat("click here");;
	                      return __jade_nodes;
	                    }.call(this).filter(Boolean)));
	                    __jade_nodes = __jade_nodes.concat(".");;
	                    return __jade_nodes;
	                  }.call(this) : undefined);;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "on": {
	                    click: $component.app.helpers.finishLearn
	                  },
	                  "class": {
	                    'mp-modal-close': true
	                  }
	                }, function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                    "attrs": {
	                      icon: 'x'
	                    }
	                  }));;
	                  return __jade_nodes;
	                }.call(this).filter(Boolean)));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("mp-button-bar", {
	                "on": {
	                  click: function click() {
	                    return $helpers.clickedModalButton(step.name);
	                  }
	                },
	                "class": {
	                  'mp-button-bar-primary': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(step.name == "introduction" ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat("Let's get started");;
	                  return __jade_nodes;
	                }.call(this) : step.name == "conclusion" ? function () {
	                  var __jade_nodes = [];
	                  __jade_nodes = __jade_nodes.concat("Continue exploring your data");;
	                  return __jade_nodes;
	                }.call(this) : undefined);;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "learnActive" in locals ? locals.learnActive : typeof learnActive !== "undefined" ? learnActive : undefined, "learnModalStepIndex" in locals ? locals.learnModalStepIndex : typeof learnModalStepIndex !== "undefined" ? learnModalStepIndex : undefined, "learnReminding" in locals ? locals.learnReminding : typeof learnReminding !== "undefined" ? learnReminding : undefined, "learnTransitioningOut" in locals ? locals.learnTransitioningOut : typeof learnTransitioningOut !== "undefined" ? learnTransitioningOut : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 444 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 445 */,
/* 446 */,
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _function = __webpack_require__(301);
	
	var _moment = __webpack_require__(15);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _panel = __webpack_require__(232);
	
	var _util = __webpack_require__(8);
	
	__webpack_require__(448);
	
	var _index = __webpack_require__(451);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(452);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	// TODO these are some updates which need to make their way into
	// mixpanel-common and panel soon
	// -------------------------------------------------------------------------------
	// const MPToggle = window[`mp-common-registered-components`][`mp-toggle`];
	// document.registerElement(`irb-mp-toggle`, class extends MPToggle {
	//   attachedCallback() {
	//     if (this.initialized) {
	//       return;
	//     }
	//     super.attachedCallback(...arguments);
	//   }
	// });
	var MPTooltip = window['mp-common-registered-components']['mp-tooltip'];
	document.registerElement('irb-mp-tooltip', function (_MPTooltip) {
	  _inherits(_class, _MPTooltip);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      if (!this.initialized) {
	        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'attachedCallback', this).apply(this, arguments);
	      } else {
	        this.host = this.parentNode;
	        this.host.addEventListener('mouseenter', this.show);
	        this.host.addEventListener('mouseleave', this.hide);
	      }
	    }
	  }]);
	
	  return _class;
	}(MPTooltip));
	var MPConfDel = window['mp-common-registered-components']['mp-confirm-delete'];
	document.registerElement('irb-mp-confirm-delete', function (_MPConfDel) {
	  _inherits(_class2, _MPConfDel);
	
	  function _class2() {
	    _classCallCheck(this, _class2);
	
	    return _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).apply(this, arguments));
	  }
	
	  _createClass(_class2, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      if (this.initialized) {
	        return;
	      }
	
	      if (!this.elementMoved) {
	        this.elementMoved = true;
	        document.body.style.position = 'relative';
	        document.body.appendChild(this);
	      }
	
	      if (!this.initialized) {
	        _get(_class2.prototype.__proto__ || Object.getPrototypeOf(_class2.prototype), 'attachedCallback', this).apply(this, arguments);
	      }
	    }
	  }]);
	
	  return _class2;
	}(MPConfDel));
	// -------------------------------------------------------------------------------
	
	var LEQ_ORDER = {
	  asc: (0, _function.leqToNumericOrdering)(function (a, b) {
	    return a <= b;
	  }),
	  desc: (0, _function.leqToNumericOrdering)(function (a, b) {
	    return b <= a;
	  })
	};
	
	document.registerElement('irb-reports', function (_Component) {
	  _inherits(_class3, _Component);
	
	  function _class3() {
	    _classCallCheck(this, _class3);
	
	    return _possibleConstructorReturn(this, (_class3.__proto__ || Object.getPrototypeOf(_class3)).apply(this, arguments));
	  }
	
	  _createClass(_class3, [{
	    key: 'updateDrawer',
	    value: function updateDrawer(attrs) {
	      this.update({ reportsDrawer: (0, _util.extend)(this.state.reportsDrawer, attrs) });
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this4 = this;
	
	      return {
	        template: _index2.default,
	
	        defaultState: {
	          reportsDrawer: {
	            nameFilter: '',
	            userFilter: 'all',
	
	            sortField: 'title',
	            sortOrder: 'asc'
	          }
	        },
	
	        helpers: {
	          changeNameFilter: function changeNameFilter(ev) {
	            return _this4.updateDrawer({ nameFilter: ev.target.value });
	          },
	          changeUserFilter: function changeUserFilter(userFilter) {
	            return _this4.updateDrawer({ userFilter: userFilter });
	          },
	          clickDelete: function clickDelete(ev, report) {
	            ev.stopPropagation();
	            _this4.updateDrawer({ confirmDelete: report });
	          },
	          clickHeader: function clickHeader(field) {
	            var sortField = field;
	            var sortOrder = _this4.state.reportsDrawer.sortOrder;
	            if (field === _this4.state.reportsDrawer.sortField) {
	              sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';
	            }
	            _this4.updateDrawer({ sortField: sortField, sortOrder: sortOrder });
	          },
	          clickReport: function clickReport(report) {
	            _this4.helpers.close();
	            _this4.app.chooseReport(report);
	          },
	          close: function close() {
	            _this4.updateDrawer({ nameFilter: '' });
	            _this4.update({ reportsDrawerOpen: false });
	          },
	          deleteReport: function deleteReport(report) {
	            _this4.app.deleteReport(report);
	            _this4.updateDrawer({ confirmDelete: null });
	          },
	          focusSearchInput: function focusSearchInput(vnode) {
	            return requestAnimationFrame(function () {
	              return vnode.elm.parentNode.querySelector('input').focus();
	            });
	          },
	          handleConfirmChange: function handleConfirmChange(visibility) {
	            if (visibility !== 'open') {
	              _this4.updateDrawer({ confirmDelete: null });
	            }
	          },
	          hasWritePermissions: function hasWritePermissions() {
	            return _this4.app.hasWritePermissions;
	          },
	          reportsForDisplay: function reportsForDisplay() {
	            var drawer = _this4.state.reportsDrawer;
	            var reports = Object.values(_this4.state.savedReports);
	            if (drawer.userFilter === 'yours') {
	              (function () {
	                var userID = String(_this4.app.userID);
	                reports = reports.filter(function (bm) {
	                  return String(bm.userID) === userID;
	                });
	              })();
	            }
	            if (drawer.nameFilter) {
	              reports = reports.map(function (report) {
	                return (0, _util.extend)(report, {
	                  matches: (0, _util.stringFilterMatches)(report.title, drawer.nameFilter)
	                });
	              }).filter(function (report) {
	                return !!report.matches;
	              });
	            }
	            var orderFunc = LEQ_ORDER[drawer.sortOrder || 'asc'];
	            return reports.sort((0, _function.lexicalCompose)(
	            // prioritize beginning match
	            (0, _function.mapArguments)(_function.defaultOrdering, function (report) {
	              return report.matches ? -report.matches[0].length : 0;
	            }),
	
	            // second: order by selected field
	            (0, _function.mapArguments)(orderFunc, function (report) {
	              var val = report[drawer.sortField];
	              if (drawer.sortField === 'modified') {
	                val = _moment2.default.utc(val);
	              } else if (typeof val === 'string') {
	                val = val.toLowerCase();
	              }
	              return val;
	            })));
	          }
	        }
	      };
	    }
	  }]);
	
	  return _class3;
	}(_panel.Component));

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _panel = __webpack_require__(232);
	
	var _mpDrawer = __webpack_require__(449);
	
	var _mpDrawer2 = _interopRequireDefault(_mpDrawer);
	
	var _mpDrawer3 = __webpack_require__(450);
	
	var _mpDrawer4 = _interopRequireDefault(_mpDrawer3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	document.registerElement('mp-drawer', function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'attachedCallback',
	    value: function attachedCallback() {
	      if (this.initialized) {
	        return;
	      }
	
	      if (!this.elementMoved) {
	        this.elementMoved = true;
	        document.body.style.position = 'relative';
	        document.body.appendChild(this);
	      }
	
	      if (!this.initialized) {
	        _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'attachedCallback', this).apply(this, arguments);
	      }
	    }
	  }, {
	    key: 'config',
	    get: function get() {
	      var _this2 = this;
	
	      return {
	        css: _mpDrawer2.default,
	        template: _mpDrawer4.default,
	        useShadowDom: true,
	
	        defaultState: {
	          delayRemove: 250 },
	
	        helpers: {
	          close: function close() {
	            return _this2.dispatchEvent(new CustomEvent('close'));
	          }
	        }
	      };
	    }
	  }]);
	
	  return _class;
	}(_panel.Component));

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(272)();
	// imports
	
	
	// module
	exports.push([module.id, ".mp-drawer{height:0;width:0;z-index:100}.mp-drawer,.mp-drawer .mp-drawer-content{overflow:hidden;position:absolute;right:0;top:0}.mp-drawer .mp-drawer-content{background-color:#fff;min-height:100%;padding:0}.mp-drawer .mp-drawer-bg{background-color:#fff;height:100%;position:fixed;right:0}.mp-drawer .mp-drawer-bg,.mp-drawer .mp-drawer-content{-webkit-transform:translateX(100%);transform:translateX(100%);-webkit-transition:-webkit-transform .25s;transition:-webkit-transform .25s;transition:transform .25s;transition:transform .25s,-webkit-transform .25s}.mp-drawer .mp-drawer-overlay{opacity:0}.mp-drawer.mp-drawer-in{height:100%;overflow:initial;width:100%}.mp-drawer.mp-drawer-in .mp-drawer-overlay{background-color:#3c4c63;height:100%;opacity:.8;position:fixed;width:100%;-webkit-transition:opacity .25s;transition:opacity .25s}.mp-drawer.mp-drawer-in .mp-drawer-bg,.mp-drawer.mp-drawer-in .mp-drawer-content{-webkit-transform:translateX(0);transform:translateX(0)}.mp-drawer.mp-drawer-out .mp-drawer-overlay{opacity:0}.mp-drawer.mp-drawer-out .mp-drawer-bg,.mp-drawer.mp-drawer-out .mp-drawer-content{-webkit-transform:translateX(100%);transform:translateX(100%)}", ""]);
	
	// exports


/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, delayRemove) {
	    var h = __webpack_require__(232).h;
	    return {
	      value: h("div", {
	        "class": {
	          'mp-drawer-stage': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(!$component.isAttributeEnabled("hide") ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              delayed: {
	                'mp-drawer-in': true
	              },
	              remove: {
	                'mp-drawer-out': true,
	                delayRemove: delayRemove
	              }
	            }, {
	              'mp-drawer': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "on": {
	                click: $helpers.close
	              },
	              "class": {
	                'mp-drawer-overlay': true
	              }
	            }));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'mp-drawer-bg': true
	              }
	            }));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'mp-drawer-content': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("content"));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this) : undefined);;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "delayRemove" in locals ? locals.delayRemove : typeof delayRemove !== "undefined" ? delayRemove : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($helpers, Object, reportsDrawer, reportsDrawerOpen, savedReports) {
	    var h = __webpack_require__(232).h;
	    var jade_mixins = {};
	    jade_mixins['checkbox-item'] = function (label, value, selected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: function click() {
	              return toggleFunc(value);
	            }
	          },
	          "class": {
	            'checkbox-item': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'colored': selected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'check-checkbox',
	                empty: !selected
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, [label || '']));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['checkbox-select-all'] = function (allSelected, toggleFunc) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("li", {
	          "on": {
	            click: toggleFunc
	          },
	          "class": {
	            'checkbox-item': true,
	            'checkbox-select-all': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, {
	              'checkbox-dash': !allSelected
	            }, {
	              'checkbox-select-icon': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: allSelected ? 'check-checkbox' : 'dash'
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'checkbox-label': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("Select all");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['highlight-matches'] = function (matches) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(matches.reduce(function (__each_nodes, substr, si) {
	          return __each_nodes.concat(function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("span", {
	              "class": Object.assign({}, {
	                'matches-search': !(si % 2)
	              }, {
	                'substr': true
	              })
	            }, [substr || '']));;
	            return __jade_nodes;
	          }.call(this));
	        }, []));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['header-col'] = function (text, field) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var _Object$assign;
	
	        var __jade_nodes = [];
	        var fieldSelected = reportsDrawer.sortField === field;
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: function click() {
	              return $helpers.clickHeader(field);
	            }
	          },
	          "class": Object.assign({}, (_Object$assign = {}, _defineProperty(_Object$assign, "reportlist-field-" + field, true), _defineProperty(_Object$assign, 'reportlist-field-selected', fieldSelected), _Object$assign), {
	            'report-col': true
	          })
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'reportlist-col-title': true
	            }
	          }, [text || '']));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": Object.assign({}, _defineProperty({
	              'reportlist-sort-selected': fieldSelected
	            }, "reportlist-sort-" + reportsDrawer.sortOrder, true), {
	              'reportlist-sort-arrows': true
	            })
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'caret': true,
	                'caret-up': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: "triangle-up"
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'caret': true,
	                'caret-down': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                "attrs": {
	                  icon: "triangle-down"
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this);
	    };
	
	    jade_mixins['user-filter-option'] = function (label, value) {
	      var block = this && this.block,
	          attributes = this && this.attributes || {};
	
	      return function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "on": {
	            click: function click() {
	              return $helpers.changeUserFilter(value);
	            }
	          },
	          "class": Object.assign({}, {
	            'user-filter-selected': value === reportsDrawer.userFilter
	          }, {
	            'user-filter-option': true
	          })
	        }, [label || '']));;
	        return __jade_nodes;
	      }.call(this);
	    };
	    return {
	      value: h("div", {
	        "class": {
	          'reports-list-wrapper': true
	        }
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(h("mp-drawer", {
	          "attrs": {
	            hide: !reportsDrawerOpen
	          },
	          "on": {
	            close: $helpers.close
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(!Object.keys(savedReports).length ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'no-reports': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'no-reports-img': true
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(h("h1", function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Saved reports");;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("p", function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("You haven't saved any reports yet.");;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'user-filter': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'user-filter-border-spacer': true,
	                  'border-spacer-left': true
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(jade_mixins['user-filter-option'].call(this, "All", "all"));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'user-filter-border-spacer': true,
	                  'border-spacer-left': true
	                }
	              }));
	              __jade_nodes = __jade_nodes.concat(jade_mixins['user-filter-option'].call(this, "Your reports", "yours"));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'user-filter-border-spacer': true,
	                  'border-spacer-right': true
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'reportlist-search': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'reportlist-search-icon': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                  "attrs": {
	                    icon: "search"
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(reportsDrawerOpen ? function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(h("div", {
	                  "hook": {
	                    insert: $helpers.focusSearchInput
	                  },
	                  "class": {
	                    'input-focuser': true
	                  }
	                }));;
	                return __jade_nodes;
	              }.call(this) : undefined);
	              __jade_nodes = __jade_nodes.concat(h("input", {
	                "props": {
	                  type: "text",
	                  placeholder: "Search reports",
	                  value: reportsDrawer.nameFilter
	                },
	                "on": {
	                  blur: $helpers.changeNameFilter,
	                  change: $helpers.changeNameFilter,
	                  focusout: $helpers.changeNameFilter,
	                  input: $helpers.changeNameFilter,
	                  keypress: $helpers.changeNameFilter
	                }
	              }));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));
	            __jade_nodes = __jade_nodes.concat(h("div", {
	              "class": {
	                'reports': true
	              }
	            }, function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'report-row': true,
	                  'header-row': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat(jade_mixins['header-col'].call(this, "Report", "title"));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['header-col'].call(this, "Creator", "user"));
	                __jade_nodes = __jade_nodes.concat(jade_mixins['header-col'].call(this, "Last modified", "modified"));;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat($helpers.reportsForDisplay().reduce(function (__each_nodes, report, $index) {
	                return __each_nodes.concat(function () {
	                  var __jade_nodes = [];
	                  var initials = report.user.split(' ').map(function (s) {
	                    return s[0];
	                  }).join('').toUpperCase();
	                  var icon = report.displayOptions.chartType;
	                  __jade_nodes = __jade_nodes.concat(h("div", {
	                    "on": {
	                      click: function click() {
	                        return $helpers.clickReport(report);
	                      }
	                    },
	                    "class": Object.assign({}, _defineProperty({}, "icon-" + icon, !!icon), {
	                      'report-row': true,
	                      'body-row': true
	                    })
	                  }, function () {
	                    var __jade_nodes = [];
	                    __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                      "attrs": {
	                        icon: icon,
	                        empty: !icon
	                      }
	                    }));
	                    __jade_nodes = __jade_nodes.concat(h("div", {
	                      "class": {
	                        'report-col': true,
	                        'reportlist-field-title': true
	                      }
	                    }, function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(report.matches ? function () {
	                        var __jade_nodes = [];
	                        __jade_nodes = __jade_nodes.concat(jade_mixins['highlight-matches'].call(this, report.matches));;
	                        return __jade_nodes;
	                      }.call(this) : function () {
	                        var __jade_nodes = [];
	                        __jade_nodes = __jade_nodes.concat(report.title);;
	                        return __jade_nodes;
	                      }.call(this));;
	                      return __jade_nodes;
	                    }.call(this).filter(Boolean)));
	                    __jade_nodes = __jade_nodes.concat(h("div", {
	                      "class": {
	                        'report-col': true,
	                        'reportlist-field-user': true
	                      }
	                    }, function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat(h("div", {
	                        "class": Object.assign({}, _defineProperty({}, "color-" + initials[0], true), {
	                          'user-icon': true
	                        })
	                      }, function () {
	                        var __jade_nodes = [];
	                        __jade_nodes = __jade_nodes.concat(initials);
	                        __jade_nodes = __jade_nodes.concat(h("irb-mp-tooltip", [report.user || '']));;
	                        return __jade_nodes;
	                      }.call(this).filter(Boolean)));;
	                      return __jade_nodes;
	                    }.call(this).filter(Boolean)));
	                    __jade_nodes = __jade_nodes.concat(h("div", {
	                      "class": {
	                        'report-col': true,
	                        'reportlist-field-modified': true
	                      }
	                    }, [report.modifiedStr || '']));
	                    __jade_nodes = __jade_nodes.concat(h("div", {
	                      "class": {
	                        'report-col': true,
	                        'delete': true
	                      }
	                    }, function () {
	                      var __jade_nodes = [];
	                      __jade_nodes = __jade_nodes.concat($helpers.hasWritePermissions() ? function () {
	                        var __jade_nodes = [];
	                        __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	                          "attrs": {
	                            icon: "trashcan"
	                          },
	                          "on": {
	                            click: function click(ev) {
	                              return $helpers.clickDelete(ev, report);
	                            }
	                          }
	                        }));;
	                        return __jade_nodes;
	                      }.call(this) : undefined);;
	                      return __jade_nodes;
	                    }.call(this).filter(Boolean)));;
	                    return __jade_nodes;
	                  }.call(this).filter(Boolean)));;
	                  return __jade_nodes;
	                }.call(this));
	              }, []));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this));
	          __jade_nodes = __jade_nodes.concat(h("div", {
	            "class": {
	              'drawer-close-wrapper': true
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("svg-icon", {
	              "attrs": {
	                icon: 'x'
	              },
	              "on": {
	                click: $helpers.close
	              }
	            }));;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        var toDelete = reportsDrawer.confirmDelete;
	        __jade_nodes = __jade_nodes.concat(h("irb-mp-confirm-delete", {
	          "attrs": {
	            open: !!toDelete,
	            closeable: true
	          },
	          "on": {
	            change: function change(ev) {
	              return $helpers.handleConfirmChange(ev.detail.state);
	            },
	            submit: function submit(ev) {
	              return ev.detail.action === "confirm" && $helpers.deleteReport(toDelete);
	            }
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(toDelete ? function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat(h("div", function () {
	              var __jade_nodes = [];
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'mp-confirm-delete-title': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Delete report");;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));
	              __jade_nodes = __jade_nodes.concat(h("div", {
	                "class": {
	                  'mp-confirm-delete-description': true
	                }
	              }, function () {
	                var __jade_nodes = [];
	                __jade_nodes = __jade_nodes.concat("Are you sure you want to delete \"" + toDelete.title + "\"?");
	                __jade_nodes = __jade_nodes.concat(" This action is permanent and cannot be undone.");;
	                return __jade_nodes;
	              }.call(this).filter(Boolean)));;
	              return __jade_nodes;
	            }.call(this).filter(Boolean)));;
	            return __jade_nodes;
	          }.call(this) : undefined);;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "reportsDrawer" in locals ? locals.reportsDrawer : typeof reportsDrawer !== "undefined" ? reportsDrawer : undefined, "reportsDrawerOpen" in locals ? locals.reportsDrawerOpen : typeof reportsDrawerOpen !== "undefined" ? reportsDrawerOpen : undefined, "savedReports" in locals ? locals.savedReports : typeof savedReports !== "undefined" ? savedReports : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 452 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 453 */,
/* 454 */,
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _jade_template_fn(locals) {
	  locals = locals || {};;;
	  var result_of_with = function ($component, $helpers, Object, learnActive, learnModalStepIndex, newCachedData, projectHasEvents, report, util) {
	    var h = __webpack_require__(232).h;
	    var learnStep = learnActive && util.getLearnStep(report, learnModalStepIndex);
	    var learnClass = learnStep && learnStep.cls;
	    return {
	      value: h("div", {
	        "class": Object.assign({}, _defineProperty({
	          'error-no-project-data': !projectHasEvents,
	          'irb-learn-active': !!learnActive
	        }, learnClass, !!learnClass), {
	          'irb-app': true
	        })
	      }, function () {
	        var __jade_nodes = [];
	        __jade_nodes = __jade_nodes.concat(learnActive ? function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat($component.child("irb-learn"));;
	          return __jade_nodes;
	        }.call(this) : undefined);
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'irb-main-panel': true,
	            'top-panel': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat($component.child("irb-header"));
	          __jade_nodes = __jade_nodes.concat($component.child("irb-builder"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'irb-main-panel': true,
	            'bottom-panel': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat($component.child("irb-result"));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat(h("div", {
	          "class": {
	            'refresh-toast-stage': true
	          }
	        }, function () {
	          var __jade_nodes = [];
	          __jade_nodes = __jade_nodes.concat(h("mp-toast", {
	            "attrs": {
	              cta: "Refresh",
	              hide: !newCachedData
	            },
	            "on": {
	              action: $helpers.toastSelected,
	              close: $helpers.toastClosed
	            }
	          }, function () {
	            var __jade_nodes = [];
	            __jade_nodes = __jade_nodes.concat("You have new data.");;
	            return __jade_nodes;
	          }.call(this).filter(Boolean)));;
	          return __jade_nodes;
	        }.call(this).filter(Boolean)));
	        __jade_nodes = __jade_nodes.concat($component.child("irb-reports"));;
	        return __jade_nodes;
	      }.call(this).filter(Boolean))
	    };
	  }.call(this, "$component" in locals ? locals.$component : typeof $component !== "undefined" ? $component : undefined, "$helpers" in locals ? locals.$helpers : typeof $helpers !== "undefined" ? $helpers : undefined, "Object" in locals ? locals.Object : typeof Object !== "undefined" ? Object : undefined, "learnActive" in locals ? locals.learnActive : typeof learnActive !== "undefined" ? learnActive : undefined, "learnModalStepIndex" in locals ? locals.learnModalStepIndex : typeof learnModalStepIndex !== "undefined" ? learnModalStepIndex : undefined, "newCachedData" in locals ? locals.newCachedData : typeof newCachedData !== "undefined" ? newCachedData : undefined, "projectHasEvents" in locals ? locals.projectHasEvents : typeof projectHasEvents !== "undefined" ? projectHasEvents : undefined, "report" in locals ? locals.report : typeof report !== "undefined" ? report : undefined, "util" in locals ? locals.util : typeof util !== "undefined" ? util : undefined);
	  if (result_of_with) return result_of_with.value;
	}
	module.exports = _jade_template_fn;

/***/ },
/* 456 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ },
/* 457 */,
/* 458 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"grey-150":"#e5eaef","segment-color-1":"#23588c","segment-color-2":"#106eca","segment-color-3":"#4ba8ff","segment-color-4":"#24d2ef","segment-color-5":"#46b5ab","segment-color-6":"#6fe9aa","segment-color-7":"#f1842b","segment-color-8":"#ffd209"};

/***/ }
/******/ ]);